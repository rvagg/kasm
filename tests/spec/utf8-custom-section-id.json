{
  "bin": {
    "utf8-custom-section-id.0.wasm": "AGFzbQEAAAAAAgGA",
    "utf8-custom-section-id.1.wasm": "AGFzbQEAAAAAAgGP",
    "utf8-custom-section-id.10.wasm": "AGFzbQEAAAAAAwLAvw==",
    "utf8-custom-section-id.100.wasm": "AGFzbQEAAAAABQTx/YCA",
    "utf8-custom-section-id.101.wasm": "AGFzbQEAAAAABQTzAICA",
    "utf8-custom-section-id.102.wasm": "AGFzbQEAAAAABQTzf4CA",
    "utf8-custom-section-id.103.wasm": "AGFzbQEAAAAABQTzwICA",
    "utf8-custom-section-id.104.wasm": "AGFzbQEAAAAABQTz/YCA",
    "utf8-custom-section-id.105.wasm": "AGFzbQEAAAAABQT0AICA",
    "utf8-custom-section-id.106.wasm": "AGFzbQEAAAAABQT0f4CA",
    "utf8-custom-section-id.107.wasm": "AGFzbQEAAAAABQT0kICA",
    "utf8-custom-section-id.108.wasm": "AGFzbQEAAAAABQT0v4CA",
    "utf8-custom-section-id.109.wasm": "AGFzbQEAAAAABQT0wICA",
    "utf8-custom-section-id.11.wasm": "AGFzbQEAAAAAAwLBgA==",
    "utf8-custom-section-id.110.wasm": "AGFzbQEAAAAABQT0/YCA",
    "utf8-custom-section-id.111.wasm": "AGFzbQEAAAAABQT1gICA",
    "utf8-custom-section-id.112.wasm": "AGFzbQEAAAAABQT3gICA",
    "utf8-custom-section-id.113.wasm": "AGFzbQEAAAAABQT3v7+/",
    "utf8-custom-section-id.114.wasm": "AGFzbQEAAAAABQTwkACQ",
    "utf8-custom-section-id.115.wasm": "AGFzbQEAAAAABQTwkH+Q",
    "utf8-custom-section-id.116.wasm": "AGFzbQEAAAAABQTwkMCQ",
    "utf8-custom-section-id.117.wasm": "AGFzbQEAAAAABQTwkP2Q",
    "utf8-custom-section-id.118.wasm": "AGFzbQEAAAAABQTxgACA",
    "utf8-custom-section-id.119.wasm": "AGFzbQEAAAAABQTxgH+A",
    "utf8-custom-section-id.12.wasm": "AGFzbQEAAAAAAwLBvw==",
    "utf8-custom-section-id.120.wasm": "AGFzbQEAAAAABQTxgMCA",
    "utf8-custom-section-id.121.wasm": "AGFzbQEAAAAABQTxgP2A",
    "utf8-custom-section-id.122.wasm": "AGFzbQEAAAAABQTzgACA",
    "utf8-custom-section-id.123.wasm": "AGFzbQEAAAAABQTzgH+A",
    "utf8-custom-section-id.124.wasm": "AGFzbQEAAAAABQTzgMCA",
    "utf8-custom-section-id.125.wasm": "AGFzbQEAAAAABQTzgP2A",
    "utf8-custom-section-id.126.wasm": "AGFzbQEAAAAABQT0gACA",
    "utf8-custom-section-id.127.wasm": "AGFzbQEAAAAABQT0gH+A",
    "utf8-custom-section-id.128.wasm": "AGFzbQEAAAAABQT0gMCA",
    "utf8-custom-section-id.129.wasm": "AGFzbQEAAAAABQT0gP2A",
    "utf8-custom-section-id.13.wasm": "AGFzbQEAAAAAAwLCAA==",
    "utf8-custom-section-id.130.wasm": "AGFzbQEAAAAABQTwkJAA",
    "utf8-custom-section-id.131.wasm": "AGFzbQEAAAAABQTwkJB/",
    "utf8-custom-section-id.132.wasm": "AGFzbQEAAAAABQTwkJDA",
    "utf8-custom-section-id.133.wasm": "AGFzbQEAAAAABQTwkJD9",
    "utf8-custom-section-id.134.wasm": "AGFzbQEAAAAABQTxgIAA",
    "utf8-custom-section-id.135.wasm": "AGFzbQEAAAAABQTxgIB/",
    "utf8-custom-section-id.136.wasm": "AGFzbQEAAAAABQTxgIDA",
    "utf8-custom-section-id.137.wasm": "AGFzbQEAAAAABQTxgID9",
    "utf8-custom-section-id.138.wasm": "AGFzbQEAAAAABQTzgIAA",
    "utf8-custom-section-id.139.wasm": "AGFzbQEAAAAABQTzgIB/",
    "utf8-custom-section-id.14.wasm": "AGFzbQEAAAAAAwLCfw==",
    "utf8-custom-section-id.140.wasm": "AGFzbQEAAAAABQTzgIDA",
    "utf8-custom-section-id.141.wasm": "AGFzbQEAAAAABQTzgID9",
    "utf8-custom-section-id.142.wasm": "AGFzbQEAAAAABQT0gIAA",
    "utf8-custom-section-id.143.wasm": "AGFzbQEAAAAABQT0gIB/",
    "utf8-custom-section-id.144.wasm": "AGFzbQEAAAAABQT0gIDA",
    "utf8-custom-section-id.145.wasm": "AGFzbQEAAAAABQT0gID9",
    "utf8-custom-section-id.146.wasm": "AGFzbQEAAAAABwb4gICAgIA=",
    "utf8-custom-section-id.147.wasm": "AGFzbQEAAAAABQT4gICA",
    "utf8-custom-section-id.148.wasm": "AGFzbQEAAAAABgX4gICAIw==",
    "utf8-custom-section-id.149.wasm": "AGFzbQEAAAAABAP4gIA=",
    "utf8-custom-section-id.15.wasm": "AGFzbQEAAAAAAwLCwA==",
    "utf8-custom-section-id.150.wasm": "AGFzbQEAAAAABQT4gIAj",
    "utf8-custom-section-id.151.wasm": "AGFzbQEAAAAAAwL4gA==",
    "utf8-custom-section-id.152.wasm": "AGFzbQEAAAAABAP4gCM=",
    "utf8-custom-section-id.153.wasm": "AGFzbQEAAAAAAgH4",
    "utf8-custom-section-id.154.wasm": "AGFzbQEAAAAAAwL4Iw==",
    "utf8-custom-section-id.155.wasm": "AGFzbQEAAAAABgX4gICAgA==",
    "utf8-custom-section-id.156.wasm": "AGFzbQEAAAAABgX7v7+/vw==",
    "utf8-custom-section-id.157.wasm": "AGFzbQEAAAAACAf8gICAgICA",
    "utf8-custom-section-id.158.wasm": "AGFzbQEAAAAABgX8gICAgA==",
    "utf8-custom-section-id.159.wasm": "AGFzbQEAAAAABwb8gICAgCM=",
    "utf8-custom-section-id.16.wasm": "AGFzbQEAAAAAAwLC/Q==",
    "utf8-custom-section-id.160.wasm": "AGFzbQEAAAAABQT8gICA",
    "utf8-custom-section-id.161.wasm": "AGFzbQEAAAAABgX8gICAIw==",
    "utf8-custom-section-id.162.wasm": "AGFzbQEAAAAABAP8gIA=",
    "utf8-custom-section-id.163.wasm": "AGFzbQEAAAAABQT8gIAj",
    "utf8-custom-section-id.164.wasm": "AGFzbQEAAAAAAwL8gA==",
    "utf8-custom-section-id.165.wasm": "AGFzbQEAAAAABAP8gCM=",
    "utf8-custom-section-id.166.wasm": "AGFzbQEAAAAAAgH8",
    "utf8-custom-section-id.167.wasm": "AGFzbQEAAAAAAwL8Iw==",
    "utf8-custom-section-id.168.wasm": "AGFzbQEAAAAABwb8gICAgIA=",
    "utf8-custom-section-id.169.wasm": "AGFzbQEAAAAABwb9v7+/v78=",
    "utf8-custom-section-id.17.wasm": "AGFzbQEAAAAAAwLfAA==",
    "utf8-custom-section-id.170.wasm": "AGFzbQEAAAAAAgH+",
    "utf8-custom-section-id.171.wasm": "AGFzbQEAAAAAAgH/",
    "utf8-custom-section-id.172.wasm": "AGFzbQEAAAAAAwL+/w==",
    "utf8-custom-section-id.173.wasm": "AGFzbQEAAAAABQQAAP7/",
    "utf8-custom-section-id.174.wasm": "AGFzbQEAAAAAAwL//g==",
    "utf8-custom-section-id.175.wasm": "AGFzbQEAAAAABQT//gAA",
    "utf8-custom-section-id.18.wasm": "AGFzbQEAAAAAAwLffw==",
    "utf8-custom-section-id.19.wasm": "AGFzbQEAAAAAAwLfwA==",
    "utf8-custom-section-id.2.wasm": "AGFzbQEAAAAAAgGQ",
    "utf8-custom-section-id.20.wasm": "AGFzbQEAAAAAAwLf/Q==",
    "utf8-custom-section-id.21.wasm": "AGFzbQEAAAAABQThgICA",
    "utf8-custom-section-id.22.wasm": "AGFzbQEAAAAAAwLhgA==",
    "utf8-custom-section-id.23.wasm": "AGFzbQEAAAAABAPhgC4=",
    "utf8-custom-section-id.24.wasm": "AGFzbQEAAAAAAgHh",
    "utf8-custom-section-id.25.wasm": "AGFzbQEAAAAAAwLhLg==",
    "utf8-custom-section-id.26.wasm": "AGFzbQEAAAAABAPgAKA=",
    "utf8-custom-section-id.27.wasm": "AGFzbQEAAAAABAPgf6A=",
    "utf8-custom-section-id.28.wasm": "AGFzbQEAAAAABAPggIA=",
    "utf8-custom-section-id.29.wasm": "AGFzbQEAAAAABAPggKA=",
    "utf8-custom-section-id.3.wasm": "AGFzbQEAAAAAAgGf",
    "utf8-custom-section-id.30.wasm": "AGFzbQEAAAAABAPgn6A=",
    "utf8-custom-section-id.31.wasm": "AGFzbQEAAAAABAPgn78=",
    "utf8-custom-section-id.32.wasm": "AGFzbQEAAAAABAPgwKA=",
    "utf8-custom-section-id.33.wasm": "AGFzbQEAAAAABAPg/aA=",
    "utf8-custom-section-id.34.wasm": "AGFzbQEAAAAABAPhAIA=",
    "utf8-custom-section-id.35.wasm": "AGFzbQEAAAAABAPhf4A=",
    "utf8-custom-section-id.36.wasm": "AGFzbQEAAAAABAPhwIA=",
    "utf8-custom-section-id.37.wasm": "AGFzbQEAAAAABAPh/YA=",
    "utf8-custom-section-id.38.wasm": "AGFzbQEAAAAABAPsAIA=",
    "utf8-custom-section-id.39.wasm": "AGFzbQEAAAAABAPsf4A=",
    "utf8-custom-section-id.4.wasm": "AGFzbQEAAAAAAgGg",
    "utf8-custom-section-id.40.wasm": "AGFzbQEAAAAABAPswIA=",
    "utf8-custom-section-id.41.wasm": "AGFzbQEAAAAABAPs/YA=",
    "utf8-custom-section-id.42.wasm": "AGFzbQEAAAAABAPtAIA=",
    "utf8-custom-section-id.43.wasm": "AGFzbQEAAAAABAPtf4A=",
    "utf8-custom-section-id.44.wasm": "AGFzbQEAAAAABAPtoIA=",
    "utf8-custom-section-id.45.wasm": "AGFzbQEAAAAABAPtoL8=",
    "utf8-custom-section-id.46.wasm": "AGFzbQEAAAAABAPtv4A=",
    "utf8-custom-section-id.47.wasm": "AGFzbQEAAAAABAPtv78=",
    "utf8-custom-section-id.48.wasm": "AGFzbQEAAAAABAPtwIA=",
    "utf8-custom-section-id.49.wasm": "AGFzbQEAAAAABAPt/YA=",
    "utf8-custom-section-id.5.wasm": "AGFzbQEAAAAAAgG/",
    "utf8-custom-section-id.50.wasm": "AGFzbQEAAAAABAPuAIA=",
    "utf8-custom-section-id.51.wasm": "AGFzbQEAAAAABAPuf4A=",
    "utf8-custom-section-id.52.wasm": "AGFzbQEAAAAABAPuwIA=",
    "utf8-custom-section-id.53.wasm": "AGFzbQEAAAAABAPu/YA=",
    "utf8-custom-section-id.54.wasm": "AGFzbQEAAAAABAPvAIA=",
    "utf8-custom-section-id.55.wasm": "AGFzbQEAAAAABAPvf4A=",
    "utf8-custom-section-id.56.wasm": "AGFzbQEAAAAABAPvwIA=",
    "utf8-custom-section-id.57.wasm": "AGFzbQEAAAAABAPv/YA=",
    "utf8-custom-section-id.58.wasm": "AGFzbQEAAAAABAPgoAA=",
    "utf8-custom-section-id.59.wasm": "AGFzbQEAAAAABAPgoH8=",
    "utf8-custom-section-id.6.wasm": "AGFzbQEAAAAABAPCgIA=",
    "utf8-custom-section-id.60.wasm": "AGFzbQEAAAAABAPgoMA=",
    "utf8-custom-section-id.61.wasm": "AGFzbQEAAAAABAPgoP0=",
    "utf8-custom-section-id.62.wasm": "AGFzbQEAAAAABAPhgAA=",
    "utf8-custom-section-id.63.wasm": "AGFzbQEAAAAABAPhgH8=",
    "utf8-custom-section-id.64.wasm": "AGFzbQEAAAAABAPhgMA=",
    "utf8-custom-section-id.65.wasm": "AGFzbQEAAAAABAPhgP0=",
    "utf8-custom-section-id.66.wasm": "AGFzbQEAAAAABAPsgAA=",
    "utf8-custom-section-id.67.wasm": "AGFzbQEAAAAABAPsgH8=",
    "utf8-custom-section-id.68.wasm": "AGFzbQEAAAAABAPsgMA=",
    "utf8-custom-section-id.69.wasm": "AGFzbQEAAAAABAPsgP0=",
    "utf8-custom-section-id.7.wasm": "AGFzbQEAAAAAAgHC",
    "utf8-custom-section-id.70.wasm": "AGFzbQEAAAAABAPtgAA=",
    "utf8-custom-section-id.71.wasm": "AGFzbQEAAAAABAPtgH8=",
    "utf8-custom-section-id.72.wasm": "AGFzbQEAAAAABAPtgMA=",
    "utf8-custom-section-id.73.wasm": "AGFzbQEAAAAABAPtgP0=",
    "utf8-custom-section-id.74.wasm": "AGFzbQEAAAAABAPugAA=",
    "utf8-custom-section-id.75.wasm": "AGFzbQEAAAAABAPugH8=",
    "utf8-custom-section-id.76.wasm": "AGFzbQEAAAAABAPugMA=",
    "utf8-custom-section-id.77.wasm": "AGFzbQEAAAAABAPugP0=",
    "utf8-custom-section-id.78.wasm": "AGFzbQEAAAAABAPvgAA=",
    "utf8-custom-section-id.79.wasm": "AGFzbQEAAAAABAPvgH8=",
    "utf8-custom-section-id.8.wasm": "AGFzbQEAAAAAAwLCLg==",
    "utf8-custom-section-id.80.wasm": "AGFzbQEAAAAABAPvgMA=",
    "utf8-custom-section-id.81.wasm": "AGFzbQEAAAAABAPvgP0=",
    "utf8-custom-section-id.82.wasm": "AGFzbQEAAAAABgXxgICAgA==",
    "utf8-custom-section-id.83.wasm": "AGFzbQEAAAAABAPxgIA=",
    "utf8-custom-section-id.84.wasm": "AGFzbQEAAAAABQTxgIAj",
    "utf8-custom-section-id.85.wasm": "AGFzbQEAAAAAAwLxgA==",
    "utf8-custom-section-id.86.wasm": "AGFzbQEAAAAABAPxgCM=",
    "utf8-custom-section-id.87.wasm": "AGFzbQEAAAAAAgHx",
    "utf8-custom-section-id.88.wasm": "AGFzbQEAAAAAAwLxIw==",
    "utf8-custom-section-id.89.wasm": "AGFzbQEAAAAABQTwAJCQ",
    "utf8-custom-section-id.9.wasm": "AGFzbQEAAAAAAwLAgA==",
    "utf8-custom-section-id.90.wasm": "AGFzbQEAAAAABQTwf5CQ",
    "utf8-custom-section-id.91.wasm": "AGFzbQEAAAAABQTwgICA",
    "utf8-custom-section-id.92.wasm": "AGFzbQEAAAAABQTwgJCQ",
    "utf8-custom-section-id.93.wasm": "AGFzbQEAAAAABQTwj5CQ",
    "utf8-custom-section-id.94.wasm": "AGFzbQEAAAAABQTwj7+/",
    "utf8-custom-section-id.95.wasm": "AGFzbQEAAAAABQTwwJCQ",
    "utf8-custom-section-id.96.wasm": "AGFzbQEAAAAABQTw/ZCQ",
    "utf8-custom-section-id.97.wasm": "AGFzbQEAAAAABQTxAICA",
    "utf8-custom-section-id.98.wasm": "AGFzbQEAAAAABQTxf4CA",
    "utf8-custom-section-id.99.wasm": "AGFzbQEAAAAABQTxwICA"
  },
  "spec": {"source_filename": "/workspace/wasm-spec/test/core/utf8-custom-section-id.wast",
 "commands": [
  {"type": "assert_malformed", "line": 7, "filename": "utf8-custom-section-id.0.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 17, "filename": "utf8-custom-section-id.1.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 27, "filename": "utf8-custom-section-id.2.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 37, "filename": "utf8-custom-section-id.3.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 47, "filename": "utf8-custom-section-id.4.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 57, "filename": "utf8-custom-section-id.5.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 69, "filename": "utf8-custom-section-id.6.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 79, "filename": "utf8-custom-section-id.7.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 89, "filename": "utf8-custom-section-id.8.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 101, "filename": "utf8-custom-section-id.9.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 111, "filename": "utf8-custom-section-id.10.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 121, "filename": "utf8-custom-section-id.11.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 131, "filename": "utf8-custom-section-id.12.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 141, "filename": "utf8-custom-section-id.13.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 151, "filename": "utf8-custom-section-id.14.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 161, "filename": "utf8-custom-section-id.15.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 171, "filename": "utf8-custom-section-id.16.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 181, "filename": "utf8-custom-section-id.17.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 191, "filename": "utf8-custom-section-id.18.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 201, "filename": "utf8-custom-section-id.19.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 211, "filename": "utf8-custom-section-id.20.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 223, "filename": "utf8-custom-section-id.21.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 233, "filename": "utf8-custom-section-id.22.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 243, "filename": "utf8-custom-section-id.23.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 253, "filename": "utf8-custom-section-id.24.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 263, "filename": "utf8-custom-section-id.25.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 275, "filename": "utf8-custom-section-id.26.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 285, "filename": "utf8-custom-section-id.27.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 295, "filename": "utf8-custom-section-id.28.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 305, "filename": "utf8-custom-section-id.29.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 315, "filename": "utf8-custom-section-id.30.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 325, "filename": "utf8-custom-section-id.31.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 335, "filename": "utf8-custom-section-id.32.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 345, "filename": "utf8-custom-section-id.33.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 355, "filename": "utf8-custom-section-id.34.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 365, "filename": "utf8-custom-section-id.35.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 375, "filename": "utf8-custom-section-id.36.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 385, "filename": "utf8-custom-section-id.37.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 395, "filename": "utf8-custom-section-id.38.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 405, "filename": "utf8-custom-section-id.39.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 415, "filename": "utf8-custom-section-id.40.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 425, "filename": "utf8-custom-section-id.41.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 435, "filename": "utf8-custom-section-id.42.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 445, "filename": "utf8-custom-section-id.43.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 455, "filename": "utf8-custom-section-id.44.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 465, "filename": "utf8-custom-section-id.45.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 475, "filename": "utf8-custom-section-id.46.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 485, "filename": "utf8-custom-section-id.47.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 495, "filename": "utf8-custom-section-id.48.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 505, "filename": "utf8-custom-section-id.49.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 515, "filename": "utf8-custom-section-id.50.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 525, "filename": "utf8-custom-section-id.51.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 535, "filename": "utf8-custom-section-id.52.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 545, "filename": "utf8-custom-section-id.53.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 555, "filename": "utf8-custom-section-id.54.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 565, "filename": "utf8-custom-section-id.55.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 575, "filename": "utf8-custom-section-id.56.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 585, "filename": "utf8-custom-section-id.57.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 597, "filename": "utf8-custom-section-id.58.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 607, "filename": "utf8-custom-section-id.59.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 617, "filename": "utf8-custom-section-id.60.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 627, "filename": "utf8-custom-section-id.61.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 637, "filename": "utf8-custom-section-id.62.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 647, "filename": "utf8-custom-section-id.63.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 657, "filename": "utf8-custom-section-id.64.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 667, "filename": "utf8-custom-section-id.65.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 677, "filename": "utf8-custom-section-id.66.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 687, "filename": "utf8-custom-section-id.67.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 697, "filename": "utf8-custom-section-id.68.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 707, "filename": "utf8-custom-section-id.69.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 717, "filename": "utf8-custom-section-id.70.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 727, "filename": "utf8-custom-section-id.71.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 737, "filename": "utf8-custom-section-id.72.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 747, "filename": "utf8-custom-section-id.73.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 757, "filename": "utf8-custom-section-id.74.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 767, "filename": "utf8-custom-section-id.75.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 777, "filename": "utf8-custom-section-id.76.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 787, "filename": "utf8-custom-section-id.77.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 797, "filename": "utf8-custom-section-id.78.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 807, "filename": "utf8-custom-section-id.79.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 817, "filename": "utf8-custom-section-id.80.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 827, "filename": "utf8-custom-section-id.81.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 839, "filename": "utf8-custom-section-id.82.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 849, "filename": "utf8-custom-section-id.83.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 859, "filename": "utf8-custom-section-id.84.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 869, "filename": "utf8-custom-section-id.85.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 879, "filename": "utf8-custom-section-id.86.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 889, "filename": "utf8-custom-section-id.87.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 899, "filename": "utf8-custom-section-id.88.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 911, "filename": "utf8-custom-section-id.89.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 921, "filename": "utf8-custom-section-id.90.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 931, "filename": "utf8-custom-section-id.91.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 941, "filename": "utf8-custom-section-id.92.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 951, "filename": "utf8-custom-section-id.93.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 961, "filename": "utf8-custom-section-id.94.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 971, "filename": "utf8-custom-section-id.95.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 981, "filename": "utf8-custom-section-id.96.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 991, "filename": "utf8-custom-section-id.97.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1001, "filename": "utf8-custom-section-id.98.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1011, "filename": "utf8-custom-section-id.99.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1021, "filename": "utf8-custom-section-id.100.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1031, "filename": "utf8-custom-section-id.101.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1041, "filename": "utf8-custom-section-id.102.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1051, "filename": "utf8-custom-section-id.103.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1061, "filename": "utf8-custom-section-id.104.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1071, "filename": "utf8-custom-section-id.105.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1081, "filename": "utf8-custom-section-id.106.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1091, "filename": "utf8-custom-section-id.107.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1101, "filename": "utf8-custom-section-id.108.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1111, "filename": "utf8-custom-section-id.109.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1121, "filename": "utf8-custom-section-id.110.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1131, "filename": "utf8-custom-section-id.111.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1141, "filename": "utf8-custom-section-id.112.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1151, "filename": "utf8-custom-section-id.113.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1163, "filename": "utf8-custom-section-id.114.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1173, "filename": "utf8-custom-section-id.115.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1183, "filename": "utf8-custom-section-id.116.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1193, "filename": "utf8-custom-section-id.117.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1203, "filename": "utf8-custom-section-id.118.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1213, "filename": "utf8-custom-section-id.119.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1223, "filename": "utf8-custom-section-id.120.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1233, "filename": "utf8-custom-section-id.121.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1243, "filename": "utf8-custom-section-id.122.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1253, "filename": "utf8-custom-section-id.123.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1263, "filename": "utf8-custom-section-id.124.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1273, "filename": "utf8-custom-section-id.125.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1283, "filename": "utf8-custom-section-id.126.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1293, "filename": "utf8-custom-section-id.127.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1303, "filename": "utf8-custom-section-id.128.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1313, "filename": "utf8-custom-section-id.129.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1325, "filename": "utf8-custom-section-id.130.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1335, "filename": "utf8-custom-section-id.131.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1345, "filename": "utf8-custom-section-id.132.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1355, "filename": "utf8-custom-section-id.133.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1365, "filename": "utf8-custom-section-id.134.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1375, "filename": "utf8-custom-section-id.135.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1385, "filename": "utf8-custom-section-id.136.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1395, "filename": "utf8-custom-section-id.137.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1405, "filename": "utf8-custom-section-id.138.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1415, "filename": "utf8-custom-section-id.139.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1425, "filename": "utf8-custom-section-id.140.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1435, "filename": "utf8-custom-section-id.141.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1445, "filename": "utf8-custom-section-id.142.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1455, "filename": "utf8-custom-section-id.143.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1465, "filename": "utf8-custom-section-id.144.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1475, "filename": "utf8-custom-section-id.145.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1487, "filename": "utf8-custom-section-id.146.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1497, "filename": "utf8-custom-section-id.147.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1507, "filename": "utf8-custom-section-id.148.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1517, "filename": "utf8-custom-section-id.149.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1527, "filename": "utf8-custom-section-id.150.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1537, "filename": "utf8-custom-section-id.151.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1547, "filename": "utf8-custom-section-id.152.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1557, "filename": "utf8-custom-section-id.153.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1567, "filename": "utf8-custom-section-id.154.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1579, "filename": "utf8-custom-section-id.155.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1589, "filename": "utf8-custom-section-id.156.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1601, "filename": "utf8-custom-section-id.157.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1611, "filename": "utf8-custom-section-id.158.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1621, "filename": "utf8-custom-section-id.159.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1631, "filename": "utf8-custom-section-id.160.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1641, "filename": "utf8-custom-section-id.161.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1651, "filename": "utf8-custom-section-id.162.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1661, "filename": "utf8-custom-section-id.163.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1671, "filename": "utf8-custom-section-id.164.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1681, "filename": "utf8-custom-section-id.165.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1691, "filename": "utf8-custom-section-id.166.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1701, "filename": "utf8-custom-section-id.167.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1713, "filename": "utf8-custom-section-id.168.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1723, "filename": "utf8-custom-section-id.169.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1735, "filename": "utf8-custom-section-id.170.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1745, "filename": "utf8-custom-section-id.171.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1755, "filename": "utf8-custom-section-id.172.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1765, "filename": "utf8-custom-section-id.173.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1775, "filename": "utf8-custom-section-id.174.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1785, "filename": "utf8-custom-section-id.175.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}]},
  "code": [
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\02\" \"\\01\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\02\" \"\\01\\8f\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\02\" \"\\01\\90\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\02\" \"\\01\\9f\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\02\" \"\\01\\a0\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\02\" \"\\01\\bf\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\c2\\80\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\02\" \"\\01\\c2\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\03\" \"\\02\\c2\\2e\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\03\" \"\\02\\c0\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\03\" \"\\02\\c0\\bf\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\03\" \"\\02\\c1\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\03\" \"\\02\\c1\\bf\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\03\" \"\\02\\c2\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\03\" \"\\02\\c2\\7f\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\03\" \"\\02\\c2\\c0\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\03\" \"\\02\\c2\\fd\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\03\" \"\\02\\df\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\03\" \"\\02\\df\\7f\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\03\" \"\\02\\df\\c0\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\03\" \"\\02\\df\\fd\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\e1\\80\\80\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\03\" \"\\02\\e1\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\e1\\80\\2e\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\02\" \"\\01\\e1\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\03\" \"\\02\\e1\\2e\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\e0\\00\\a0\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\e0\\7f\\a0\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\e0\\80\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\e0\\80\\a0\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\e0\\9f\\a0\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\e0\\9f\\bf\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\e0\\c0\\a0\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\e0\\fd\\a0\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\e1\\00\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\e1\\7f\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\e1\\c0\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\e1\\fd\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\ec\\00\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\ec\\7f\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\ec\\c0\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\ec\\fd\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\ed\\00\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\ed\\7f\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\ed\\a0\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\ed\\a0\\bf\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\ed\\bf\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\ed\\bf\\bf\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\ed\\c0\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\ed\\fd\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\ee\\00\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\ee\\7f\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\ee\\c0\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\ee\\fd\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\ef\\00\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\ef\\7f\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\ef\\c0\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\ef\\fd\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\e0\\a0\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\e0\\a0\\7f\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\e0\\a0\\c0\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\e0\\a0\\fd\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\e1\\80\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\e1\\80\\7f\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\e1\\80\\c0\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\e1\\80\\fd\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\ec\\80\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\ec\\80\\7f\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\ec\\80\\c0\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\ec\\80\\fd\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\ed\\80\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\ed\\80\\7f\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\ed\\80\\c0\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\ed\\80\\fd\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\ee\\80\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\ee\\80\\7f\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\ee\\80\\c0\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\ee\\80\\fd\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\ef\\80\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\ef\\80\\7f\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\ef\\80\\c0\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\ef\\80\\fd\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\06\" \"\\05\\f1\\80\\80\\80\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\f1\\80\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f1\\80\\80\\23\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\03\" \"\\02\\f1\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\f1\\80\\23\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\02\" \"\\01\\f1\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\03\" \"\\02\\f1\\23\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f0\\00\\90\\90\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f0\\7f\\90\\90\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f0\\80\\80\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f0\\80\\90\\90\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f0\\8f\\90\\90\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f0\\8f\\bf\\bf\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f0\\c0\\90\\90\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f0\\fd\\90\\90\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f1\\00\\80\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f1\\7f\\80\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f1\\c0\\80\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f1\\fd\\80\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f3\\00\\80\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f3\\7f\\80\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f3\\c0\\80\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f3\\fd\\80\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f4\\00\\80\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f4\\7f\\80\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f4\\90\\80\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f4\\bf\\80\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f4\\c0\\80\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f4\\fd\\80\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f5\\80\\80\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f7\\80\\80\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f7\\bf\\bf\\bf\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f0\\90\\00\\90\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f0\\90\\7f\\90\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f0\\90\\c0\\90\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f0\\90\\fd\\90\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f1\\80\\00\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f1\\80\\7f\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f1\\80\\c0\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f1\\80\\fd\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f3\\80\\00\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f3\\80\\7f\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f3\\80\\c0\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f3\\80\\fd\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f4\\80\\00\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f4\\80\\7f\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f4\\80\\c0\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f4\\80\\fd\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f0\\90\\90\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f0\\90\\90\\7f\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f0\\90\\90\\c0\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f0\\90\\90\\fd\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f1\\80\\80\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f1\\80\\80\\7f\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f1\\80\\80\\c0\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f1\\80\\80\\fd\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f3\\80\\80\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f3\\80\\80\\7f\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f3\\80\\80\\c0\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f3\\80\\80\\fd\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f4\\80\\80\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f4\\80\\80\\7f\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f4\\80\\80\\c0\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f4\\80\\80\\fd\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\07\" \"\\06\\f8\\80\\80\\80\\80\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f8\\80\\80\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\06\" \"\\05\\f8\\80\\80\\80\\23\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\f8\\80\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\f8\\80\\80\\23\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\03\" \"\\02\\f8\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\f8\\80\\23\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\02\" \"\\01\\f8\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\03\" \"\\02\\f8\\23\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\06\" \"\\05\\f8\\80\\80\\80\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\06\" \"\\05\\fb\\bf\\bf\\bf\\bf\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\08\" \"\\07\\fc\\80\\80\\80\\80\\80\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\06\" \"\\05\\fc\\80\\80\\80\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\07\" \"\\06\\fc\\80\\80\\80\\80\\23\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\fc\\80\\80\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\06\" \"\\05\\fc\\80\\80\\80\\23\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\fc\\80\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\fc\\80\\80\\23\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\03\" \"\\02\\fc\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\04\" \"\\03\\fc\\80\\23\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\02\" \"\\01\\fc\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\03\" \"\\02\\fc\\23\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\07\" \"\\06\\fc\\80\\80\\80\\80\\80\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\07\" \"\\06\\fd\\bf\\bf\\bf\\bf\\bf\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\02\" \"\\01\\fe\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\02\" \"\\01\\ff\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\03\" \"\\02\\fe\\ff\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\00\\00\\fe\\ff\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\03\" \"\\02\\ff\\fe\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\00\\05\" \"\\04\\ff\\fe\\00\\00\" ) \"malformed UTF-8 encoding\")"
  ]
}
