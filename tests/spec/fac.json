{
  "bin": {
    "fac.0.wasm": "AGFzbQEAAAABGgRgAX4BfmABfgJ+fmACfn4Dfn5+YAJ+fgF+AwkIAAAAAAABAgAHSwYHZmFjLXJlYwAADWZhYy1yZWMtbmFtZWQAAQhmYWMtaXRlcgACDmZhYy1pdGVyLW5hbWVkAAMHZmFjLW9wdAAEB2ZhYy1zc2EABwrrAQgXACAAQgBRBH5CAQUgACAAQgF9EAB+CwsXACAAQgBRBH5CAQUgACAAQgF9EAF+CwsvAQJ+IAAhAUIBIQICQANAIAFCAFEEQAwCBSABIAJ+IQIgAUIBfSEBCwwACwsgAgsvAQJ+IAAhAUIBIQICQANAIAFCAFEEQAwCBSABIAJ+IQIgAUIBfSEBCwwACwsgAgssAQF+QgEhAQJAIABCAlMNAANAIAEgAH4hASAAQn98IQAgAEIBVQ0ACwsgAQsGACAAIAALCAAgACABIAALHABCASAAAwMQBhAGfhAGQgF9EAVCAFYNABoPCws="
  },
  "spec": {"source_filename": "/home/rvagg/git/webassembly/spec/test/core/fac.wast",
 "commands": [
  {"type": "module", "line": 1, "filename": "fac.0.wasm"}, 
  {"type": "assert_return", "line": 102, "action": {"type": "invoke", "field": "fac-rec", "args": [{"type": "i64", "value": "25"}]}, "expected": [{"type": "i64", "value": "7034535277573963776"}]}, 
  {"type": "assert_return", "line": 103, "action": {"type": "invoke", "field": "fac-iter", "args": [{"type": "i64", "value": "25"}]}, "expected": [{"type": "i64", "value": "7034535277573963776"}]}, 
  {"type": "assert_return", "line": 104, "action": {"type": "invoke", "field": "fac-rec-named", "args": [{"type": "i64", "value": "25"}]}, "expected": [{"type": "i64", "value": "7034535277573963776"}]}, 
  {"type": "assert_return", "line": 105, "action": {"type": "invoke", "field": "fac-iter-named", "args": [{"type": "i64", "value": "25"}]}, "expected": [{"type": "i64", "value": "7034535277573963776"}]}, 
  {"type": "assert_return", "line": 106, "action": {"type": "invoke", "field": "fac-opt", "args": [{"type": "i64", "value": "25"}]}, "expected": [{"type": "i64", "value": "7034535277573963776"}]}, 
  {"type": "assert_return", "line": 107, "action": {"type": "invoke", "field": "fac-ssa", "args": [{"type": "i64", "value": "25"}]}, "expected": [{"type": "i64", "value": "7034535277573963776"}]}, 
  {"type": "assert_exhaustion", "line": 109, "action": {"type": "invoke", "field": "fac-rec", "args": [{"type": "i64", "value": "1073741824"}]}, "text": "call stack exhausted", "expected": [{"type": "i64"}]}]},
  "code": [
    "(module \n  (func (export \"fac-rec\") (param i64) (result i64) (if (result i64) (i64.eq (local.get 0) (i64.const 0)) (then (i64.const 1)) (else (i64.mul (local.get 0) (call 0 (i64.sub (local.get 0) (i64.const 1)))) ) ) )\n  (func $fac-rec-named (export \"fac-rec-named\") (param $n i64) (result i64) (if (result i64) (i64.eq (local.get $n) (i64.const 0)) (then (i64.const 1)) (else (i64.mul (local.get $n) (call $fac-rec-named (i64.sub (local.get $n) (i64.const 1))) ) ) ) )\n  (func (export \"fac-iter\") (param i64) (result i64) (local i64 i64) (local.set 1 (local.get 0)) (local.set 2 (i64.const 1)) (block (loop (if (i64.eq (local.get 1) (i64.const 0)) (then (br 2)) (else (local.set 2 (i64.mul (local.get 1) (local.get 2))) (local.set 1 (i64.sub (local.get 1) (i64.const 1))) ) ) (br 0) ) ) (local.get 2) )\n  (func (export \"fac-iter-named\") (param $n i64) (result i64) (local $i i64) (local $res i64) (local.set $i (local.get $n)) (local.set $res (i64.const 1)) (block $done (loop $loop (if (i64.eq (local.get $i) (i64.const 0)) (then (br $done)) (else (local.set $res (i64.mul (local.get $i) (local.get $res))) (local.set $i (i64.sub (local.get $i) (i64.const 1))) ) ) (br $loop) ) ) (local.get $res) )\n  (func (export \"fac-opt\") (param i64) (result i64) (local i64) (local.set 1 (i64.const 1)) (block (br_if 0 (i64.lt_s (local.get 0) (i64.const 2))) (loop (local.set 1 (i64.mul (local.get 1) (local.get 0))) (local.set 0 (i64.add (local.get 0) (i64.const -1))) (br_if 0 (i64.gt_s (local.get 0) (i64.const 1))) ) ) (local.get 1) )\n  (func $pick0 (param i64) (result i64 i64) (local.get 0) (local.get 0) )\n  (func $pick1 (param i64 i64) (result i64 i64 i64) (local.get 0) (local.get 1) (local.get 0) )\n  (func (export \"fac-ssa\") (param i64) (result i64) (i64.const 1) (local.get 0) (loop $l (param i64 i64) (result i64) (call $pick1) (call $pick1) (i64.mul) (call $pick1) (i64.const 1) (i64.sub) (call $pick0) (i64.const 0) (i64.gt_u) (br_if $l) (drop) (return) ) ))",
    "(assert_return (invoke \"fac-rec\" (i64.const 25)) (i64.const 7034535277573963776))",
    "(assert_return (invoke \"fac-iter\" (i64.const 25)) (i64.const 7034535277573963776))",
    "(assert_return (invoke \"fac-rec-named\" (i64.const 25)) (i64.const 7034535277573963776))",
    "(assert_return (invoke \"fac-iter-named\" (i64.const 25)) (i64.const 7034535277573963776))",
    "(assert_return (invoke \"fac-opt\" (i64.const 25)) (i64.const 7034535277573963776))",
    "(assert_return (invoke \"fac-ssa\" (i64.const 25)) (i64.const 7034535277573963776))",
    "(assert_exhaustion (invoke \"fac-rec\" (i64.const 1073741824)) \"call stack exhausted\")"
  ],
  "dump": {
    "fac.0.wasm": {
      "header": "\nfac.0.wasm:\tfile format wasm 0x1\n\nSections:\n\n     Type start=0x0000000a end=0x00000024 (size=0x0000001a) count: 4\n Function start=0x00000026 end=0x0000002f (size=0x00000009) count: 8\n   Export start=0x00000031 end=0x0000007c (size=0x0000004b) count: 6\n     Code start=0x0000007f end=0x0000016a (size=0x000000eb) count: 8\n",
      "details": "\nfac.0.wasm:\tfile format wasm 0x1\n\nSection Details:\n\nType[4]:\n - type[0] (i64) -> i64\n - type[1] (i64) -> (i64, i64)\n - type[2] (i64, i64) -> (i64, i64, i64)\n - type[3] (i64, i64) -> i64\nFunction[8]:\n - func[0] sig=0 <fac-rec>\n - func[1] sig=0 <fac-rec-named>\n - func[2] sig=0 <fac-iter>\n - func[3] sig=0 <fac-iter-named>\n - func[4] sig=0 <fac-opt>\n - func[5] sig=1\n - func[6] sig=2\n - func[7] sig=0 <fac-ssa>\nExport[6]:\n - func[0] <fac-rec> -> \"fac-rec\"\n - func[1] <fac-rec-named> -> \"fac-rec-named\"\n - func[2] <fac-iter> -> \"fac-iter\"\n - func[3] <fac-iter-named> -> \"fac-iter-named\"\n - func[4] <fac-opt> -> \"fac-opt\"\n - func[7] <fac-ssa> -> \"fac-ssa\"\nCode[8]:\n - func[0] size=23 <fac-rec>\n - func[1] size=23 <fac-rec-named>\n - func[2] size=47 <fac-iter>\n - func[3] size=47 <fac-iter-named>\n - func[4] size=44 <fac-opt>\n - func[5] size=6\n - func[6] size=8\n - func[7] size=28 <fac-ssa>\n",
      "disassemble": "\nfac.0.wasm:\tfile format wasm 0x1\n\nCode Disassembly:\n\n000081 func[0] <fac-rec>:\n 000082: 20 00                      | local.get 0\n 000084: 42 00                      | i64.const 0\n 000086: 51                         | i64.eq\n 000087: 04 7e                      | if i64\n 000089: 42 01                      |   i64.const 1\n 00008b: 05                         | else\n 00008c: 20 00                      |   local.get 0\n 00008e: 20 00                      |   local.get 0\n 000090: 42 01                      |   i64.const 1\n 000092: 7d                         |   i64.sub\n 000093: 10 00                      |   call 0 <fac-rec>\n 000095: 7e                         |   i64.mul\n 000096: 0b                         | end\n 000097: 0b                         | end\n000099 func[1] <fac-rec-named>:\n 00009a: 20 00                      | local.get 0\n 00009c: 42 00                      | i64.const 0\n 00009e: 51                         | i64.eq\n 00009f: 04 7e                      | if i64\n 0000a1: 42 01                      |   i64.const 1\n 0000a3: 05                         | else\n 0000a4: 20 00                      |   local.get 0\n 0000a6: 20 00                      |   local.get 0\n 0000a8: 42 01                      |   i64.const 1\n 0000aa: 7d                         |   i64.sub\n 0000ab: 10 01                      |   call 1 <fac-rec-named>\n 0000ad: 7e                         |   i64.mul\n 0000ae: 0b                         | end\n 0000af: 0b                         | end\n0000b1 func[2] <fac-iter>:\n 0000b2: 02 7e                      | local[1..2] type=i64\n 0000b4: 20 00                      | local.get 0\n 0000b6: 21 01                      | local.set 1\n 0000b8: 42 01                      | i64.const 1\n 0000ba: 21 02                      | local.set 2\n 0000bc: 02 40                      | block\n 0000be: 03 40                      |   loop\n 0000c0: 20 01                      |     local.get 1\n 0000c2: 42 00                      |     i64.const 0\n 0000c4: 51                         |     i64.eq\n 0000c5: 04 40                      |     if\n 0000c7: 0c 02                      |       br 2\n 0000c9: 05                         |     else\n 0000ca: 20 01                      |       local.get 1\n 0000cc: 20 02                      |       local.get 2\n 0000ce: 7e                         |       i64.mul\n 0000cf: 21 02                      |       local.set 2\n 0000d1: 20 01                      |       local.get 1\n 0000d3: 42 01                      |       i64.const 1\n 0000d5: 7d                         |       i64.sub\n 0000d6: 21 01                      |       local.set 1\n 0000d8: 0b                         |     end\n 0000d9: 0c 00                      |     br 0\n 0000db: 0b                         |   end\n 0000dc: 0b                         | end\n 0000dd: 20 02                      | local.get 2\n 0000df: 0b                         | end\n0000e1 func[3] <fac-iter-named>:\n 0000e2: 02 7e                      | local[1..2] type=i64\n 0000e4: 20 00                      | local.get 0\n 0000e6: 21 01                      | local.set 1\n 0000e8: 42 01                      | i64.const 1\n 0000ea: 21 02                      | local.set 2\n 0000ec: 02 40                      | block\n 0000ee: 03 40                      |   loop\n 0000f0: 20 01                      |     local.get 1\n 0000f2: 42 00                      |     i64.const 0\n 0000f4: 51                         |     i64.eq\n 0000f5: 04 40                      |     if\n 0000f7: 0c 02                      |       br 2\n 0000f9: 05                         |     else\n 0000fa: 20 01                      |       local.get 1\n 0000fc: 20 02                      |       local.get 2\n 0000fe: 7e                         |       i64.mul\n 0000ff: 21 02                      |       local.set 2\n 000101: 20 01                      |       local.get 1\n 000103: 42 01                      |       i64.const 1\n 000105: 7d                         |       i64.sub\n 000106: 21 01                      |       local.set 1\n 000108: 0b                         |     end\n 000109: 0c 00                      |     br 0\n 00010b: 0b                         |   end\n 00010c: 0b                         | end\n 00010d: 20 02                      | local.get 2\n 00010f: 0b                         | end\n000111 func[4] <fac-opt>:\n 000112: 01 7e                      | local[1] type=i64\n 000114: 42 01                      | i64.const 1\n 000116: 21 01                      | local.set 1\n 000118: 02 40                      | block\n 00011a: 20 00                      |   local.get 0\n 00011c: 42 02                      |   i64.const 2\n 00011e: 53                         |   i64.lt_s\n 00011f: 0d 00                      |   br_if 0\n 000121: 03 40                      |   loop\n 000123: 20 01                      |     local.get 1\n 000125: 20 00                      |     local.get 0\n 000127: 7e                         |     i64.mul\n 000128: 21 01                      |     local.set 1\n 00012a: 20 00                      |     local.get 0\n 00012c: 42 7f                      |     i64.const 18446744073709551615\n 00012e: 7c                         |     i64.add\n 00012f: 21 00                      |     local.set 0\n 000131: 20 00                      |     local.get 0\n 000133: 42 01                      |     i64.const 1\n 000135: 55                         |     i64.gt_s\n 000136: 0d 00                      |     br_if 0\n 000138: 0b                         |   end\n 000139: 0b                         | end\n 00013a: 20 01                      | local.get 1\n 00013c: 0b                         | end\n00013e func[5]:\n 00013f: 20 00                      | local.get 0\n 000141: 20 00                      | local.get 0\n 000143: 0b                         | end\n000145 func[6]:\n 000146: 20 00                      | local.get 0\n 000148: 20 01                      | local.get 1\n 00014a: 20 00                      | local.get 0\n 00014c: 0b                         | end\n00014e func[7] <fac-ssa>:\n 00014f: 42 01                      | i64.const 1\n 000151: 20 00                      | local.get 0\n 000153: 03 03                      | loop type[3]\n 000155: 10 06                      |   call 6\n 000157: 10 06                      |   call 6\n 000159: 7e                         |   i64.mul\n 00015a: 10 06                      |   call 6\n 00015c: 42 01                      |   i64.const 1\n 00015e: 7d                         |   i64.sub\n 00015f: 10 05                      |   call 5\n 000161: 42 00                      |   i64.const 0\n 000163: 56                         |   i64.gt_u\n 000164: 0d 00                      |   br_if 0\n 000166: 1a                         |   drop\n 000167: 0f                         |   return\n 000168: 0b                         | end\n 000169: 0b                         | end\n"
    }
  }
}
