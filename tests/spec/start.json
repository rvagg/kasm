{
  "bin": {
    "start.0.wasm": "AGFzbQEAAAABBAFgAAADAgEACAEBCgQBAgAL",
    "start.1.wasm": "AGFzbQEAAAABBQFgAAF/AwIBAAgBAAoHAQUAQQAPCw==",
    "start.2.wasm": "AGFzbQEAAAABBQFgAX8AAwIBAAgBAAoEAQIACw==",
    "start.3.wasm": "AGFzbQEAAAABCAJgAABgAAF/AwQDAAEABQQBAQEBBw0CA2luYwAAA2dldAABCAECCiMDDwBBAEEALQAAQQFqOgAACwgAQQAtAAAPCwgAEAAQABAACwsHAQBBAAsBQQ==",
    "start.4.wasm": "AGFzbQEAAAABCAJgAABgAAF/AwQDAAEABQQBAQEBBw0CA2luYwAAA2dldAABCAECCiMDDwBBAEEALQAAQQFqOgAACwgAQQAtAAAPCwgAEAAQABAACwsHAQBBAAsBQQ==",
    "start.5.wasm": "AGFzbQEAAAABCAJgAX8AYAAAAhYBCHNwZWN0ZXN0CXByaW50X2kzMgAAAwIBAQgBAQoIAQYAQQEQAAs=",
    "start.6.wasm": "AGFzbQEAAAABCAJgAX8AYAAAAhYBCHNwZWN0ZXN0CXByaW50X2kzMgAAAwIBAQgBAQoIAQYAQQIQAAs=",
    "start.7.wasm": "AGFzbQEAAAABBAFgAAACEgEIc3BlY3Rlc3QFcHJpbnQAAAgBAA==",
    "start.8.wasm": "AGFzbQEAAAABBAFgAAADAgEACAEACgUBAwAACw=="
  },
  "spec": {"source_filename": "/workspace/wasm-spec/test/core/start.wast",
 "commands": [
  {"type": "assert_invalid", "line": 2, "filename": "start.0.wasm", "text": "unknown function", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 7, "filename": "start.1.wasm", "text": "start function", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 14, "filename": "start.2.wasm", "text": "start function", "module_type": "binary"}, 
  {"type": "module", "line": 21, "filename": "start.3.wasm"}, 
  {"type": "assert_return", "line": 45, "action": {"type": "invoke", "field": "get", "args": []}, "expected": [{"type": "i32", "value": "68"}]}, 
  {"type": "action", "line": 46, "action": {"type": "invoke", "field": "inc", "args": []}, "expected": []}, 
  {"type": "assert_return", "line": 47, "action": {"type": "invoke", "field": "get", "args": []}, "expected": [{"type": "i32", "value": "69"}]}, 
  {"type": "action", "line": 48, "action": {"type": "invoke", "field": "inc", "args": []}, "expected": []}, 
  {"type": "assert_return", "line": 49, "action": {"type": "invoke", "field": "get", "args": []}, "expected": [{"type": "i32", "value": "70"}]}, 
  {"type": "module", "line": 51, "filename": "start.4.wasm"}, 
  {"type": "assert_return", "line": 74, "action": {"type": "invoke", "field": "get", "args": []}, "expected": [{"type": "i32", "value": "68"}]}, 
  {"type": "action", "line": 75, "action": {"type": "invoke", "field": "inc", "args": []}, "expected": []}, 
  {"type": "assert_return", "line": 76, "action": {"type": "invoke", "field": "get", "args": []}, "expected": [{"type": "i32", "value": "69"}]}, 
  {"type": "action", "line": 77, "action": {"type": "invoke", "field": "inc", "args": []}, "expected": []}, 
  {"type": "assert_return", "line": 78, "action": {"type": "invoke", "field": "get", "args": []}, "expected": [{"type": "i32", "value": "70"}]}, 
  {"type": "module", "line": 80, "filename": "start.5.wasm"}, 
  {"type": "module", "line": 86, "filename": "start.6.wasm"}, 
  {"type": "module", "line": 92, "filename": "start.7.wasm"}, 
  {"type": "assert_uninstantiable", "line": 98, "filename": "start.8.wasm", "text": "unreachable", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 103, "filename": "start.9.wat", "text": "multiple start sections", "module_type": "text"}]},
  "code": [
    "(assert_invalid (module (func) (start 1)) \"unknown function\")",
    "(assert_invalid (module (func $main (result i32) (return (i32.const 0))) (start $main) ) \"start function\")",
    "(assert_invalid (module (func $main (param $a i32)) (start $main) ) \"start function\")",
    "(module (memory (data \"A\"))\n  (func $inc (i32.store8 (i32.const 0) (i32.add (i32.load8_u (i32.const 0)) (i32.const 1) ) ) )\n  (func $get (result i32) (return (i32.load8_u (i32.const 0))) )\n  (func $main (call $inc) (call $inc) (call $inc) ) (start $main) (export \"inc\" (func $inc)) (export \"get\" (func $get)))",
    "(assert_return (invoke \"get\") (i32.const 68))",
    "(invoke \"inc\")",
    "(assert_return (invoke \"get\") (i32.const 69))",
    "(invoke \"inc\")",
    "(assert_return (invoke \"get\") (i32.const 70))",
    "(module (memory (data \"A\"))\n  (func $inc (i32.store8 (i32.const 0) (i32.add (i32.load8_u (i32.const 0)) (i32.const 1) ) ) )\n  (func $get (result i32) (return (i32.load8_u (i32.const 0))) )\n  (func $main (call $inc) (call $inc) (call $inc) ) (start 2) (export \"inc\" (func $inc)) (export \"get\" (func $get)))",
    "(assert_return (invoke \"get\") (i32.const 68))",
    "(invoke \"inc\")",
    "(assert_return (invoke \"get\") (i32.const 69))",
    "(invoke \"inc\")",
    "(assert_return (invoke \"get\") (i32.const 70))",
    "(module \n  (func $print_i32 (import \"spectest\" \"print_i32\") (param i32))\n  (func $main (call $print_i32 (i32.const 1))) (start 1))",
    "(module \n  (func $print_i32 (import \"spectest\" \"print_i32\") (param i32))\n  (func $main (call $print_i32 (i32.const 2))) (start $main))",
    "(module \n  (func $print (import \"spectest\" \"print\")) (start $print))",
    "(assert_trap (module (func $main (unreachable)) (start $main)) \"unreachable\")",
    "(assert_malformed (module quote \"(module (func $a (unreachable)) (func $b (unreachable)) (start $a) (start $b))\") \"multiple start sections\")"
  ],
  "dump": {
    "start.3.wasm": {
      "header": "\nstart.3.wasm:\tfile format wasm 0x1\n\nSections:\n\n     Type start=0x0000000a end=0x00000012 (size=0x00000008) count: 2\n Function start=0x00000014 end=0x00000018 (size=0x00000004) count: 3\n   Memory start=0x0000001a end=0x0000001e (size=0x00000004) count: 1\n   Export start=0x00000020 end=0x0000002d (size=0x0000000d) count: 2\n    Start start=0x0000002f end=0x00000030 (size=0x00000001) start: 2\n     Code start=0x00000032 end=0x00000055 (size=0x00000023) count: 3\n     Data start=0x00000057 end=0x0000005e (size=0x00000007) count: 1\n",
      "details": "\nstart.3.wasm:\tfile format wasm 0x1\n\nSection Details:\n\nType[2]:\n - type[0] () -> nil\n - type[1] () -> i32\nFunction[3]:\n - func[0] sig=0 <inc>\n - func[1] sig=1 <get>\n - func[2] sig=0\nMemory[1]:\n - memory[0] pages: initial=1 max=1\nExport[2]:\n - func[0] <inc> -> \"inc\"\n - func[1] <get> -> \"get\"\nStart:\n - start function: 2\nCode[3]:\n - func[0] size=15 <inc>\n - func[1] size=8 <get>\n - func[2] size=8\nData[1]:\n - segment[0] memory=0 size=1 - init i32=0\n  - 0000000: 41                                       A\n",
      "disassemble": "\nstart.3.wasm:\tfile format wasm 0x1\n\nCode Disassembly:\n\n000034 func[0] <inc>:\n 000035: 41 00                      | i32.const 0\n 000037: 41 00                      | i32.const 0\n 000039: 2d 00 00                   | i32.load8_u 0 0\n 00003c: 41 01                      | i32.const 1\n 00003e: 6a                         | i32.add\n 00003f: 3a 00 00                   | i32.store8 0 0\n 000042: 0b                         | end\n000044 func[1] <get>:\n 000045: 41 00                      | i32.const 0\n 000047: 2d 00 00                   | i32.load8_u 0 0\n 00004a: 0f                         | return\n 00004b: 0b                         | end\n00004d func[2]:\n 00004e: 10 00                      | call 0 <inc>\n 000050: 10 00                      | call 0 <inc>\n 000052: 10 00                      | call 0 <inc>\n 000054: 0b                         | end\n"
    },
    "start.4.wasm": {
      "header": "\nstart.4.wasm:\tfile format wasm 0x1\n\nSections:\n\n     Type start=0x0000000a end=0x00000012 (size=0x00000008) count: 2\n Function start=0x00000014 end=0x00000018 (size=0x00000004) count: 3\n   Memory start=0x0000001a end=0x0000001e (size=0x00000004) count: 1\n   Export start=0x00000020 end=0x0000002d (size=0x0000000d) count: 2\n    Start start=0x0000002f end=0x00000030 (size=0x00000001) start: 2\n     Code start=0x00000032 end=0x00000055 (size=0x00000023) count: 3\n     Data start=0x00000057 end=0x0000005e (size=0x00000007) count: 1\n",
      "details": "\nstart.4.wasm:\tfile format wasm 0x1\n\nSection Details:\n\nType[2]:\n - type[0] () -> nil\n - type[1] () -> i32\nFunction[3]:\n - func[0] sig=0 <inc>\n - func[1] sig=1 <get>\n - func[2] sig=0\nMemory[1]:\n - memory[0] pages: initial=1 max=1\nExport[2]:\n - func[0] <inc> -> \"inc\"\n - func[1] <get> -> \"get\"\nStart:\n - start function: 2\nCode[3]:\n - func[0] size=15 <inc>\n - func[1] size=8 <get>\n - func[2] size=8\nData[1]:\n - segment[0] memory=0 size=1 - init i32=0\n  - 0000000: 41                                       A\n",
      "disassemble": "\nstart.4.wasm:\tfile format wasm 0x1\n\nCode Disassembly:\n\n000034 func[0] <inc>:\n 000035: 41 00                      | i32.const 0\n 000037: 41 00                      | i32.const 0\n 000039: 2d 00 00                   | i32.load8_u 0 0\n 00003c: 41 01                      | i32.const 1\n 00003e: 6a                         | i32.add\n 00003f: 3a 00 00                   | i32.store8 0 0\n 000042: 0b                         | end\n000044 func[1] <get>:\n 000045: 41 00                      | i32.const 0\n 000047: 2d 00 00                   | i32.load8_u 0 0\n 00004a: 0f                         | return\n 00004b: 0b                         | end\n00004d func[2]:\n 00004e: 10 00                      | call 0 <inc>\n 000050: 10 00                      | call 0 <inc>\n 000052: 10 00                      | call 0 <inc>\n 000054: 0b                         | end\n"
    },
    "start.5.wasm": {
      "header": "\nstart.5.wasm:\tfile format wasm 0x1\n\nSections:\n\n     Type start=0x0000000a end=0x00000012 (size=0x00000008) count: 2\n   Import start=0x00000014 end=0x0000002a (size=0x00000016) count: 1\n Function start=0x0000002c end=0x0000002e (size=0x00000002) count: 1\n    Start start=0x00000030 end=0x00000031 (size=0x00000001) start: 1\n     Code start=0x00000033 end=0x0000003b (size=0x00000008) count: 1\n",
      "details": "\nstart.5.wasm:\tfile format wasm 0x1\n\nSection Details:\n\nType[2]:\n - type[0] (i32) -> nil\n - type[1] () -> nil\nImport[1]:\n - func[0] sig=0 <spectest.print_i32> <- spectest.print_i32\nFunction[1]:\n - func[1] sig=1\nStart:\n - start function: 1\nCode[1]:\n - func[1] size=6\n",
      "disassemble": "\nstart.5.wasm:\tfile format wasm 0x1\n\nCode Disassembly:\n\n000035 func[1]:\n 000036: 41 01                      | i32.const 1\n 000038: 10 00                      | call 0 <spectest.print_i32>\n 00003a: 0b                         | end\n"
    },
    "start.6.wasm": {
      "header": "\nstart.6.wasm:\tfile format wasm 0x1\n\nSections:\n\n     Type start=0x0000000a end=0x00000012 (size=0x00000008) count: 2\n   Import start=0x00000014 end=0x0000002a (size=0x00000016) count: 1\n Function start=0x0000002c end=0x0000002e (size=0x00000002) count: 1\n    Start start=0x00000030 end=0x00000031 (size=0x00000001) start: 1\n     Code start=0x00000033 end=0x0000003b (size=0x00000008) count: 1\n",
      "details": "\nstart.6.wasm:\tfile format wasm 0x1\n\nSection Details:\n\nType[2]:\n - type[0] (i32) -> nil\n - type[1] () -> nil\nImport[1]:\n - func[0] sig=0 <spectest.print_i32> <- spectest.print_i32\nFunction[1]:\n - func[1] sig=1\nStart:\n - start function: 1\nCode[1]:\n - func[1] size=6\n",
      "disassemble": "\nstart.6.wasm:\tfile format wasm 0x1\n\nCode Disassembly:\n\n000035 func[1]:\n 000036: 41 02                      | i32.const 2\n 000038: 10 00                      | call 0 <spectest.print_i32>\n 00003a: 0b                         | end\n"
    },
    "start.7.wasm": {
      "header": "\nstart.7.wasm:\tfile format wasm 0x1\n\nSections:\n\n     Type start=0x0000000a end=0x0000000e (size=0x00000004) count: 1\n   Import start=0x00000010 end=0x00000022 (size=0x00000012) count: 1\n    Start start=0x00000024 end=0x00000025 (size=0x00000001) start: 0\n",
      "details": "\nstart.7.wasm:\tfile format wasm 0x1\n\nSection Details:\n\nType[1]:\n - type[0] () -> nil\nImport[1]:\n - func[0] sig=0 <spectest.print> <- spectest.print\nStart:\n - start function: 0 <spectest.print>\n",
      "disassemble": "\nstart.7.wasm:\tfile format wasm 0x1\n\nCode Disassembly:\n\n"
    }
  }
}
