{
  "bin": {
    "unreachable.0.wasm": "AGFzbQEAAAABIAdgA39/fwBgAABgAAF/YAABfmAAAX1gAAF8YAJ/fwF/Az08AQACAwQFAgIBAgICAQICAgIBAgIBAgIBAgICAgMCBgYGBgYCAQEBAQEBAQEEBAQDAQEBAQQCAwICAgICBAUBcAEBAQUDAQABBgkBfQFDAAAAAAsHjAg6CHR5cGUtaTMyAAIIdHlwZS1pNjQAAwh0eXBlLWYzMgAECHR5cGUtZjY0AAUNYXMtZnVuYy1maXJzdAAGC2FzLWZ1bmMtbWlkAAcMYXMtZnVuYy1sYXN0AAgNYXMtZnVuYy12YWx1ZQAJDmFzLWJsb2NrLWZpcnN0AAoMYXMtYmxvY2stbWlkAAsNYXMtYmxvY2stbGFzdAAMDmFzLWJsb2NrLXZhbHVlAA0OYXMtYmxvY2stYnJva2UADg1hcy1sb29wLWZpcnN0AA8LYXMtbG9vcC1taWQAEAxhcy1sb29wLWxhc3QAEQ1hcy1sb29wLWJyb2tlABILYXMtYnItdmFsdWUAEw1hcy1icl9pZi1jb25kABQOYXMtYnJfaWYtdmFsdWUAFRNhcy1icl9pZi12YWx1ZS1jb25kABYRYXMtYnJfdGFibGUtaW5kZXgAFxFhcy1icl90YWJsZS12YWx1ZQAYE2FzLWJyX3RhYmxlLXZhbHVlLTIAGRdhcy1icl90YWJsZS12YWx1ZS1pbmRleAAaG2FzLWJyX3RhYmxlLXZhbHVlLWFuZC1pbmRleAAbD2FzLXJldHVybi12YWx1ZQAcCmFzLWlmLWNvbmQAHQphcy1pZi10aGVuAB4KYXMtaWYtZWxzZQAfEmFzLWlmLXRoZW4tbm8tZWxzZQAgD2FzLXNlbGVjdC1maXJzdAAhEGFzLXNlbGVjdC1zZWNvbmQAIg5hcy1zZWxlY3QtY29uZAAjDWFzLWNhbGwtZmlyc3QAJAthcy1jYWxsLW1pZAAlDGFzLWNhbGwtbGFzdAAmFWFzLWNhbGxfaW5kaXJlY3QtZnVuYwAnFmFzLWNhbGxfaW5kaXJlY3QtZmlyc3QAKBRhcy1jYWxsX2luZGlyZWN0LW1pZAApFWFzLWNhbGxfaW5kaXJlY3QtbGFzdAAqEmFzLWxvY2FsLnNldC12YWx1ZQArEmFzLWxvY2FsLnRlZS12YWx1ZQAsE2FzLWdsb2JhbC5zZXQtdmFsdWUALQ9hcy1sb2FkLWFkZHJlc3MALhBhcy1sb2FkTi1hZGRyZXNzAC8QYXMtc3RvcmUtYWRkcmVzcwAwDmFzLXN0b3JlLXZhbHVlADERYXMtc3RvcmVOLWFkZHJlc3MAMg9hcy1zdG9yZU4tdmFsdWUAMxBhcy11bmFyeS1vcGVyYW5kADQOYXMtYmluYXJ5LWxlZnQANQ9hcy1iaW5hcnktcmlnaHQANg9hcy10ZXN0LW9wZXJhbmQANw9hcy1jb21wYXJlLWxlZnQAOBBhcy1jb21wYXJlLXJpZ2h0ADkSYXMtY29udmVydC1vcGVyYW5kADoTYXMtbWVtb3J5Lmdyb3ctc2l6ZQA7CQcBAEEACwEBCrUEPAIACwIACwMAAAsDAAALAwAACwMAAAsFAABBfwsHABAAAEF/CwUAEAAACwUAEAAACwgAAn8AQQILCwoAAn8QAABBAgsLCQACQAEQAAALCwkAAn8BEAAACwsMAAJ/EABBAQwAAAsLCAADfwBBAgsLCgADfxAAAEECCwsJAANAARAAAAsLDwACfwN/EABBAQwBAAsLCwgAAn8ADAALCwgAAkAADQALCw0AAn8AQQENABpBBwsLDQACf0EGAA0AGkEHCwsLAAJAAA4CAAAACwsPAAJ/AEEBDgIAAABBBwsLDwACfwJ/AEEBDgEAAQsLCw4AAn9BBgAOAQAAQQcLCwwAAn8ADgEAAEEICwsEAAAPCwsAAAR/QQAFQQELCwsAIAAEfwAFIAELCwsAIAAEfyABBQALCwoAIAAEQAALIAELCAAAIAAgARsLCAAgAAAgARsLCABBAEEBABsLCQAAQQJBAxABCwkAQQEAQQMQAQsJAEEBQQIAEAELDAAAQQFBAkEDEQAACwwAQQAAQQJBAxEAAAsMAEEAQQEAQQMRAAALDABBAEEBQQIAEQAACwcBAX0AIQALBwEBfQAiAAsFAAAkAAsGAAAqAgALBgAAMAAACw8AAEQAAAAAAAAcQDkDAAsIAEECADcDAAsIAABBBzoAAAsIAEECAD0BAAsEAACMCwYAAEEKagsGAEIKAH0LBAAARQsNAABEAAAAAAAAJEBlCwkAQwAAIEEAXAsEAACnCwUAAEAACw=="
  },
  "spec": {"source_filename": "/workspace/wasm-spec/test/core/unreachable.wast",
 "commands": [
  {"type": "module", "line": 3, "filename": "unreachable.0.wasm"}, 
  {"type": "assert_trap", "line": 221, "action": {"type": "invoke", "field": "type-i32", "args": []}, "text": "unreachable", "expected": [{"type": "i32"}]}, 
  {"type": "assert_trap", "line": 222, "action": {"type": "invoke", "field": "type-i64", "args": []}, "text": "unreachable", "expected": [{"type": "i64"}]}, 
  {"type": "assert_trap", "line": 223, "action": {"type": "invoke", "field": "type-f32", "args": []}, "text": "unreachable", "expected": [{"type": "f32"}]}, 
  {"type": "assert_trap", "line": 224, "action": {"type": "invoke", "field": "type-f64", "args": []}, "text": "unreachable", "expected": [{"type": "f64"}]}, 
  {"type": "assert_trap", "line": 226, "action": {"type": "invoke", "field": "as-func-first", "args": []}, "text": "unreachable", "expected": [{"type": "i32"}]}, 
  {"type": "assert_trap", "line": 227, "action": {"type": "invoke", "field": "as-func-mid", "args": []}, "text": "unreachable", "expected": [{"type": "i32"}]}, 
  {"type": "assert_trap", "line": 228, "action": {"type": "invoke", "field": "as-func-last", "args": []}, "text": "unreachable", "expected": []}, 
  {"type": "assert_trap", "line": 229, "action": {"type": "invoke", "field": "as-func-value", "args": []}, "text": "unreachable", "expected": [{"type": "i32"}]}, 
  {"type": "assert_trap", "line": 231, "action": {"type": "invoke", "field": "as-block-first", "args": []}, "text": "unreachable", "expected": [{"type": "i32"}]}, 
  {"type": "assert_trap", "line": 232, "action": {"type": "invoke", "field": "as-block-mid", "args": []}, "text": "unreachable", "expected": [{"type": "i32"}]}, 
  {"type": "assert_trap", "line": 233, "action": {"type": "invoke", "field": "as-block-last", "args": []}, "text": "unreachable", "expected": []}, 
  {"type": "assert_trap", "line": 234, "action": {"type": "invoke", "field": "as-block-value", "args": []}, "text": "unreachable", "expected": [{"type": "i32"}]}, 
  {"type": "assert_return", "line": 235, "action": {"type": "invoke", "field": "as-block-broke", "args": []}, "expected": [{"type": "i32", "value": "1"}]}, 
  {"type": "assert_trap", "line": 237, "action": {"type": "invoke", "field": "as-loop-first", "args": []}, "text": "unreachable", "expected": [{"type": "i32"}]}, 
  {"type": "assert_trap", "line": 238, "action": {"type": "invoke", "field": "as-loop-mid", "args": []}, "text": "unreachable", "expected": [{"type": "i32"}]}, 
  {"type": "assert_trap", "line": 239, "action": {"type": "invoke", "field": "as-loop-last", "args": []}, "text": "unreachable", "expected": []}, 
  {"type": "assert_return", "line": 240, "action": {"type": "invoke", "field": "as-loop-broke", "args": []}, "expected": [{"type": "i32", "value": "1"}]}, 
  {"type": "assert_trap", "line": 242, "action": {"type": "invoke", "field": "as-br-value", "args": []}, "text": "unreachable", "expected": [{"type": "i32"}]}, 
  {"type": "assert_trap", "line": 244, "action": {"type": "invoke", "field": "as-br_if-cond", "args": []}, "text": "unreachable", "expected": []}, 
  {"type": "assert_trap", "line": 245, "action": {"type": "invoke", "field": "as-br_if-value", "args": []}, "text": "unreachable", "expected": [{"type": "i32"}]}, 
  {"type": "assert_trap", "line": 246, "action": {"type": "invoke", "field": "as-br_if-value-cond", "args": []}, "text": "unreachable", "expected": [{"type": "i32"}]}, 
  {"type": "assert_trap", "line": 248, "action": {"type": "invoke", "field": "as-br_table-index", "args": []}, "text": "unreachable", "expected": []}, 
  {"type": "assert_trap", "line": 249, "action": {"type": "invoke", "field": "as-br_table-value", "args": []}, "text": "unreachable", "expected": [{"type": "i32"}]}, 
  {"type": "assert_trap", "line": 250, "action": {"type": "invoke", "field": "as-br_table-value-2", "args": []}, "text": "unreachable", "expected": [{"type": "i32"}]}, 
  {"type": "assert_trap", "line": 251, "action": {"type": "invoke", "field": "as-br_table-value-index", "args": []}, "text": "unreachable", "expected": [{"type": "i32"}]}, 
  {"type": "assert_trap", "line": 252, "action": {"type": "invoke", "field": "as-br_table-value-and-index", "args": []}, "text": "unreachable", "expected": [{"type": "i32"}]}, 
  {"type": "assert_trap", "line": 254, "action": {"type": "invoke", "field": "as-return-value", "args": []}, "text": "unreachable", "expected": [{"type": "i64"}]}, 
  {"type": "assert_trap", "line": 256, "action": {"type": "invoke", "field": "as-if-cond", "args": []}, "text": "unreachable", "expected": [{"type": "i32"}]}, 
  {"type": "assert_trap", "line": 257, "action": {"type": "invoke", "field": "as-if-then", "args": [{"type": "i32", "value": "1"}, {"type": "i32", "value": "6"}]}, "text": "unreachable", "expected": [{"type": "i32"}]}, 
  {"type": "assert_return", "line": 258, "action": {"type": "invoke", "field": "as-if-then", "args": [{"type": "i32", "value": "0"}, {"type": "i32", "value": "6"}]}, "expected": [{"type": "i32", "value": "6"}]}, 
  {"type": "assert_trap", "line": 259, "action": {"type": "invoke", "field": "as-if-else", "args": [{"type": "i32", "value": "0"}, {"type": "i32", "value": "6"}]}, "text": "unreachable", "expected": [{"type": "i32"}]}, 
  {"type": "assert_return", "line": 260, "action": {"type": "invoke", "field": "as-if-else", "args": [{"type": "i32", "value": "1"}, {"type": "i32", "value": "6"}]}, "expected": [{"type": "i32", "value": "6"}]}, 
  {"type": "assert_trap", "line": 261, "action": {"type": "invoke", "field": "as-if-then-no-else", "args": [{"type": "i32", "value": "1"}, {"type": "i32", "value": "6"}]}, "text": "unreachable", "expected": [{"type": "i32"}]}, 
  {"type": "assert_return", "line": 262, "action": {"type": "invoke", "field": "as-if-then-no-else", "args": [{"type": "i32", "value": "0"}, {"type": "i32", "value": "6"}]}, "expected": [{"type": "i32", "value": "6"}]}, 
  {"type": "assert_trap", "line": 264, "action": {"type": "invoke", "field": "as-select-first", "args": [{"type": "i32", "value": "0"}, {"type": "i32", "value": "6"}]}, "text": "unreachable", "expected": [{"type": "i32"}]}, 
  {"type": "assert_trap", "line": 265, "action": {"type": "invoke", "field": "as-select-first", "args": [{"type": "i32", "value": "1"}, {"type": "i32", "value": "6"}]}, "text": "unreachable", "expected": [{"type": "i32"}]}, 
  {"type": "assert_trap", "line": 266, "action": {"type": "invoke", "field": "as-select-second", "args": [{"type": "i32", "value": "0"}, {"type": "i32", "value": "6"}]}, "text": "unreachable", "expected": [{"type": "i32"}]}, 
  {"type": "assert_trap", "line": 267, "action": {"type": "invoke", "field": "as-select-second", "args": [{"type": "i32", "value": "1"}, {"type": "i32", "value": "6"}]}, "text": "unreachable", "expected": [{"type": "i32"}]}, 
  {"type": "assert_trap", "line": 268, "action": {"type": "invoke", "field": "as-select-cond", "args": []}, "text": "unreachable", "expected": [{"type": "i32"}]}, 
  {"type": "assert_trap", "line": 270, "action": {"type": "invoke", "field": "as-call-first", "args": []}, "text": "unreachable", "expected": []}, 
  {"type": "assert_trap", "line": 271, "action": {"type": "invoke", "field": "as-call-mid", "args": []}, "text": "unreachable", "expected": []}, 
  {"type": "assert_trap", "line": 272, "action": {"type": "invoke", "field": "as-call-last", "args": []}, "text": "unreachable", "expected": []}, 
  {"type": "assert_trap", "line": 274, "action": {"type": "invoke", "field": "as-call_indirect-func", "args": []}, "text": "unreachable", "expected": []}, 
  {"type": "assert_trap", "line": 275, "action": {"type": "invoke", "field": "as-call_indirect-first", "args": []}, "text": "unreachable", "expected": []}, 
  {"type": "assert_trap", "line": 276, "action": {"type": "invoke", "field": "as-call_indirect-mid", "args": []}, "text": "unreachable", "expected": []}, 
  {"type": "assert_trap", "line": 277, "action": {"type": "invoke", "field": "as-call_indirect-last", "args": []}, "text": "unreachable", "expected": []}, 
  {"type": "assert_trap", "line": 279, "action": {"type": "invoke", "field": "as-local.set-value", "args": []}, "text": "unreachable", "expected": []}, 
  {"type": "assert_trap", "line": 280, "action": {"type": "invoke", "field": "as-local.tee-value", "args": []}, "text": "unreachable", "expected": [{"type": "f32"}]}, 
  {"type": "assert_trap", "line": 281, "action": {"type": "invoke", "field": "as-global.set-value", "args": []}, "text": "unreachable", "expected": [{"type": "f32"}]}, 
  {"type": "assert_trap", "line": 283, "action": {"type": "invoke", "field": "as-load-address", "args": []}, "text": "unreachable", "expected": [{"type": "f32"}]}, 
  {"type": "assert_trap", "line": 284, "action": {"type": "invoke", "field": "as-loadN-address", "args": []}, "text": "unreachable", "expected": [{"type": "i64"}]}, 
  {"type": "assert_trap", "line": 286, "action": {"type": "invoke", "field": "as-store-address", "args": []}, "text": "unreachable", "expected": []}, 
  {"type": "assert_trap", "line": 287, "action": {"type": "invoke", "field": "as-store-value", "args": []}, "text": "unreachable", "expected": []}, 
  {"type": "assert_trap", "line": 288, "action": {"type": "invoke", "field": "as-storeN-address", "args": []}, "text": "unreachable", "expected": []}, 
  {"type": "assert_trap", "line": 289, "action": {"type": "invoke", "field": "as-storeN-value", "args": []}, "text": "unreachable", "expected": []}, 
  {"type": "assert_trap", "line": 291, "action": {"type": "invoke", "field": "as-unary-operand", "args": []}, "text": "unreachable", "expected": [{"type": "f32"}]}, 
  {"type": "assert_trap", "line": 293, "action": {"type": "invoke", "field": "as-binary-left", "args": []}, "text": "unreachable", "expected": [{"type": "i32"}]}, 
  {"type": "assert_trap", "line": 294, "action": {"type": "invoke", "field": "as-binary-right", "args": []}, "text": "unreachable", "expected": [{"type": "i64"}]}, 
  {"type": "assert_trap", "line": 296, "action": {"type": "invoke", "field": "as-test-operand", "args": []}, "text": "unreachable", "expected": [{"type": "i32"}]}, 
  {"type": "assert_trap", "line": 298, "action": {"type": "invoke", "field": "as-compare-left", "args": []}, "text": "unreachable", "expected": [{"type": "i32"}]}, 
  {"type": "assert_trap", "line": 299, "action": {"type": "invoke", "field": "as-compare-right", "args": []}, "text": "unreachable", "expected": [{"type": "i32"}]}, 
  {"type": "assert_trap", "line": 301, "action": {"type": "invoke", "field": "as-convert-operand", "args": []}, "text": "unreachable", "expected": [{"type": "i32"}]}, 
  {"type": "assert_trap", "line": 303, "action": {"type": "invoke", "field": "as-memory.grow-size", "args": []}, "text": "unreachable", "expected": [{"type": "i32"}]}]},
  "code": [
    "(module \n  (func $dummy)\n  (func $dummy3 (param i32 i32 i32))\n  (func (export \"type-i32\") (result i32) (unreachable))\n  (func (export \"type-i64\") (result i64) (unreachable))\n  (func (export \"type-f32\") (result f32) (unreachable))\n  (func (export \"type-f64\") (result f64) (unreachable))\n  (func (export \"as-func-first\") (result i32) (unreachable) (i32.const -1) )\n  (func (export \"as-func-mid\") (result i32) (call $dummy) (unreachable) (i32.const -1) )\n  (func (export \"as-func-last\") (call $dummy) (unreachable) )\n  (func (export \"as-func-value\") (result i32) (call $dummy) (unreachable) )\n  (func (export \"as-block-first\") (result i32) (block (result i32) (unreachable) (i32.const 2)) )\n  (func (export \"as-block-mid\") (result i32) (block (result i32) (call $dummy) (unreachable) (i32.const 2)) )\n  (func (export \"as-block-last\") (block (nop) (call $dummy) (unreachable)) )\n  (func (export \"as-block-value\") (result i32) (block (result i32) (nop) (call $dummy) (unreachable)) )\n  (func (export \"as-block-broke\") (result i32) (block (result i32) (call $dummy) (br 0 (i32.const 1)) (unreachable)) )\n  (func (export \"as-loop-first\") (result i32) (loop (result i32) (unreachable) (i32.const 2)) )\n  (func (export \"as-loop-mid\") (result i32) (loop (result i32) (call $dummy) (unreachable) (i32.const 2)) )\n  (func (export \"as-loop-last\") (loop (nop) (call $dummy) (unreachable)) )\n  (func (export \"as-loop-broke\") (result i32) (block (result i32) (loop (result i32) (call $dummy) (br 1 (i32.const 1)) (unreachable)) ) )\n  (func (export \"as-br-value\") (result i32) (block (result i32) (br 0 (unreachable))) )\n  (func (export \"as-br_if-cond\") (block (br_if 0 (unreachable))) )\n  (func (export \"as-br_if-value\") (result i32) (block (result i32) (drop (br_if 0 (unreachable) (i32.const 1))) (i32.const 7) ) )\n  (func (export \"as-br_if-value-cond\") (result i32) (block (result i32) (drop (br_if 0 (i32.const 6) (unreachable))) (i32.const 7) ) )\n  (func (export \"as-br_table-index\") (block (br_table 0 0 0 (unreachable))) )\n  (func (export \"as-br_table-value\") (result i32) (block (result i32) (br_table 0 0 0 (unreachable) (i32.const 1)) (i32.const 7) ) )\n  (func (export \"as-br_table-value-2\") (result i32) (block (result i32) (block (result i32) (br_table 0 1 (unreachable) (i32.const 1))) ) )\n  (func (export \"as-br_table-value-index\") (result i32) (block (result i32) (br_table 0 0 (i32.const 6) (unreachable)) (i32.const 7) ) )\n  (func (export \"as-br_table-value-and-index\") (result i32) (block (result i32) (br_table 0 0 (unreachable)) (i32.const 8)) )\n  (func (export \"as-return-value\") (result i64) (return (unreachable)) )\n  (func (export \"as-if-cond\") (result i32) (if (result i32) (unreachable) (then (i32.const 0)) (else (i32.const 1))) )\n  (func (export \"as-if-then\") (param i32 i32) (result i32) (if (result i32) (local.get 0) (then (unreachable)) (else (local.get 1))) )\n  (func (export \"as-if-else\") (param i32 i32) (result i32) (if (result i32) (local.get 0) (then (local.get 1)) (else (unreachable))) )\n  (func (export \"as-if-then-no-else\") (param i32 i32) (result i32) (if (local.get 0) (then (unreachable))) (local.get 1) )\n  (func (export \"as-select-first\") (param i32 i32) (result i32) (select (unreachable) (local.get 0) (local.get 1)) )\n  (func (export \"as-select-second\") (param i32 i32) (result i32) (select (local.get 0) (unreachable) (local.get 1)) )\n  (func (export \"as-select-cond\") (result i32) (select (i32.const 0) (i32.const 1) (unreachable)) )\n  (func (export \"as-call-first\") (call $dummy3 (unreachable) (i32.const 2) (i32.const 3)) )\n  (func (export \"as-call-mid\") (call $dummy3 (i32.const 1) (unreachable) (i32.const 3)) )\n  (func (export \"as-call-last\") (call $dummy3 (i32.const 1) (i32.const 2) (unreachable)) ) (type $sig (func (param i32 i32 i32))) (table funcref (elem $dummy3))\n  (func (export \"as-call_indirect-func\") (call_indirect (type $sig) (unreachable) (i32.const 1) (i32.const 2) (i32.const 3) ) )\n  (func (export \"as-call_indirect-first\") (call_indirect (type $sig) (i32.const 0) (unreachable) (i32.const 2) (i32.const 3) ) )\n  (func (export \"as-call_indirect-mid\") (call_indirect (type $sig) (i32.const 0) (i32.const 1) (unreachable) (i32.const 3) ) )\n  (func (export \"as-call_indirect-last\") (call_indirect (type $sig) (i32.const 0) (i32.const 1) (i32.const 2) (unreachable) ) )\n  (func (export \"as-local.set-value\") (local f32) (local.set 0 (unreachable)) )\n  (func (export \"as-local.tee-value\") (result f32) (local f32) (local.tee 0 (unreachable)) ) (global $a (mut f32) (f32.const 0))\n  (func (export \"as-global.set-value\") (result f32) (global.set $a (unreachable)) ) (memory 1)\n  (func (export \"as-load-address\") (result f32) (f32.load (unreachable)) )\n  (func (export \"as-loadN-address\") (result i64) (i64.load8_s (unreachable)) )\n  (func (export \"as-store-address\") (f64.store (unreachable) (f64.const 7)) )\n  (func (export \"as-store-value\") (i64.store (i32.const 2) (unreachable)) )\n  (func (export \"as-storeN-address\") (i32.store8 (unreachable) (i32.const 7)) )\n  (func (export \"as-storeN-value\") (i64.store16 (i32.const 2) (unreachable)) )\n  (func (export \"as-unary-operand\") (result f32) (f32.neg (unreachable)) )\n  (func (export \"as-binary-left\") (result i32) (i32.add (unreachable) (i32.const 10)) )\n  (func (export \"as-binary-right\") (result i64) (i64.sub (i64.const 10) (unreachable)) )\n  (func (export \"as-test-operand\") (result i32) (i32.eqz (unreachable)) )\n  (func (export \"as-compare-left\") (result i32) (f64.le (unreachable) (f64.const 10)) )\n  (func (export \"as-compare-right\") (result i32) (f32.ne (f32.const 10) (unreachable)) )\n  (func (export \"as-convert-operand\") (result i32) (i32.wrap_i64 (unreachable)) )\n  (func (export \"as-memory.grow-size\") (result i32) (memory.grow (unreachable)) ))",
    "(assert_trap (invoke \"type-i32\") \"unreachable\")",
    "(assert_trap (invoke \"type-i64\") \"unreachable\")",
    "(assert_trap (invoke \"type-f32\") \"unreachable\")",
    "(assert_trap (invoke \"type-f64\") \"unreachable\")",
    "(assert_trap (invoke \"as-func-first\") \"unreachable\")",
    "(assert_trap (invoke \"as-func-mid\") \"unreachable\")",
    "(assert_trap (invoke \"as-func-last\") \"unreachable\")",
    "(assert_trap (invoke \"as-func-value\") \"unreachable\")",
    "(assert_trap (invoke \"as-block-first\") \"unreachable\")",
    "(assert_trap (invoke \"as-block-mid\") \"unreachable\")",
    "(assert_trap (invoke \"as-block-last\") \"unreachable\")",
    "(assert_trap (invoke \"as-block-value\") \"unreachable\")",
    "(assert_return (invoke \"as-block-broke\") (i32.const 1))",
    "(assert_trap (invoke \"as-loop-first\") \"unreachable\")",
    "(assert_trap (invoke \"as-loop-mid\") \"unreachable\")",
    "(assert_trap (invoke \"as-loop-last\") \"unreachable\")",
    "(assert_return (invoke \"as-loop-broke\") (i32.const 1))",
    "(assert_trap (invoke \"as-br-value\") \"unreachable\")",
    "(assert_trap (invoke \"as-br_if-cond\") \"unreachable\")",
    "(assert_trap (invoke \"as-br_if-value\") \"unreachable\")",
    "(assert_trap (invoke \"as-br_if-value-cond\") \"unreachable\")",
    "(assert_trap (invoke \"as-br_table-index\") \"unreachable\")",
    "(assert_trap (invoke \"as-br_table-value\") \"unreachable\")",
    "(assert_trap (invoke \"as-br_table-value-2\") \"unreachable\")",
    "(assert_trap (invoke \"as-br_table-value-index\") \"unreachable\")",
    "(assert_trap (invoke \"as-br_table-value-and-index\") \"unreachable\")",
    "(assert_trap (invoke \"as-return-value\") \"unreachable\")",
    "(assert_trap (invoke \"as-if-cond\") \"unreachable\")",
    "(assert_trap (invoke \"as-if-then\" (i32.const 1) (i32.const 6)) \"unreachable\")",
    "(assert_return (invoke \"as-if-then\" (i32.const 0) (i32.const 6)) (i32.const 6))",
    "(assert_trap (invoke \"as-if-else\" (i32.const 0) (i32.const 6)) \"unreachable\")",
    "(assert_return (invoke \"as-if-else\" (i32.const 1) (i32.const 6)) (i32.const 6))",
    "(assert_trap (invoke \"as-if-then-no-else\" (i32.const 1) (i32.const 6)) \"unreachable\")",
    "(assert_return (invoke \"as-if-then-no-else\" (i32.const 0) (i32.const 6)) (i32.const 6))",
    "(assert_trap (invoke \"as-select-first\" (i32.const 0) (i32.const 6)) \"unreachable\")",
    "(assert_trap (invoke \"as-select-first\" (i32.const 1) (i32.const 6)) \"unreachable\")",
    "(assert_trap (invoke \"as-select-second\" (i32.const 0) (i32.const 6)) \"unreachable\")",
    "(assert_trap (invoke \"as-select-second\" (i32.const 1) (i32.const 6)) \"unreachable\")",
    "(assert_trap (invoke \"as-select-cond\") \"unreachable\")",
    "(assert_trap (invoke \"as-call-first\") \"unreachable\")",
    "(assert_trap (invoke \"as-call-mid\") \"unreachable\")",
    "(assert_trap (invoke \"as-call-last\") \"unreachable\")",
    "(assert_trap (invoke \"as-call_indirect-func\") \"unreachable\")",
    "(assert_trap (invoke \"as-call_indirect-first\") \"unreachable\")",
    "(assert_trap (invoke \"as-call_indirect-mid\") \"unreachable\")",
    "(assert_trap (invoke \"as-call_indirect-last\") \"unreachable\")",
    "(assert_trap (invoke \"as-local.set-value\") \"unreachable\")",
    "(assert_trap (invoke \"as-local.tee-value\") \"unreachable\")",
    "(assert_trap (invoke \"as-global.set-value\") \"unreachable\")",
    "(assert_trap (invoke \"as-load-address\") \"unreachable\")",
    "(assert_trap (invoke \"as-loadN-address\") \"unreachable\")",
    "(assert_trap (invoke \"as-store-address\") \"unreachable\")",
    "(assert_trap (invoke \"as-store-value\") \"unreachable\")",
    "(assert_trap (invoke \"as-storeN-address\") \"unreachable\")",
    "(assert_trap (invoke \"as-storeN-value\") \"unreachable\")",
    "(assert_trap (invoke \"as-unary-operand\") \"unreachable\")",
    "(assert_trap (invoke \"as-binary-left\") \"unreachable\")",
    "(assert_trap (invoke \"as-binary-right\") \"unreachable\")",
    "(assert_trap (invoke \"as-test-operand\") \"unreachable\")",
    "(assert_trap (invoke \"as-compare-left\") \"unreachable\")",
    "(assert_trap (invoke \"as-compare-right\") \"unreachable\")",
    "(assert_trap (invoke \"as-convert-operand\") \"unreachable\")",
    "(assert_trap (invoke \"as-memory.grow-size\") \"unreachable\")"
  ],
  "dump": {
    "unreachable.0.wasm": {
      "header": "\nunreachable.0.wasm:\tfile format wasm 0x1\n\nSections:\n\n     Type start=0x0000000a end=0x0000002a (size=0x00000020) count: 7\n Function start=0x0000002c end=0x00000069 (size=0x0000003d) count: 60\n    Table start=0x0000006b end=0x00000070 (size=0x00000005) count: 1\n   Memory start=0x00000072 end=0x00000075 (size=0x00000003) count: 1\n   Global start=0x00000077 end=0x00000080 (size=0x00000009) count: 1\n   Export start=0x00000083 end=0x0000048f (size=0x0000040c) count: 58\n     Elem start=0x00000491 end=0x00000498 (size=0x00000007) count: 1\n     Code start=0x0000049b end=0x000006d0 (size=0x00000235) count: 60\n",
      "details": "\nunreachable.0.wasm:\tfile format wasm 0x1\n\nSection Details:\n\nType[7]:\n - type[0] (i32, i32, i32) -> nil\n - type[1] () -> nil\n - type[2] () -> i32\n - type[3] () -> i64\n - type[4] () -> f32\n - type[5] () -> f64\n - type[6] (i32, i32) -> i32\nFunction[60]:\n - func[0] sig=1\n - func[1] sig=0\n - func[2] sig=2 <type-i32>\n - func[3] sig=3 <type-i64>\n - func[4] sig=4 <type-f32>\n - func[5] sig=5 <type-f64>\n - func[6] sig=2 <as-func-first>\n - func[7] sig=2 <as-func-mid>\n - func[8] sig=1 <as-func-last>\n - func[9] sig=2 <as-func-value>\n - func[10] sig=2 <as-block-first>\n - func[11] sig=2 <as-block-mid>\n - func[12] sig=1 <as-block-last>\n - func[13] sig=2 <as-block-value>\n - func[14] sig=2 <as-block-broke>\n - func[15] sig=2 <as-loop-first>\n - func[16] sig=2 <as-loop-mid>\n - func[17] sig=1 <as-loop-last>\n - func[18] sig=2 <as-loop-broke>\n - func[19] sig=2 <as-br-value>\n - func[20] sig=1 <as-br_if-cond>\n - func[21] sig=2 <as-br_if-value>\n - func[22] sig=2 <as-br_if-value-cond>\n - func[23] sig=1 <as-br_table-index>\n - func[24] sig=2 <as-br_table-value>\n - func[25] sig=2 <as-br_table-value-2>\n - func[26] sig=2 <as-br_table-value-index>\n - func[27] sig=2 <as-br_table-value-and-index>\n - func[28] sig=3 <as-return-value>\n - func[29] sig=2 <as-if-cond>\n - func[30] sig=6 <as-if-then>\n - func[31] sig=6 <as-if-else>\n - func[32] sig=6 <as-if-then-no-else>\n - func[33] sig=6 <as-select-first>\n - func[34] sig=6 <as-select-second>\n - func[35] sig=2 <as-select-cond>\n - func[36] sig=1 <as-call-first>\n - func[37] sig=1 <as-call-mid>\n - func[38] sig=1 <as-call-last>\n - func[39] sig=1 <as-call_indirect-func>\n - func[40] sig=1 <as-call_indirect-first>\n - func[41] sig=1 <as-call_indirect-mid>\n - func[42] sig=1 <as-call_indirect-last>\n - func[43] sig=1 <as-local.set-value>\n - func[44] sig=4 <as-local.tee-value>\n - func[45] sig=4 <as-global.set-value>\n - func[46] sig=4 <as-load-address>\n - func[47] sig=3 <as-loadN-address>\n - func[48] sig=1 <as-store-address>\n - func[49] sig=1 <as-store-value>\n - func[50] sig=1 <as-storeN-address>\n - func[51] sig=1 <as-storeN-value>\n - func[52] sig=4 <as-unary-operand>\n - func[53] sig=2 <as-binary-left>\n - func[54] sig=3 <as-binary-right>\n - func[55] sig=2 <as-test-operand>\n - func[56] sig=2 <as-compare-left>\n - func[57] sig=2 <as-compare-right>\n - func[58] sig=2 <as-convert-operand>\n - func[59] sig=2 <as-memory.grow-size>\nTable[1]:\n - table[0] type=funcref initial=1 max=1\nMemory[1]:\n - memory[0] pages: initial=1\nGlobal[1]:\n - global[0] f32 mutable=1 - init f32=0x0p+0\nExport[58]:\n - func[2] <type-i32> -> \"type-i32\"\n - func[3] <type-i64> -> \"type-i64\"\n - func[4] <type-f32> -> \"type-f32\"\n - func[5] <type-f64> -> \"type-f64\"\n - func[6] <as-func-first> -> \"as-func-first\"\n - func[7] <as-func-mid> -> \"as-func-mid\"\n - func[8] <as-func-last> -> \"as-func-last\"\n - func[9] <as-func-value> -> \"as-func-value\"\n - func[10] <as-block-first> -> \"as-block-first\"\n - func[11] <as-block-mid> -> \"as-block-mid\"\n - func[12] <as-block-last> -> \"as-block-last\"\n - func[13] <as-block-value> -> \"as-block-value\"\n - func[14] <as-block-broke> -> \"as-block-broke\"\n - func[15] <as-loop-first> -> \"as-loop-first\"\n - func[16] <as-loop-mid> -> \"as-loop-mid\"\n - func[17] <as-loop-last> -> \"as-loop-last\"\n - func[18] <as-loop-broke> -> \"as-loop-broke\"\n - func[19] <as-br-value> -> \"as-br-value\"\n - func[20] <as-br_if-cond> -> \"as-br_if-cond\"\n - func[21] <as-br_if-value> -> \"as-br_if-value\"\n - func[22] <as-br_if-value-cond> -> \"as-br_if-value-cond\"\n - func[23] <as-br_table-index> -> \"as-br_table-index\"\n - func[24] <as-br_table-value> -> \"as-br_table-value\"\n - func[25] <as-br_table-value-2> -> \"as-br_table-value-2\"\n - func[26] <as-br_table-value-index> -> \"as-br_table-value-index\"\n - func[27] <as-br_table-value-and-index> -> \"as-br_table-value-and-index\"\n - func[28] <as-return-value> -> \"as-return-value\"\n - func[29] <as-if-cond> -> \"as-if-cond\"\n - func[30] <as-if-then> -> \"as-if-then\"\n - func[31] <as-if-else> -> \"as-if-else\"\n - func[32] <as-if-then-no-else> -> \"as-if-then-no-else\"\n - func[33] <as-select-first> -> \"as-select-first\"\n - func[34] <as-select-second> -> \"as-select-second\"\n - func[35] <as-select-cond> -> \"as-select-cond\"\n - func[36] <as-call-first> -> \"as-call-first\"\n - func[37] <as-call-mid> -> \"as-call-mid\"\n - func[38] <as-call-last> -> \"as-call-last\"\n - func[39] <as-call_indirect-func> -> \"as-call_indirect-func\"\n - func[40] <as-call_indirect-first> -> \"as-call_indirect-first\"\n - func[41] <as-call_indirect-mid> -> \"as-call_indirect-mid\"\n - func[42] <as-call_indirect-last> -> \"as-call_indirect-last\"\n - func[43] <as-local.set-value> -> \"as-local.set-value\"\n - func[44] <as-local.tee-value> -> \"as-local.tee-value\"\n - func[45] <as-global.set-value> -> \"as-global.set-value\"\n - func[46] <as-load-address> -> \"as-load-address\"\n - func[47] <as-loadN-address> -> \"as-loadN-address\"\n - func[48] <as-store-address> -> \"as-store-address\"\n - func[49] <as-store-value> -> \"as-store-value\"\n - func[50] <as-storeN-address> -> \"as-storeN-address\"\n - func[51] <as-storeN-value> -> \"as-storeN-value\"\n - func[52] <as-unary-operand> -> \"as-unary-operand\"\n - func[53] <as-binary-left> -> \"as-binary-left\"\n - func[54] <as-binary-right> -> \"as-binary-right\"\n - func[55] <as-test-operand> -> \"as-test-operand\"\n - func[56] <as-compare-left> -> \"as-compare-left\"\n - func[57] <as-compare-right> -> \"as-compare-right\"\n - func[58] <as-convert-operand> -> \"as-convert-operand\"\n - func[59] <as-memory.grow-size> -> \"as-memory.grow-size\"\nElem[1]:\n - segment[0] flags=0 table=0 count=1 - init i32=0\n  - elem[0] = ref.func:1\nCode[60]:\n - func[0] size=2\n - func[1] size=2\n - func[2] size=3 <type-i32>\n - func[3] size=3 <type-i64>\n - func[4] size=3 <type-f32>\n - func[5] size=3 <type-f64>\n - func[6] size=5 <as-func-first>\n - func[7] size=7 <as-func-mid>\n - func[8] size=5 <as-func-last>\n - func[9] size=5 <as-func-value>\n - func[10] size=8 <as-block-first>\n - func[11] size=10 <as-block-mid>\n - func[12] size=9 <as-block-last>\n - func[13] size=9 <as-block-value>\n - func[14] size=12 <as-block-broke>\n - func[15] size=8 <as-loop-first>\n - func[16] size=10 <as-loop-mid>\n - func[17] size=9 <as-loop-last>\n - func[18] size=15 <as-loop-broke>\n - func[19] size=8 <as-br-value>\n - func[20] size=8 <as-br_if-cond>\n - func[21] size=13 <as-br_if-value>\n - func[22] size=13 <as-br_if-value-cond>\n - func[23] size=11 <as-br_table-index>\n - func[24] size=15 <as-br_table-value>\n - func[25] size=15 <as-br_table-value-2>\n - func[26] size=14 <as-br_table-value-index>\n - func[27] size=12 <as-br_table-value-and-index>\n - func[28] size=4 <as-return-value>\n - func[29] size=11 <as-if-cond>\n - func[30] size=11 <as-if-then>\n - func[31] size=11 <as-if-else>\n - func[32] size=10 <as-if-then-no-else>\n - func[33] size=8 <as-select-first>\n - func[34] size=8 <as-select-second>\n - func[35] size=8 <as-select-cond>\n - func[36] size=9 <as-call-first>\n - func[37] size=9 <as-call-mid>\n - func[38] size=9 <as-call-last>\n - func[39] size=12 <as-call_indirect-func>\n - func[40] size=12 <as-call_indirect-first>\n - func[41] size=12 <as-call_indirect-mid>\n - func[42] size=12 <as-call_indirect-last>\n - func[43] size=7 <as-local.set-value>\n - func[44] size=7 <as-local.tee-value>\n - func[45] size=5 <as-global.set-value>\n - func[46] size=6 <as-load-address>\n - func[47] size=6 <as-loadN-address>\n - func[48] size=15 <as-store-address>\n - func[49] size=8 <as-store-value>\n - func[50] size=8 <as-storeN-address>\n - func[51] size=8 <as-storeN-value>\n - func[52] size=4 <as-unary-operand>\n - func[53] size=6 <as-binary-left>\n - func[54] size=6 <as-binary-right>\n - func[55] size=4 <as-test-operand>\n - func[56] size=13 <as-compare-left>\n - func[57] size=9 <as-compare-right>\n - func[58] size=4 <as-convert-operand>\n - func[59] size=5 <as-memory.grow-size>\n",
      "disassemble": "\nunreachable.0.wasm:\tfile format wasm 0x1\n\nCode Disassembly:\n\n00049d func[0]:\n 00049e: 0b                         | end\n0004a0 func[1]:\n 0004a1: 0b                         | end\n0004a3 func[2] <type-i32>:\n 0004a4: 00                         | unreachable\n 0004a5: 0b                         | end\n0004a7 func[3] <type-i64>:\n 0004a8: 00                         | unreachable\n 0004a9: 0b                         | end\n0004ab func[4] <type-f32>:\n 0004ac: 00                         | unreachable\n 0004ad: 0b                         | end\n0004af func[5] <type-f64>:\n 0004b0: 00                         | unreachable\n 0004b1: 0b                         | end\n0004b3 func[6] <as-func-first>:\n 0004b4: 00                         | unreachable\n 0004b5: 41 7f                      | i32.const 4294967295\n 0004b7: 0b                         | end\n0004b9 func[7] <as-func-mid>:\n 0004ba: 10 00                      | call 0\n 0004bc: 00                         | unreachable\n 0004bd: 41 7f                      | i32.const 4294967295\n 0004bf: 0b                         | end\n0004c1 func[8] <as-func-last>:\n 0004c2: 10 00                      | call 0\n 0004c4: 00                         | unreachable\n 0004c5: 0b                         | end\n0004c7 func[9] <as-func-value>:\n 0004c8: 10 00                      | call 0\n 0004ca: 00                         | unreachable\n 0004cb: 0b                         | end\n0004cd func[10] <as-block-first>:\n 0004ce: 02 7f                      | block i32\n 0004d0: 00                         |   unreachable\n 0004d1: 41 02                      |   i32.const 2\n 0004d3: 0b                         | end\n 0004d4: 0b                         | end\n0004d6 func[11] <as-block-mid>:\n 0004d7: 02 7f                      | block i32\n 0004d9: 10 00                      |   call 0\n 0004db: 00                         |   unreachable\n 0004dc: 41 02                      |   i32.const 2\n 0004de: 0b                         | end\n 0004df: 0b                         | end\n0004e1 func[12] <as-block-last>:\n 0004e2: 02 40                      | block\n 0004e4: 01                         |   nop\n 0004e5: 10 00                      |   call 0\n 0004e7: 00                         |   unreachable\n 0004e8: 0b                         | end\n 0004e9: 0b                         | end\n0004eb func[13] <as-block-value>:\n 0004ec: 02 7f                      | block i32\n 0004ee: 01                         |   nop\n 0004ef: 10 00                      |   call 0\n 0004f1: 00                         |   unreachable\n 0004f2: 0b                         | end\n 0004f3: 0b                         | end\n0004f5 func[14] <as-block-broke>:\n 0004f6: 02 7f                      | block i32\n 0004f8: 10 00                      |   call 0\n 0004fa: 41 01                      |   i32.const 1\n 0004fc: 0c 00                      |   br 0\n 0004fe: 00                         |   unreachable\n 0004ff: 0b                         | end\n 000500: 0b                         | end\n000502 func[15] <as-loop-first>:\n 000503: 03 7f                      | loop i32\n 000505: 00                         |   unreachable\n 000506: 41 02                      |   i32.const 2\n 000508: 0b                         | end\n 000509: 0b                         | end\n00050b func[16] <as-loop-mid>:\n 00050c: 03 7f                      | loop i32\n 00050e: 10 00                      |   call 0\n 000510: 00                         |   unreachable\n 000511: 41 02                      |   i32.const 2\n 000513: 0b                         | end\n 000514: 0b                         | end\n000516 func[17] <as-loop-last>:\n 000517: 03 40                      | loop\n 000519: 01                         |   nop\n 00051a: 10 00                      |   call 0\n 00051c: 00                         |   unreachable\n 00051d: 0b                         | end\n 00051e: 0b                         | end\n000520 func[18] <as-loop-broke>:\n 000521: 02 7f                      | block i32\n 000523: 03 7f                      |   loop i32\n 000525: 10 00                      |     call 0\n 000527: 41 01                      |     i32.const 1\n 000529: 0c 01                      |     br 1\n 00052b: 00                         |     unreachable\n 00052c: 0b                         |   end\n 00052d: 0b                         | end\n 00052e: 0b                         | end\n000530 func[19] <as-br-value>:\n 000531: 02 7f                      | block i32\n 000533: 00                         |   unreachable\n 000534: 0c 00                      |   br 0\n 000536: 0b                         | end\n 000537: 0b                         | end\n000539 func[20] <as-br_if-cond>:\n 00053a: 02 40                      | block\n 00053c: 00                         |   unreachable\n 00053d: 0d 00                      |   br_if 0\n 00053f: 0b                         | end\n 000540: 0b                         | end\n000542 func[21] <as-br_if-value>:\n 000543: 02 7f                      | block i32\n 000545: 00                         |   unreachable\n 000546: 41 01                      |   i32.const 1\n 000548: 0d 00                      |   br_if 0\n 00054a: 1a                         |   drop\n 00054b: 41 07                      |   i32.const 7\n 00054d: 0b                         | end\n 00054e: 0b                         | end\n000550 func[22] <as-br_if-value-cond>:\n 000551: 02 7f                      | block i32\n 000553: 41 06                      |   i32.const 6\n 000555: 00                         |   unreachable\n 000556: 0d 00                      |   br_if 0\n 000558: 1a                         |   drop\n 000559: 41 07                      |   i32.const 7\n 00055b: 0b                         | end\n 00055c: 0b                         | end\n00055e func[23] <as-br_table-index>:\n 00055f: 02 40                      | block\n 000561: 00                         |   unreachable\n 000562: 0e 02 00 00 00             |   br_table 0 0 0\n 000567: 0b                         | end\n 000568: 0b                         | end\n00056a func[24] <as-br_table-value>:\n 00056b: 02 7f                      | block i32\n 00056d: 00                         |   unreachable\n 00056e: 41 01                      |   i32.const 1\n 000570: 0e 02 00 00 00             |   br_table 0 0 0\n 000575: 41 07                      |   i32.const 7\n 000577: 0b                         | end\n 000578: 0b                         | end\n00057a func[25] <as-br_table-value-2>:\n 00057b: 02 7f                      | block i32\n 00057d: 02 7f                      |   block i32\n 00057f: 00                         |     unreachable\n 000580: 41 01                      |     i32.const 1\n 000582: 0e 01 00 01                |     br_table 0 1\n 000586: 0b                         |   end\n 000587: 0b                         | end\n 000588: 0b                         | end\n00058a func[26] <as-br_table-value-index>:\n 00058b: 02 7f                      | block i32\n 00058d: 41 06                      |   i32.const 6\n 00058f: 00                         |   unreachable\n 000590: 0e 01 00 00                |   br_table 0 0\n 000594: 41 07                      |   i32.const 7\n 000596: 0b                         | end\n 000597: 0b                         | end\n000599 func[27] <as-br_table-value-and-index>:\n 00059a: 02 7f                      | block i32\n 00059c: 00                         |   unreachable\n 00059d: 0e 01 00 00                |   br_table 0 0\n 0005a1: 41 08                      |   i32.const 8\n 0005a3: 0b                         | end\n 0005a4: 0b                         | end\n0005a6 func[28] <as-return-value>:\n 0005a7: 00                         | unreachable\n 0005a8: 0f                         | return\n 0005a9: 0b                         | end\n0005ab func[29] <as-if-cond>:\n 0005ac: 00                         | unreachable\n 0005ad: 04 7f                      | if i32\n 0005af: 41 00                      |   i32.const 0\n 0005b1: 05                         | else\n 0005b2: 41 01                      |   i32.const 1\n 0005b4: 0b                         | end\n 0005b5: 0b                         | end\n0005b7 func[30] <as-if-then>:\n 0005b8: 20 00                      | local.get 0\n 0005ba: 04 7f                      | if i32\n 0005bc: 00                         |   unreachable\n 0005bd: 05                         | else\n 0005be: 20 01                      |   local.get 1\n 0005c0: 0b                         | end\n 0005c1: 0b                         | end\n0005c3 func[31] <as-if-else>:\n 0005c4: 20 00                      | local.get 0\n 0005c6: 04 7f                      | if i32\n 0005c8: 20 01                      |   local.get 1\n 0005ca: 05                         | else\n 0005cb: 00                         |   unreachable\n 0005cc: 0b                         | end\n 0005cd: 0b                         | end\n0005cf func[32] <as-if-then-no-else>:\n 0005d0: 20 00                      | local.get 0\n 0005d2: 04 40                      | if\n 0005d4: 00                         |   unreachable\n 0005d5: 0b                         | end\n 0005d6: 20 01                      | local.get 1\n 0005d8: 0b                         | end\n0005da func[33] <as-select-first>:\n 0005db: 00                         | unreachable\n 0005dc: 20 00                      | local.get 0\n 0005de: 20 01                      | local.get 1\n 0005e0: 1b                         | select\n 0005e1: 0b                         | end\n0005e3 func[34] <as-select-second>:\n 0005e4: 20 00                      | local.get 0\n 0005e6: 00                         | unreachable\n 0005e7: 20 01                      | local.get 1\n 0005e9: 1b                         | select\n 0005ea: 0b                         | end\n0005ec func[35] <as-select-cond>:\n 0005ed: 41 00                      | i32.const 0\n 0005ef: 41 01                      | i32.const 1\n 0005f1: 00                         | unreachable\n 0005f2: 1b                         | select\n 0005f3: 0b                         | end\n0005f5 func[36] <as-call-first>:\n 0005f6: 00                         | unreachable\n 0005f7: 41 02                      | i32.const 2\n 0005f9: 41 03                      | i32.const 3\n 0005fb: 10 01                      | call 1\n 0005fd: 0b                         | end\n0005ff func[37] <as-call-mid>:\n 000600: 41 01                      | i32.const 1\n 000602: 00                         | unreachable\n 000603: 41 03                      | i32.const 3\n 000605: 10 01                      | call 1\n 000607: 0b                         | end\n000609 func[38] <as-call-last>:\n 00060a: 41 01                      | i32.const 1\n 00060c: 41 02                      | i32.const 2\n 00060e: 00                         | unreachable\n 00060f: 10 01                      | call 1\n 000611: 0b                         | end\n000613 func[39] <as-call_indirect-func>:\n 000614: 00                         | unreachable\n 000615: 41 01                      | i32.const 1\n 000617: 41 02                      | i32.const 2\n 000619: 41 03                      | i32.const 3\n 00061b: 11 00 00                   | call_indirect 0 (type 0)\n 00061e: 0b                         | end\n000620 func[40] <as-call_indirect-first>:\n 000621: 41 00                      | i32.const 0\n 000623: 00                         | unreachable\n 000624: 41 02                      | i32.const 2\n 000626: 41 03                      | i32.const 3\n 000628: 11 00 00                   | call_indirect 0 (type 0)\n 00062b: 0b                         | end\n00062d func[41] <as-call_indirect-mid>:\n 00062e: 41 00                      | i32.const 0\n 000630: 41 01                      | i32.const 1\n 000632: 00                         | unreachable\n 000633: 41 03                      | i32.const 3\n 000635: 11 00 00                   | call_indirect 0 (type 0)\n 000638: 0b                         | end\n00063a func[42] <as-call_indirect-last>:\n 00063b: 41 00                      | i32.const 0\n 00063d: 41 01                      | i32.const 1\n 00063f: 41 02                      | i32.const 2\n 000641: 00                         | unreachable\n 000642: 11 00 00                   | call_indirect 0 (type 0)\n 000645: 0b                         | end\n000647 func[43] <as-local.set-value>:\n 000648: 01 7d                      | local[0] type=f32\n 00064a: 00                         | unreachable\n 00064b: 21 00                      | local.set 0\n 00064d: 0b                         | end\n00064f func[44] <as-local.tee-value>:\n 000650: 01 7d                      | local[0] type=f32\n 000652: 00                         | unreachable\n 000653: 22 00                      | local.tee 0\n 000655: 0b                         | end\n000657 func[45] <as-global.set-value>:\n 000658: 00                         | unreachable\n 000659: 24 00                      | global.set 0\n 00065b: 0b                         | end\n00065d func[46] <as-load-address>:\n 00065e: 00                         | unreachable\n 00065f: 2a 02 00                   | f32.load 2 0\n 000662: 0b                         | end\n000664 func[47] <as-loadN-address>:\n 000665: 00                         | unreachable\n 000666: 30 00 00                   | i64.load8_s 0 0\n 000669: 0b                         | end\n00066b func[48] <as-store-address>:\n 00066c: 00                         | unreachable\n 00066d: 44 00 00 00 00 00 00 1c 40 | f64.const 0x1.cp+2\n 000676: 39 03 00                   | f64.store 3 0\n 000679: 0b                         | end\n00067b func[49] <as-store-value>:\n 00067c: 41 02                      | i32.const 2\n 00067e: 00                         | unreachable\n 00067f: 37 03 00                   | i64.store 3 0\n 000682: 0b                         | end\n000684 func[50] <as-storeN-address>:\n 000685: 00                         | unreachable\n 000686: 41 07                      | i32.const 7\n 000688: 3a 00 00                   | i32.store8 0 0\n 00068b: 0b                         | end\n00068d func[51] <as-storeN-value>:\n 00068e: 41 02                      | i32.const 2\n 000690: 00                         | unreachable\n 000691: 3d 01 00                   | i64.store16 1 0\n 000694: 0b                         | end\n000696 func[52] <as-unary-operand>:\n 000697: 00                         | unreachable\n 000698: 8c                         | f32.neg\n 000699: 0b                         | end\n00069b func[53] <as-binary-left>:\n 00069c: 00                         | unreachable\n 00069d: 41 0a                      | i32.const 10\n 00069f: 6a                         | i32.add\n 0006a0: 0b                         | end\n0006a2 func[54] <as-binary-right>:\n 0006a3: 42 0a                      | i64.const 10\n 0006a5: 00                         | unreachable\n 0006a6: 7d                         | i64.sub\n 0006a7: 0b                         | end\n0006a9 func[55] <as-test-operand>:\n 0006aa: 00                         | unreachable\n 0006ab: 45                         | i32.eqz\n 0006ac: 0b                         | end\n0006ae func[56] <as-compare-left>:\n 0006af: 00                         | unreachable\n 0006b0: 44 00 00 00 00 00 00 24 40 | f64.const 0x1.4p+3\n 0006b9: 65                         | f64.le\n 0006ba: 0b                         | end\n0006bc func[57] <as-compare-right>:\n 0006bd: 43 00 00 20 41             | f32.const 0x1.4p+3\n 0006c2: 00                         | unreachable\n 0006c3: 5c                         | f32.ne\n 0006c4: 0b                         | end\n0006c6 func[58] <as-convert-operand>:\n 0006c7: 00                         | unreachable\n 0006c8: a7                         | i32.wrap_i64\n 0006c9: 0b                         | end\n0006cb func[59] <as-memory.grow-size>:\n 0006cc: 00                         | unreachable\n 0006cd: 40 00                      | memory.grow 0\n 0006cf: 0b                         | end\n"
    }
  }
}
