{
  "bin": {
    "data.0.wasm": "AGFzbQEAAAAFAwEAAQujARgAQQALAABBAQsEYWJjZABBAAsAAEEACwNhYmMAQQALAABBAQsEYWJjZABBAAsAAEEACwNhYmMAQQALAABBAQsEYWJjZABBAAsAAEEACwNhYmMAQQALAABBAQsEYWJjZABBAAsAAEEACwNhYmMAQQALAABBAQsEYWJjZABBAAsAAEEACwNhYmMAQQALAABBAQsEYWJjZABBAAsAAEEACwNhYmM=",
    "data.1.wasm": "AGFzbQEAAAAFAwEAAQsHAQBBAAsBYQ==",
    "data.10.wasm": "AGFzbQEAAAAFAwEAAQYGAX8AQQALCwcBACMACwFh",
    "data.11.wasm": "AGFzbQEAAAAFAwEAAQsPAgBBAAsBYQBB//8DCwFi",
    "data.12.wasm": "AGFzbQEAAAACFAEIc3BlY3Rlc3QGbWVtb3J5AgABCw8CAEEACwFhAEH//wMLAWI=",
    "data.13.wasm": "AGFzbQEAAAAFAwEAAgsJAQBB//8HCwFh",
    "data.14.wasm": "AGFzbQEAAAAFAwEAAAsGAQBBAAsA",
    "data.15.wasm": "AGFzbQEAAAACFAEIc3BlY3Rlc3QGbWVtb3J5AgAACwYBAEEACwA=",
    "data.16.wasm": "AGFzbQEAAAAFBAEBAAALBgEAQQALAA==",
    "data.17.wasm": "AGFzbQEAAAAFAwEAAQsIAQBBgIAECwA=",
    "data.18.wasm": "AGFzbQEAAAAFAwEAAAsGAQBBAAsA",
    "data.19.wasm": "AGFzbQEAAAACFAEIc3BlY3Rlc3QGbWVtb3J5AgAACwYBAEEACwA=",
    "data.2.wasm": "AGFzbQEAAAACFAEIc3BlY3Rlc3QGbWVtb3J5AgABCwcBAEEACwFh",
    "data.20.wasm": "AGFzbQEAAAAFBAEBAAALBgEAQQALAA==",
    "data.21.wasm": "AGFzbQEAAAACFAEIc3BlY3Rlc3QGbWVtb3J5AgAACwcBAEEACwFh",
    "data.22.wasm": "AGFzbQEAAAACFQEIc3BlY3Rlc3QGbWVtb3J5AgEAAwsHAQBBAAsBYQ==",
    "data.23.wasm": "AGFzbQEAAAACKwIIc3BlY3Rlc3QKZ2xvYmFsX2kzMgN/AAhzcGVjdGVzdAZtZW1vcnkCAAALBwEAIwALAWE=",
    "data.24.wasm": "AGFzbQEAAAACLAIIc3BlY3Rlc3QKZ2xvYmFsX2kzMgN/AAhzcGVjdGVzdAZtZW1vcnkCAQADCwcBACMACwFh",
    "data.25.wasm": "AGFzbQEAAAACFAEIc3BlY3Rlc3QGbWVtb3J5AgAACwcBAEEBCwFh",
    "data.26.wasm": "AGFzbQEAAAACFQEIc3BlY3Rlc3QGbWVtb3J5AgEAAwsHAQBBAQsBYQ==",
    "data.27.wasm": "AGFzbQEAAAAFAwEAAAsHAQBBAAsBYQ==",
    "data.28.wasm": "AGFzbQEAAAAFBAEBAAALBwEAQQALAWE=",
    "data.29.wasm": "AGFzbQEAAAAFBAEBAAELBwEAQQALAWE=",
    "data.3.wasm": "AGFzbQEAAAAFAwEAAQsiBQBBAAsBYQBBAwsBYgBB5AALA2NkZQBBBQsBeABBAwsBYw==",
    "data.30.wasm": "AGFzbQEAAAAFAwEAAAsGAQBBAQsA",
    "data.31.wasm": "AGFzbQEAAAAFBAEBAAELBgEAQQELAA==",
    "data.32.wasm": "AGFzbQEAAAACGAEIc3BlY3Rlc3QKZ2xvYmFsX2kzMgN/AAUDAQAACwcBACMACwFh",
    "data.33.wasm": "AGFzbQEAAAAFBAEBAQILCQEAQYCABAsBYQ==",
    "data.34.wasm": "AGFzbQEAAAACFAEIc3BlY3Rlc3QGbWVtb3J5AgABCwkBAEGAgAQLAWE=",
    "data.35.wasm": "AGFzbQEAAAAFAwEAAgsJAQBBgIAICwFh",
    "data.36.wasm": "AGFzbQEAAAAFBAEBAgMLCQEAQYCACAsBYQ==",
    "data.37.wasm": "AGFzbQEAAAAFAwEAAQsHAQBBfwsBYQ==",
    "data.38.wasm": "AGFzbQEAAAACFAEIc3BlY3Rlc3QGbWVtb3J5AgABCwcBAEF/CwFh",
    "data.39.wasm": "AGFzbQEAAAAFAwEAAgsIAQBBnH8LAWE=",
    "data.4.wasm": "AGFzbQEAAAACFAEIc3BlY3Rlc3QGbWVtb3J5AgABCycGAEEACwFhAEEBCwFiAEECCwNjZGUAQQMLAWYAQQILAWcAQQELAWg=",
    "data.40.wasm": "AGFzbQEAAAACFAEIc3BlY3Rlc3QGbWVtb3J5AgABCwgBAEGcfwsBYQ==",
    "data.41.wasm": "AGFzbQEAAAALBgEAQQALAA==",
    "data.42.wasm": "AGFzbQEAAAAFAwEAAAsHAQIBQQALAA==",
    "data.43.wasm": "AGFzbQEAAAALBgEAQQALAA==",
    "data.44.wasm": "AGFzbQEAAAALBwECAUEACwA=",
    "data.45.wasm": "AGFzbQEAAAAFAwEAAAtFAQIBQQALPgABAgMEBQYHCAkKCwwNDg8QERITFBUWFxgZGhscHR4fICEiIyQlJicoKSorLC0uLzAxMjM0NTY3ODk6Ozw9",
    "data.46.wasm": "AGFzbQEAAAALRQECAUEACz4AAQIDBAUGBwgJCgsMDQ4PEBESExQVFhcYGRobHB0eHyAhIiMkJSYnKCkqKywtLi8wMTIzNDU2Nzg5Ojs8PQ==",
    "data.47.wasm": "AGFzbQEAAAAFAwEAAQsGAQBCAAsA",
    "data.48.wasm": "AGFzbQEAAAAFAwEAAQsGAQDQcAsA",
    "data.49.wasm": "AGFzbQEAAAAFAwEAAQsEAQALAA==",
    "data.5.wasm": "AGFzbQEAAAACGAEIc3BlY3Rlc3QKZ2xvYmFsX2kzMgN/AAUDAQABCwcBACMACwFh",
    "data.50.wasm": "AGFzbQEAAAAFAwEAAQsIAQBBAEEACwA=",
    "data.51.wasm": "AGFzbQEAAAACFAEEdGVzdApnbG9iYWwtaTMyA38ABQMBAAELCAEAIwAjAAsA",
    "data.52.wasm": "AGFzbQEAAAACFAEEdGVzdApnbG9iYWwtaTMyA38ABQMBAAELCAEAIwBBAAsA",
    "data.53.wasm": "AGFzbQEAAAAFAwEAAQsHAQBBAGgLAA==",
    "data.54.wasm": "AGFzbQEAAAAFAwEAAQsFAQABCwA=",
    "data.55.wasm": "AGFzbQEAAAAFAwEAAQsHAQABQQALAA==",
    "data.56.wasm": "AGFzbQEAAAAFAwEAAQsHAQBBAAELAA==",
    "data.57.wasm": "AGFzbQEAAAACCwEEdGVzdAFnA38BBQMBAAELBgEAIwALAA==",
    "data.58.wasm": "AGFzbQEAAAAFAwEAAQsGAQAjAAsA",
    "data.59.wasm": "AGFzbQEAAAACFAEEdGVzdApnbG9iYWwtaTMyA38ABQMBAAELBgEAIwELAA==",
    "data.6.wasm": "AGFzbQEAAAACKwIIc3BlY3Rlc3QKZ2xvYmFsX2kzMgN/AAhzcGVjdGVzdAZtZW1vcnkCAAELBwEAIwALAWE=",
    "data.60.wasm": "AGFzbQEAAAACGAEEdGVzdA5nbG9iYWwtbXV0LWkzMgN/AQUDAQABCwYBACMACwA=",
    "data.7.wasm": "AGFzbQEAAAACGAEIc3BlY3Rlc3QKZ2xvYmFsX2kzMgN/AAUDAQABCwcBACMACwFh",
    "data.8.wasm": "AGFzbQEAAAACKwIIc3BlY3Rlc3QKZ2xvYmFsX2kzMgN/AAhzcGVjdGVzdAZtZW1vcnkCAAELBwEAIwALAWE=",
    "data.9.wasm": "AGFzbQEAAAAFAwEAAQYGAX8AQQALCwcBACMACwFh"
  },
  "spec": {"source_filename": "/home/rvagg/git/webassembly/spec/test/core/data.wast",
 "commands": [
  {"type": "module", "line": 5, "filename": "data.0.wasm"}, 
  {"type": "module", "line": 35, "filename": "data.1.wasm"}, 
  {"type": "module", "line": 39, "filename": "data.2.wasm"}, 
  {"type": "module", "line": 44, "filename": "data.3.wasm"}, 
  {"type": "module", "line": 52, "filename": "data.4.wasm"}, 
  {"type": "module", "line": 62, "filename": "data.5.wasm"}, 
  {"type": "module", "line": 67, "filename": "data.6.wasm"}, 
  {"type": "module", "line": 73, "filename": "data.7.wasm"}, 
  {"type": "module", "line": 78, "filename": "data.8.wasm"}, 
  {"type": "assert_invalid", "line": 85, "filename": "data.9.wasm", "text": "unknown global", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 89, "filename": "data.10.wasm", "text": "unknown global", "module_type": "binary"}, 
  {"type": "module", "line": 96, "filename": "data.11.wasm"}, 
  {"type": "module", "line": 101, "filename": "data.12.wasm"}, 
  {"type": "module", "line": 107, "filename": "data.13.wasm"}, 
  {"type": "module", "line": 112, "filename": "data.14.wasm"}, 
  {"type": "module", "line": 116, "filename": "data.15.wasm"}, 
  {"type": "module", "line": 121, "filename": "data.16.wasm"}, 
  {"type": "module", "line": 126, "filename": "data.17.wasm"}, 
  {"type": "module", "line": 131, "filename": "data.18.wasm"}, 
  {"type": "module", "line": 135, "filename": "data.19.wasm"}, 
  {"type": "module", "line": 140, "filename": "data.20.wasm"}, 
  {"type": "module", "line": 145, "filename": "data.21.wasm"}, 
  {"type": "module", "line": 150, "filename": "data.22.wasm"}, 
  {"type": "module", "line": 155, "filename": "data.23.wasm"}, 
  {"type": "module", "line": 161, "filename": "data.24.wasm"}, 
  {"type": "module", "line": 167, "filename": "data.25.wasm"}, 
  {"type": "module", "line": 172, "filename": "data.26.wasm"}, 
  {"type": "assert_uninstantiable", "line": 180, "filename": "data.27.wasm", "text": "out of bounds memory access", "module_type": "binary"}, 
  {"type": "assert_uninstantiable", "line": 188, "filename": "data.28.wasm", "text": "out of bounds memory access", "module_type": "binary"}, 
  {"type": "assert_uninstantiable", "line": 196, "filename": "data.29.wasm", "text": "out of bounds memory access", "module_type": "binary"}, 
  {"type": "assert_uninstantiable", "line": 203, "filename": "data.30.wasm", "text": "out of bounds memory access", "module_type": "binary"}, 
  {"type": "assert_uninstantiable", "line": 210, "filename": "data.31.wasm", "text": "out of bounds memory access", "module_type": "binary"}, 
  {"type": "assert_uninstantiable", "line": 227, "filename": "data.32.wasm", "text": "out of bounds memory access", "module_type": "binary"}, 
  {"type": "assert_uninstantiable", "line": 236, "filename": "data.33.wasm", "text": "out of bounds memory access", "module_type": "binary"}, 
  {"type": "assert_uninstantiable", "line": 243, "filename": "data.34.wasm", "text": "out of bounds memory access", "module_type": "binary"}, 
  {"type": "assert_uninstantiable", "line": 251, "filename": "data.35.wasm", "text": "out of bounds memory access", "module_type": "binary"}, 
  {"type": "assert_uninstantiable", "line": 259, "filename": "data.36.wasm", "text": "out of bounds memory access", "module_type": "binary"}, 
  {"type": "assert_uninstantiable", "line": 267, "filename": "data.37.wasm", "text": "out of bounds memory access", "module_type": "binary"}, 
  {"type": "assert_uninstantiable", "line": 274, "filename": "data.38.wasm", "text": "out of bounds memory access", "module_type": "binary"}, 
  {"type": "assert_uninstantiable", "line": 282, "filename": "data.39.wasm", "text": "out of bounds memory access", "module_type": "binary"}, 
  {"type": "assert_uninstantiable", "line": 289, "filename": "data.40.wasm", "text": "out of bounds memory access", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 299, "filename": "data.41.wasm", "text": "unknown memory", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 307, "filename": "data.42.wasm", "text": "unknown memory 1", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 320, "filename": "data.43.wasm", "text": "unknown memory 0", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 331, "filename": "data.44.wasm", "text": "unknown memory 1", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 343, "filename": "data.45.wasm", "text": "unknown memory 1", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 365, "filename": "data.46.wasm", "text": "unknown memory 1", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 384, "filename": "data.47.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 392, "filename": "data.48.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 400, "filename": "data.49.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 408, "filename": "data.50.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 416, "filename": "data.51.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 425, "filename": "data.52.wasm", "text": "type mismatch", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 434, "filename": "data.53.wasm", "text": "constant expression required", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 442, "filename": "data.54.wasm", "text": "constant expression required", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 450, "filename": "data.55.wasm", "text": "constant expression required", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 458, "filename": "data.56.wasm", "text": "constant expression required", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 466, "filename": "data.57.wasm", "text": "constant expression required", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 475, "filename": "data.58.wasm", "text": "unknown global 0", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 483, "filename": "data.59.wasm", "text": "unknown global 1", "module_type": "binary"}, 
  {"type": "assert_invalid", "line": 492, "filename": "data.60.wasm", "text": "constant expression required", "module_type": "binary"}]},
  "code": [
    "(module (memory $m 1) (data (i32.const 0)) (data (i32.const 1) \"a\" \"\" \"bcd\") (data (offset (i32.const 0))) (data (offset (i32.const 0)) \"\" \"a\" \"bc\" \"\") (data (memory 0) (i32.const 0)) (data (memory 0x0) (i32.const 1) \"a\" \"\" \"bcd\") (data (memory 0x000) (offset (i32.const 0))) (data (memory 0) (offset (i32.const 0)) \"\" \"a\" \"bc\" \"\") (data (memory $m) (i32.const 0)) (data (memory $m) (i32.const 1) \"a\" \"\" \"bcd\") (data (memory $m) (offset (i32.const 0))) (data (memory $m) (offset (i32.const 0)) \"\" \"a\" \"bc\" \"\") (data $d1 (i32.const 0)) (data $d2 (i32.const 1) \"a\" \"\" \"bcd\") (data $d3 (offset (i32.const 0))) (data $d4 (offset (i32.const 0)) \"\" \"a\" \"bc\" \"\") (data $d5 (memory 0) (i32.const 0)) (data $d6 (memory 0x0) (i32.const 1) \"a\" \"\" \"bcd\") (data $d7 (memory 0x000) (offset (i32.const 0))) (data $d8 (memory 0) (offset (i32.const 0)) \"\" \"a\" \"bc\" \"\") (data $d9 (memory $m) (i32.const 0)) (data $d10 (memory $m) (i32.const 1) \"a\" \"\" \"bcd\") (data $d11 (memory $m) (offset (i32.const 0))) (data $d12 (memory $m) (offset (i32.const 0)) \"\" \"a\" \"bc\" \"\"))",
    "(module (memory 1) (data (i32.const 0) \"a\"))",
    "(module (import \"spectest\" \"memory\" (memory 1)) (data (i32.const 0) \"a\"))",
    "(module (memory 1) (data (i32.const 0) \"a\") (data (i32.const 3) \"b\") (data (i32.const 100) \"cde\") (data (i32.const 5) \"x\") (data (i32.const 3) \"c\"))",
    "(module (import \"spectest\" \"memory\" (memory 1)) (data (i32.const 0) \"a\") (data (i32.const 1) \"b\") (data (i32.const 2) \"cde\") (data (i32.const 3) \"f\") (data (i32.const 2) \"g\") (data (i32.const 1) \"h\"))",
    "(module (global (import \"spectest\" \"global_i32\") i32) (memory 1) (data (global.get 0) \"a\"))",
    "(module (global (import \"spectest\" \"global_i32\") i32) (import \"spectest\" \"memory\" (memory 1)) (data (global.get 0) \"a\"))",
    "(module (global $g (import \"spectest\" \"global_i32\") i32) (memory 1) (data (global.get $g) \"a\"))",
    "(module (global $g (import \"spectest\" \"global_i32\") i32) (import \"spectest\" \"memory\" (memory 1)) (data (global.get $g) \"a\"))",
    "(assert_invalid (module (memory 1) (global i32 (i32.const 0)) (data (global.get 0) \"a\")) \"unknown global\")",
    "(assert_invalid (module (memory 1) (global $g i32 (i32.const 0)) (data (global.get $g) \"a\")) \"unknown global\")",
    "(module (memory 1) (data (i32.const 0) \"a\") (data (i32.const 0xffff) \"b\"))",
    "(module (import \"spectest\" \"memory\" (memory 1)) (data (i32.const 0) \"a\") (data (i32.const 0xffff) \"b\"))",
    "(module (memory 2) (data (i32.const 0x1_ffff) \"a\"))",
    "(module (memory 0) (data (i32.const 0)))",
    "(module (import \"spectest\" \"memory\" (memory 0)) (data (i32.const 0)))",
    "(module (memory 0 0) (data (i32.const 0)))",
    "(module (memory 1) (data (i32.const 0x1_0000) \"\"))",
    "(module (memory 0) (data (i32.const 0) \"\" \"\"))",
    "(module (import \"spectest\" \"memory\" (memory 0)) (data (i32.const 0) \"\" \"\"))",
    "(module (memory 0 0) (data (i32.const 0) \"\" \"\"))",
    "(module (import \"spectest\" \"memory\" (memory 0)) (data (i32.const 0) \"a\"))",
    "(module (import \"spectest\" \"memory\" (memory 0 3)) (data (i32.const 0) \"a\"))",
    "(module (global (import \"spectest\" \"global_i32\") i32) (import \"spectest\" \"memory\" (memory 0)) (data (global.get 0) \"a\"))",
    "(module (global (import \"spectest\" \"global_i32\") i32) (import \"spectest\" \"memory\" (memory 0 3)) (data (global.get 0) \"a\"))",
    "(module (import \"spectest\" \"memory\" (memory 0)) (data (i32.const 1) \"a\"))",
    "(module (import \"spectest\" \"memory\" (memory 0 3)) (data (i32.const 1) \"a\"))",
    "(assert_trap (module (memory 0) (data (i32.const 0) \"a\") ) \"out of bounds memory access\")",
    "(assert_trap (module (memory 0 0) (data (i32.const 0) \"a\") ) \"out of bounds memory access\")",
    "(assert_trap (module (memory 0 1) (data (i32.const 0) \"a\") ) \"out of bounds memory access\")",
    "(assert_trap (module (memory 0) (data (i32.const 1)) ) \"out of bounds memory access\")",
    "(assert_trap (module (memory 0 1) (data (i32.const 1)) ) \"out of bounds memory access\")",
    "(assert_trap (module (global (import \"spectest\" \"global_i32\") i32) (memory 0) (data (global.get 0) \"a\") ) \"out of bounds memory access\")",
    "(assert_trap (module (memory 1 2) (data (i32.const 0x1_0000) \"a\") ) \"out of bounds memory access\")",
    "(assert_trap (module (import \"spectest\" \"memory\" (memory 1)) (data (i32.const 0x1_0000) \"a\") ) \"out of bounds memory access\")",
    "(assert_trap (module (memory 2) (data (i32.const 0x2_0000) \"a\") ) \"out of bounds memory access\")",
    "(assert_trap (module (memory 2 3) (data (i32.const 0x2_0000) \"a\") ) \"out of bounds memory access\")",
    "(assert_trap (module (memory 1) (data (i32.const -1) \"a\") ) \"out of bounds memory access\")",
    "(assert_trap (module (import \"spectest\" \"memory\" (memory 1)) (data (i32.const -1) \"a\") ) \"out of bounds memory access\")",
    "(assert_trap (module (memory 2) (data (i32.const -100) \"a\") ) \"out of bounds memory access\")",
    "(assert_trap (module (import \"spectest\" \"memory\" (memory 1)) (data (i32.const -100) \"a\") ) \"out of bounds memory access\")",
    "(assert_invalid (module (data (i32.const 0) \"\") ) \"unknown memory\")",
    "(assert_invalid (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\05\\03\\01\" \"\\00\\00\" \"\\0b\\07\\01\" \"\\02\\01\\41\\00\\0b\" \"\\00\" ) \"unknown memory 1\")",
    "(assert_invalid (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\0b\\06\\01\" \"\\00\\41\\00\\0b\" \"\\00\" ) \"unknown memory 0\")",
    "(assert_invalid (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\0b\\07\\01\" \"\\02\\01\\41\\00\\0b\" \"\\00\" ) \"unknown memory 1\")",
    "(assert_invalid (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\05\\03\\01\" \"\\00\\00\" \"\\0b\\45\\01\" \"\\02\" \"\\01\" \"\\41\\00\\0b\" \"\\3e\" \"\\00\\01\\02\\03\\04\\05\\06\\07\\08\\09\\0a\\0b\\0c\\0d\\0e\\0f\" \"\\10\\11\\12\\13\\14\\15\\16\\17\\18\\19\\1a\\1b\\1c\\1d\\1e\\1f\" \"\\20\\21\\22\\23\\24\\25\\26\\27\\28\\29\\2a\\2b\\2c\\2d\\2e\\2f\" \"\\30\\31\\32\\33\\34\\35\\36\\37\\38\\39\\3a\\3b\\3c\\3d\" ) \"unknown memory 1\")",
    "(assert_invalid (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\0b\\45\\01\" \"\\02\" \"\\01\" \"\\41\\00\\0b\" \"\\3e\" \"\\00\\01\\02\\03\\04\\05\\06\\07\\08\\09\\0a\\0b\\0c\\0d\\0e\\0f\" \"\\10\\11\\12\\13\\14\\15\\16\\17\\18\\19\\1a\\1b\\1c\\1d\\1e\\1f\" \"\\20\\21\\22\\23\\24\\25\\26\\27\\28\\29\\2a\\2b\\2c\\2d\\2e\\2f\" \"\\30\\31\\32\\33\\34\\35\\36\\37\\38\\39\\3a\\3b\\3c\\3d\" ) \"unknown memory 1\")",
    "(assert_invalid (module (memory 1) (data (i64.const 0)) ) \"type mismatch\")",
    "(assert_invalid (module (memory 1) (data (ref.null func)) ) \"type mismatch\")",
    "(assert_invalid (module (memory 1) (data (offset )) ) \"type mismatch\")",
    "(assert_invalid (module (memory 1) (data (offset (i32.const 0) (i32.const 0))) ) \"type mismatch\")",
    "(assert_invalid (module (global (import \"test\" \"global-i32\") i32) (memory 1) (data (offset (global.get 0) (global.get 0))) ) \"type mismatch\")",
    "(assert_invalid (module (global (import \"test\" \"global-i32\") i32) (memory 1) (data (offset (global.get 0) (i32.const 0))) ) \"type mismatch\")",
    "(assert_invalid (module (memory 1) (data (i32.ctz (i32.const 0))) ) \"constant expression required\")",
    "(assert_invalid (module (memory 1) (data (nop)) ) \"constant expression required\")",
    "(assert_invalid (module (memory 1) (data (offset (nop) (i32.const 0))) ) \"constant expression required\")",
    "(assert_invalid (module (memory 1) (data (offset (i32.const 0) (nop))) ) \"constant expression required\")",
    "(assert_invalid (module (global $g (import \"test\" \"g\") (mut i32)) (memory 1) (data (global.get $g)) ) \"constant expression required\")",
    "(assert_invalid (module (memory 1) (data (global.get 0)) ) \"unknown global 0\")",
    "(assert_invalid (module (global (import \"test\" \"global-i32\") i32) (memory 1) (data (global.get 1)) ) \"unknown global 1\")",
    "(assert_invalid (module (global (import \"test\" \"global-mut-i32\") (mut i32)) (memory 1) (data (global.get 0)) ) \"constant expression required\")"
  ],
  "dump": {
    "data.0.wasm": {
      "header": "\ndata.0.wasm:\tfile format wasm 0x1\n\nSections:\n\n   Memory start=0x0000000a end=0x0000000d (size=0x00000003) count: 1\n     Data start=0x00000010 end=0x000000b3 (size=0x000000a3) count: 24\n",
      "details": "\ndata.0.wasm:\tfile format wasm 0x1\n\nSection Details:\n\nMemory[1]:\n - memory[0] pages: initial=1\nData[24]:\n - segment[0] memory=0 size=0 - init i32=0\n - segment[1] memory=0 size=4 - init i32=1\n  - 0000001: 6162 6364                                abcd\n - segment[2] memory=0 size=0 - init i32=0\n - segment[3] memory=0 size=3 - init i32=0\n  - 0000000: 6162 63                                  abc\n - segment[4] memory=0 size=0 - init i32=0\n - segment[5] memory=0 size=4 - init i32=1\n  - 0000001: 6162 6364                                abcd\n - segment[6] memory=0 size=0 - init i32=0\n - segment[7] memory=0 size=3 - init i32=0\n  - 0000000: 6162 63                                  abc\n - segment[8] memory=0 size=0 - init i32=0\n - segment[9] memory=0 size=4 - init i32=1\n  - 0000001: 6162 6364                                abcd\n - segment[10] memory=0 size=0 - init i32=0\n - segment[11] memory=0 size=3 - init i32=0\n  - 0000000: 6162 63                                  abc\n - segment[12] memory=0 size=0 - init i32=0\n - segment[13] memory=0 size=4 - init i32=1\n  - 0000001: 6162 6364                                abcd\n - segment[14] memory=0 size=0 - init i32=0\n - segment[15] memory=0 size=3 - init i32=0\n  - 0000000: 6162 63                                  abc\n - segment[16] memory=0 size=0 - init i32=0\n - segment[17] memory=0 size=4 - init i32=1\n  - 0000001: 6162 6364                                abcd\n - segment[18] memory=0 size=0 - init i32=0\n - segment[19] memory=0 size=3 - init i32=0\n  - 0000000: 6162 63                                  abc\n - segment[20] memory=0 size=0 - init i32=0\n - segment[21] memory=0 size=4 - init i32=1\n  - 0000001: 6162 6364                                abcd\n - segment[22] memory=0 size=0 - init i32=0\n - segment[23] memory=0 size=3 - init i32=0\n  - 0000000: 6162 63                                  abc\n",
      "disassemble": "\ndata.0.wasm:\tfile format wasm 0x1\n\nCode Disassembly:\n\n"
    },
    "data.1.wasm": {
      "header": "\ndata.1.wasm:\tfile format wasm 0x1\n\nSections:\n\n   Memory start=0x0000000a end=0x0000000d (size=0x00000003) count: 1\n     Data start=0x0000000f end=0x00000016 (size=0x00000007) count: 1\n",
      "details": "\ndata.1.wasm:\tfile format wasm 0x1\n\nSection Details:\n\nMemory[1]:\n - memory[0] pages: initial=1\nData[1]:\n - segment[0] memory=0 size=1 - init i32=0\n  - 0000000: 61                                       a\n",
      "disassemble": "\ndata.1.wasm:\tfile format wasm 0x1\n\nCode Disassembly:\n\n"
    },
    "data.2.wasm": {
      "header": "\ndata.2.wasm:\tfile format wasm 0x1\n\nSections:\n\n   Import start=0x0000000a end=0x0000001e (size=0x00000014) count: 1\n     Data start=0x00000020 end=0x00000027 (size=0x00000007) count: 1\n",
      "details": "\ndata.2.wasm:\tfile format wasm 0x1\n\nSection Details:\n\nImport[1]:\n - memory[0] pages: initial=1 <- spectest.memory\nData[1]:\n - segment[0] memory=0 size=1 - init i32=0\n  - 0000000: 61                                       a\n",
      "disassemble": "\ndata.2.wasm:\tfile format wasm 0x1\n\nCode Disassembly:\n\n"
    },
    "data.3.wasm": {
      "header": "\ndata.3.wasm:\tfile format wasm 0x1\n\nSections:\n\n   Memory start=0x0000000a end=0x0000000d (size=0x00000003) count: 1\n     Data start=0x0000000f end=0x00000031 (size=0x00000022) count: 5\n",
      "details": "\ndata.3.wasm:\tfile format wasm 0x1\n\nSection Details:\n\nMemory[1]:\n - memory[0] pages: initial=1\nData[5]:\n - segment[0] memory=0 size=1 - init i32=0\n  - 0000000: 61                                       a\n - segment[1] memory=0 size=1 - init i32=3\n  - 0000003: 62                                       b\n - segment[2] memory=0 size=3 - init i32=100\n  - 0000064: 6364 65                                  cde\n - segment[3] memory=0 size=1 - init i32=5\n  - 0000005: 78                                       x\n - segment[4] memory=0 size=1 - init i32=3\n  - 0000003: 63                                       c\n",
      "disassemble": "\ndata.3.wasm:\tfile format wasm 0x1\n\nCode Disassembly:\n\n"
    },
    "data.4.wasm": {
      "header": "\ndata.4.wasm:\tfile format wasm 0x1\n\nSections:\n\n   Import start=0x0000000a end=0x0000001e (size=0x00000014) count: 1\n     Data start=0x00000020 end=0x00000047 (size=0x00000027) count: 6\n",
      "details": "\ndata.4.wasm:\tfile format wasm 0x1\n\nSection Details:\n\nImport[1]:\n - memory[0] pages: initial=1 <- spectest.memory\nData[6]:\n - segment[0] memory=0 size=1 - init i32=0\n  - 0000000: 61                                       a\n - segment[1] memory=0 size=1 - init i32=1\n  - 0000001: 62                                       b\n - segment[2] memory=0 size=3 - init i32=2\n  - 0000002: 6364 65                                  cde\n - segment[3] memory=0 size=1 - init i32=3\n  - 0000003: 66                                       f\n - segment[4] memory=0 size=1 - init i32=2\n  - 0000002: 67                                       g\n - segment[5] memory=0 size=1 - init i32=1\n  - 0000001: 68                                       h\n",
      "disassemble": "\ndata.4.wasm:\tfile format wasm 0x1\n\nCode Disassembly:\n\n"
    },
    "data.5.wasm": {
      "header": "\ndata.5.wasm:\tfile format wasm 0x1\n\nSections:\n\n   Import start=0x0000000a end=0x00000022 (size=0x00000018) count: 1\n   Memory start=0x00000024 end=0x00000027 (size=0x00000003) count: 1\n     Data start=0x00000029 end=0x00000030 (size=0x00000007) count: 1\n",
      "details": "\ndata.5.wasm:\tfile format wasm 0x1\n\nSection Details:\n\nImport[1]:\n - global[0] i32 mutable=0 <- spectest.global_i32\nMemory[1]:\n - memory[0] pages: initial=1\nData[1]:\n - segment[0] memory=0 size=1 - init global=0 <spectest.global_i32>\n  - 0000000: 61                                       a\n",
      "disassemble": "\ndata.5.wasm:\tfile format wasm 0x1\n\nCode Disassembly:\n\n"
    },
    "data.6.wasm": {
      "header": "\ndata.6.wasm:\tfile format wasm 0x1\n\nSections:\n\n   Import start=0x0000000a end=0x00000035 (size=0x0000002b) count: 2\n     Data start=0x00000037 end=0x0000003e (size=0x00000007) count: 1\n",
      "details": "\ndata.6.wasm:\tfile format wasm 0x1\n\nSection Details:\n\nImport[2]:\n - global[0] i32 mutable=0 <- spectest.global_i32\n - memory[0] pages: initial=1 <- spectest.memory\nData[1]:\n - segment[0] memory=0 size=1 - init global=0 <spectest.global_i32>\n  - 0000000: 61                                       a\n",
      "disassemble": "\ndata.6.wasm:\tfile format wasm 0x1\n\nCode Disassembly:\n\n"
    },
    "data.7.wasm": {
      "header": "\ndata.7.wasm:\tfile format wasm 0x1\n\nSections:\n\n   Import start=0x0000000a end=0x00000022 (size=0x00000018) count: 1\n   Memory start=0x00000024 end=0x00000027 (size=0x00000003) count: 1\n     Data start=0x00000029 end=0x00000030 (size=0x00000007) count: 1\n",
      "details": "\ndata.7.wasm:\tfile format wasm 0x1\n\nSection Details:\n\nImport[1]:\n - global[0] i32 mutable=0 <- spectest.global_i32\nMemory[1]:\n - memory[0] pages: initial=1\nData[1]:\n - segment[0] memory=0 size=1 - init global=0 <spectest.global_i32>\n  - 0000000: 61                                       a\n",
      "disassemble": "\ndata.7.wasm:\tfile format wasm 0x1\n\nCode Disassembly:\n\n"
    },
    "data.8.wasm": {
      "header": "\ndata.8.wasm:\tfile format wasm 0x1\n\nSections:\n\n   Import start=0x0000000a end=0x00000035 (size=0x0000002b) count: 2\n     Data start=0x00000037 end=0x0000003e (size=0x00000007) count: 1\n",
      "details": "\ndata.8.wasm:\tfile format wasm 0x1\n\nSection Details:\n\nImport[2]:\n - global[0] i32 mutable=0 <- spectest.global_i32\n - memory[0] pages: initial=1 <- spectest.memory\nData[1]:\n - segment[0] memory=0 size=1 - init global=0 <spectest.global_i32>\n  - 0000000: 61                                       a\n",
      "disassemble": "\ndata.8.wasm:\tfile format wasm 0x1\n\nCode Disassembly:\n\n"
    },
    "data.11.wasm": {
      "header": "\ndata.11.wasm:\tfile format wasm 0x1\n\nSections:\n\n   Memory start=0x0000000a end=0x0000000d (size=0x00000003) count: 1\n     Data start=0x0000000f end=0x0000001e (size=0x0000000f) count: 2\n",
      "details": "\ndata.11.wasm:\tfile format wasm 0x1\n\nSection Details:\n\nMemory[1]:\n - memory[0] pages: initial=1\nData[2]:\n - segment[0] memory=0 size=1 - init i32=0\n  - 0000000: 61                                       a\n - segment[1] memory=0 size=1 - init i32=65535\n  - 000ffff: 62                                       b\n",
      "disassemble": "\ndata.11.wasm:\tfile format wasm 0x1\n\nCode Disassembly:\n\n"
    },
    "data.12.wasm": {
      "header": "\ndata.12.wasm:\tfile format wasm 0x1\n\nSections:\n\n   Import start=0x0000000a end=0x0000001e (size=0x00000014) count: 1\n     Data start=0x00000020 end=0x0000002f (size=0x0000000f) count: 2\n",
      "details": "\ndata.12.wasm:\tfile format wasm 0x1\n\nSection Details:\n\nImport[1]:\n - memory[0] pages: initial=1 <- spectest.memory\nData[2]:\n - segment[0] memory=0 size=1 - init i32=0\n  - 0000000: 61                                       a\n - segment[1] memory=0 size=1 - init i32=65535\n  - 000ffff: 62                                       b\n",
      "disassemble": "\ndata.12.wasm:\tfile format wasm 0x1\n\nCode Disassembly:\n\n"
    },
    "data.13.wasm": {
      "header": "\ndata.13.wasm:\tfile format wasm 0x1\n\nSections:\n\n   Memory start=0x0000000a end=0x0000000d (size=0x00000003) count: 1\n     Data start=0x0000000f end=0x00000018 (size=0x00000009) count: 1\n",
      "details": "\ndata.13.wasm:\tfile format wasm 0x1\n\nSection Details:\n\nMemory[1]:\n - memory[0] pages: initial=2\nData[1]:\n - segment[0] memory=0 size=1 - init i32=131071\n  - 001ffff: 61                                       a\n",
      "disassemble": "\ndata.13.wasm:\tfile format wasm 0x1\n\nCode Disassembly:\n\n"
    },
    "data.14.wasm": {
      "header": "\ndata.14.wasm:\tfile format wasm 0x1\n\nSections:\n\n   Memory start=0x0000000a end=0x0000000d (size=0x00000003) count: 1\n     Data start=0x0000000f end=0x00000015 (size=0x00000006) count: 1\n",
      "details": "\ndata.14.wasm:\tfile format wasm 0x1\n\nSection Details:\n\nMemory[1]:\n - memory[0] pages: initial=0\nData[1]:\n - segment[0] memory=0 size=0 - init i32=0\n",
      "disassemble": "\ndata.14.wasm:\tfile format wasm 0x1\n\nCode Disassembly:\n\n"
    },
    "data.15.wasm": {
      "header": "\ndata.15.wasm:\tfile format wasm 0x1\n\nSections:\n\n   Import start=0x0000000a end=0x0000001e (size=0x00000014) count: 1\n     Data start=0x00000020 end=0x00000026 (size=0x00000006) count: 1\n",
      "details": "\ndata.15.wasm:\tfile format wasm 0x1\n\nSection Details:\n\nImport[1]:\n - memory[0] pages: initial=0 <- spectest.memory\nData[1]:\n - segment[0] memory=0 size=0 - init i32=0\n",
      "disassemble": "\ndata.15.wasm:\tfile format wasm 0x1\n\nCode Disassembly:\n\n"
    },
    "data.16.wasm": {
      "header": "\ndata.16.wasm:\tfile format wasm 0x1\n\nSections:\n\n   Memory start=0x0000000a end=0x0000000e (size=0x00000004) count: 1\n     Data start=0x00000010 end=0x00000016 (size=0x00000006) count: 1\n",
      "details": "\ndata.16.wasm:\tfile format wasm 0x1\n\nSection Details:\n\nMemory[1]:\n - memory[0] pages: initial=0 max=0\nData[1]:\n - segment[0] memory=0 size=0 - init i32=0\n",
      "disassemble": "\ndata.16.wasm:\tfile format wasm 0x1\n\nCode Disassembly:\n\n"
    },
    "data.17.wasm": {
      "header": "\ndata.17.wasm:\tfile format wasm 0x1\n\nSections:\n\n   Memory start=0x0000000a end=0x0000000d (size=0x00000003) count: 1\n     Data start=0x0000000f end=0x00000017 (size=0x00000008) count: 1\n",
      "details": "\ndata.17.wasm:\tfile format wasm 0x1\n\nSection Details:\n\nMemory[1]:\n - memory[0] pages: initial=1\nData[1]:\n - segment[0] memory=0 size=0 - init i32=65536\n",
      "disassemble": "\ndata.17.wasm:\tfile format wasm 0x1\n\nCode Disassembly:\n\n"
    },
    "data.18.wasm": {
      "header": "\ndata.18.wasm:\tfile format wasm 0x1\n\nSections:\n\n   Memory start=0x0000000a end=0x0000000d (size=0x00000003) count: 1\n     Data start=0x0000000f end=0x00000015 (size=0x00000006) count: 1\n",
      "details": "\ndata.18.wasm:\tfile format wasm 0x1\n\nSection Details:\n\nMemory[1]:\n - memory[0] pages: initial=0\nData[1]:\n - segment[0] memory=0 size=0 - init i32=0\n",
      "disassemble": "\ndata.18.wasm:\tfile format wasm 0x1\n\nCode Disassembly:\n\n"
    },
    "data.19.wasm": {
      "header": "\ndata.19.wasm:\tfile format wasm 0x1\n\nSections:\n\n   Import start=0x0000000a end=0x0000001e (size=0x00000014) count: 1\n     Data start=0x00000020 end=0x00000026 (size=0x00000006) count: 1\n",
      "details": "\ndata.19.wasm:\tfile format wasm 0x1\n\nSection Details:\n\nImport[1]:\n - memory[0] pages: initial=0 <- spectest.memory\nData[1]:\n - segment[0] memory=0 size=0 - init i32=0\n",
      "disassemble": "\ndata.19.wasm:\tfile format wasm 0x1\n\nCode Disassembly:\n\n"
    },
    "data.20.wasm": {
      "header": "\ndata.20.wasm:\tfile format wasm 0x1\n\nSections:\n\n   Memory start=0x0000000a end=0x0000000e (size=0x00000004) count: 1\n     Data start=0x00000010 end=0x00000016 (size=0x00000006) count: 1\n",
      "details": "\ndata.20.wasm:\tfile format wasm 0x1\n\nSection Details:\n\nMemory[1]:\n - memory[0] pages: initial=0 max=0\nData[1]:\n - segment[0] memory=0 size=0 - init i32=0\n",
      "disassemble": "\ndata.20.wasm:\tfile format wasm 0x1\n\nCode Disassembly:\n\n"
    },
    "data.21.wasm": {
      "header": "\ndata.21.wasm:\tfile format wasm 0x1\n\nSections:\n\n   Import start=0x0000000a end=0x0000001e (size=0x00000014) count: 1\n     Data start=0x00000020 end=0x00000027 (size=0x00000007) count: 1\n",
      "details": "\ndata.21.wasm:\tfile format wasm 0x1\n\nSection Details:\n\nImport[1]:\n - memory[0] pages: initial=0 <- spectest.memory\nData[1]:\n - segment[0] memory=0 size=1 - init i32=0\n  - 0000000: 61                                       a\n",
      "disassemble": "\ndata.21.wasm:\tfile format wasm 0x1\n\nCode Disassembly:\n\n"
    },
    "data.22.wasm": {
      "header": "\ndata.22.wasm:\tfile format wasm 0x1\n\nSections:\n\n   Import start=0x0000000a end=0x0000001f (size=0x00000015) count: 1\n     Data start=0x00000021 end=0x00000028 (size=0x00000007) count: 1\n",
      "details": "\ndata.22.wasm:\tfile format wasm 0x1\n\nSection Details:\n\nImport[1]:\n - memory[0] pages: initial=0 max=3 <- spectest.memory\nData[1]:\n - segment[0] memory=0 size=1 - init i32=0\n  - 0000000: 61                                       a\n",
      "disassemble": "\ndata.22.wasm:\tfile format wasm 0x1\n\nCode Disassembly:\n\n"
    },
    "data.23.wasm": {
      "header": "\ndata.23.wasm:\tfile format wasm 0x1\n\nSections:\n\n   Import start=0x0000000a end=0x00000035 (size=0x0000002b) count: 2\n     Data start=0x00000037 end=0x0000003e (size=0x00000007) count: 1\n",
      "details": "\ndata.23.wasm:\tfile format wasm 0x1\n\nSection Details:\n\nImport[2]:\n - global[0] i32 mutable=0 <- spectest.global_i32\n - memory[0] pages: initial=0 <- spectest.memory\nData[1]:\n - segment[0] memory=0 size=1 - init global=0 <spectest.global_i32>\n  - 0000000: 61                                       a\n",
      "disassemble": "\ndata.23.wasm:\tfile format wasm 0x1\n\nCode Disassembly:\n\n"
    },
    "data.24.wasm": {
      "header": "\ndata.24.wasm:\tfile format wasm 0x1\n\nSections:\n\n   Import start=0x0000000a end=0x00000036 (size=0x0000002c) count: 2\n     Data start=0x00000038 end=0x0000003f (size=0x00000007) count: 1\n",
      "details": "\ndata.24.wasm:\tfile format wasm 0x1\n\nSection Details:\n\nImport[2]:\n - global[0] i32 mutable=0 <- spectest.global_i32\n - memory[0] pages: initial=0 max=3 <- spectest.memory\nData[1]:\n - segment[0] memory=0 size=1 - init global=0 <spectest.global_i32>\n  - 0000000: 61                                       a\n",
      "disassemble": "\ndata.24.wasm:\tfile format wasm 0x1\n\nCode Disassembly:\n\n"
    },
    "data.25.wasm": {
      "header": "\ndata.25.wasm:\tfile format wasm 0x1\n\nSections:\n\n   Import start=0x0000000a end=0x0000001e (size=0x00000014) count: 1\n     Data start=0x00000020 end=0x00000027 (size=0x00000007) count: 1\n",
      "details": "\ndata.25.wasm:\tfile format wasm 0x1\n\nSection Details:\n\nImport[1]:\n - memory[0] pages: initial=0 <- spectest.memory\nData[1]:\n - segment[0] memory=0 size=1 - init i32=1\n  - 0000001: 61                                       a\n",
      "disassemble": "\ndata.25.wasm:\tfile format wasm 0x1\n\nCode Disassembly:\n\n"
    },
    "data.26.wasm": {
      "header": "\ndata.26.wasm:\tfile format wasm 0x1\n\nSections:\n\n   Import start=0x0000000a end=0x0000001f (size=0x00000015) count: 1\n     Data start=0x00000021 end=0x00000028 (size=0x00000007) count: 1\n",
      "details": "\ndata.26.wasm:\tfile format wasm 0x1\n\nSection Details:\n\nImport[1]:\n - memory[0] pages: initial=0 max=3 <- spectest.memory\nData[1]:\n - segment[0] memory=0 size=1 - init i32=1\n  - 0000001: 61                                       a\n",
      "disassemble": "\ndata.26.wasm:\tfile format wasm 0x1\n\nCode Disassembly:\n\n"
    }
  }
}
