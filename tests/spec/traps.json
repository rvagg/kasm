{
  "bin": {
    "traps.0.wasm": "AGFzbQEAAAABCwJgAn9/AGACfn4AAwUEAAABAQdNBBBub19kY2UuaTMyLmRpdl9zAAAQbm9fZGNlLmkzMi5kaXZfdQABEG5vX2RjZS5pNjQuZGl2X3MAAhBub19kY2UuaTY0LmRpdl91AAMKJQQIACAAIAFtGgsIACAAIAFuGgsIACAAIAF/GgsIACAAIAGAGgs=",
    "traps.1.wasm": "AGFzbQEAAAABCwJgAn9/AGACfn4AAwUEAAABAQdNBBBub19kY2UuaTMyLnJlbV9zAAAQbm9fZGNlLmkzMi5yZW1fdQABEG5vX2RjZS5pNjQucmVtX3MAAhBub19kY2UuaTY0LnJlbV91AAMKJQQIACAAIAFvGgsIACAAIAFwGgsIACAAIAGBGgsIACAAIAGCGgs=",
    "traps.2.wasm": "AGFzbQEAAAABCQJgAX0AYAF8AAMJCAAAAQEAAAEBB8kBCBZub19kY2UuaTMyLnRydW5jX2YzMl9zAAAWbm9fZGNlLmkzMi50cnVuY19mMzJfdQABFm5vX2RjZS5pMzIudHJ1bmNfZjY0X3MAAhZub19kY2UuaTMyLnRydW5jX2Y2NF91AAMWbm9fZGNlLmk2NC50cnVuY19mMzJfcwAEFm5vX2RjZS5pNjQudHJ1bmNfZjMyX3UABRZub19kY2UuaTY0LnRydW5jX2Y2NF9zAAYWbm9fZGNlLmk2NC50cnVuY19mNjRfdQAHCjkIBgAgAKgaCwYAIACpGgsGACAAqhoLBgAgAKsaCwYAIACuGgsGACAArxoLBgAgALAaCwYAIACxGgs=",
    "traps.3.wasm": "AGFzbQEAAAABBQFgAX8AAw8OAAAAAAAAAAAAAAAAAAAFAwEAAQehAg4Pbm9fZGNlLmkzMi5sb2FkAAATbm9fZGNlLmkzMi5sb2FkMTZfcwABE25vX2RjZS5pMzIubG9hZDE2X3UAAhJub19kY2UuaTMyLmxvYWQ4X3MAAxJub19kY2UuaTMyLmxvYWQ4X3UABA9ub19kY2UuaTY0LmxvYWQABRNub19kY2UuaTY0LmxvYWQzMl9zAAYTbm9fZGNlLmk2NC5sb2FkMzJfdQAHE25vX2RjZS5pNjQubG9hZDE2X3MACBNub19kY2UuaTY0LmxvYWQxNl91AAkSbm9fZGNlLmk2NC5sb2FkOF9zAAoSbm9fZGNlLmk2NC5sb2FkOF91AAsPbm9fZGNlLmYzMi5sb2FkAAwPbm9fZGNlLmY2NC5sb2FkAA0Kfw4IACAAKAIAGgsIACAALgEAGgsIACAALwEAGgsIACAALAAAGgsIACAALQAAGgsIACAAKQMAGgsIACAANAIAGgsIACAANQIAGgsIACAAMgEAGgsIACAAMwEAGgsIACAAMAAAGgsIACAAMQAAGgsIACAAKgIAGgsIACAAKwMAGgs="
  },
  "spec": {"source_filename": "/workspace/wasm-spec/test/core/traps.wast",
 "commands": [
  {"type": "module", "line": 5, "filename": "traps.0.wasm"}, 
  {"type": "assert_trap", "line": 16, "action": {"type": "invoke", "field": "no_dce.i32.div_s", "args": [{"type": "i32", "value": "1"}, {"type": "i32", "value": "0"}]}, "text": "integer divide by zero", "expected": []}, 
  {"type": "assert_trap", "line": 17, "action": {"type": "invoke", "field": "no_dce.i32.div_u", "args": [{"type": "i32", "value": "1"}, {"type": "i32", "value": "0"}]}, "text": "integer divide by zero", "expected": []}, 
  {"type": "assert_trap", "line": 18, "action": {"type": "invoke", "field": "no_dce.i64.div_s", "args": [{"type": "i64", "value": "1"}, {"type": "i64", "value": "0"}]}, "text": "integer divide by zero", "expected": []}, 
  {"type": "assert_trap", "line": 19, "action": {"type": "invoke", "field": "no_dce.i64.div_u", "args": [{"type": "i64", "value": "1"}, {"type": "i64", "value": "0"}]}, "text": "integer divide by zero", "expected": []}, 
  {"type": "assert_trap", "line": 20, "action": {"type": "invoke", "field": "no_dce.i32.div_s", "args": [{"type": "i32", "value": "2147483648"}, {"type": "i32", "value": "4294967295"}]}, "text": "integer overflow", "expected": []}, 
  {"type": "assert_trap", "line": 21, "action": {"type": "invoke", "field": "no_dce.i64.div_s", "args": [{"type": "i64", "value": "9223372036854775808"}, {"type": "i64", "value": "18446744073709551615"}]}, "text": "integer overflow", "expected": []}, 
  {"type": "module", "line": 23, "filename": "traps.1.wasm"}, 
  {"type": "assert_trap", "line": 34, "action": {"type": "invoke", "field": "no_dce.i32.rem_s", "args": [{"type": "i32", "value": "1"}, {"type": "i32", "value": "0"}]}, "text": "integer divide by zero", "expected": []}, 
  {"type": "assert_trap", "line": 35, "action": {"type": "invoke", "field": "no_dce.i32.rem_u", "args": [{"type": "i32", "value": "1"}, {"type": "i32", "value": "0"}]}, "text": "integer divide by zero", "expected": []}, 
  {"type": "assert_trap", "line": 36, "action": {"type": "invoke", "field": "no_dce.i64.rem_s", "args": [{"type": "i64", "value": "1"}, {"type": "i64", "value": "0"}]}, "text": "integer divide by zero", "expected": []}, 
  {"type": "assert_trap", "line": 37, "action": {"type": "invoke", "field": "no_dce.i64.rem_u", "args": [{"type": "i64", "value": "1"}, {"type": "i64", "value": "0"}]}, "text": "integer divide by zero", "expected": []}, 
  {"type": "module", "line": 39, "filename": "traps.2.wasm"}, 
  {"type": "assert_trap", "line": 50, "action": {"type": "invoke", "field": "no_dce.i32.trunc_f32_s", "args": [{"type": "f32", "value": "2143289344"}]}, "text": "invalid conversion to integer", "expected": []}, 
  {"type": "assert_trap", "line": 51, "action": {"type": "invoke", "field": "no_dce.i32.trunc_f32_u", "args": [{"type": "f32", "value": "2143289344"}]}, "text": "invalid conversion to integer", "expected": []}, 
  {"type": "assert_trap", "line": 52, "action": {"type": "invoke", "field": "no_dce.i32.trunc_f64_s", "args": [{"type": "f64", "value": "9221120237041090560"}]}, "text": "invalid conversion to integer", "expected": []}, 
  {"type": "assert_trap", "line": 53, "action": {"type": "invoke", "field": "no_dce.i32.trunc_f64_u", "args": [{"type": "f64", "value": "9221120237041090560"}]}, "text": "invalid conversion to integer", "expected": []}, 
  {"type": "assert_trap", "line": 54, "action": {"type": "invoke", "field": "no_dce.i64.trunc_f32_s", "args": [{"type": "f32", "value": "2143289344"}]}, "text": "invalid conversion to integer", "expected": []}, 
  {"type": "assert_trap", "line": 55, "action": {"type": "invoke", "field": "no_dce.i64.trunc_f32_u", "args": [{"type": "f32", "value": "2143289344"}]}, "text": "invalid conversion to integer", "expected": []}, 
  {"type": "assert_trap", "line": 56, "action": {"type": "invoke", "field": "no_dce.i64.trunc_f64_s", "args": [{"type": "f64", "value": "9221120237041090560"}]}, "text": "invalid conversion to integer", "expected": []}, 
  {"type": "assert_trap", "line": 57, "action": {"type": "invoke", "field": "no_dce.i64.trunc_f64_u", "args": [{"type": "f64", "value": "9221120237041090560"}]}, "text": "invalid conversion to integer", "expected": []}, 
  {"type": "module", "line": 59, "filename": "traps.3.wasm"}, 
  {"type": "assert_trap", "line": 78, "action": {"type": "invoke", "field": "no_dce.i32.load", "args": [{"type": "i32", "value": "65536"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 79, "action": {"type": "invoke", "field": "no_dce.i32.load16_s", "args": [{"type": "i32", "value": "65536"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 80, "action": {"type": "invoke", "field": "no_dce.i32.load16_u", "args": [{"type": "i32", "value": "65536"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 81, "action": {"type": "invoke", "field": "no_dce.i32.load8_s", "args": [{"type": "i32", "value": "65536"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 82, "action": {"type": "invoke", "field": "no_dce.i32.load8_u", "args": [{"type": "i32", "value": "65536"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 83, "action": {"type": "invoke", "field": "no_dce.i64.load", "args": [{"type": "i32", "value": "65536"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 84, "action": {"type": "invoke", "field": "no_dce.i64.load32_s", "args": [{"type": "i32", "value": "65536"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 85, "action": {"type": "invoke", "field": "no_dce.i64.load32_u", "args": [{"type": "i32", "value": "65536"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 86, "action": {"type": "invoke", "field": "no_dce.i64.load16_s", "args": [{"type": "i32", "value": "65536"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 87, "action": {"type": "invoke", "field": "no_dce.i64.load16_u", "args": [{"type": "i32", "value": "65536"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 88, "action": {"type": "invoke", "field": "no_dce.i64.load8_s", "args": [{"type": "i32", "value": "65536"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 89, "action": {"type": "invoke", "field": "no_dce.i64.load8_u", "args": [{"type": "i32", "value": "65536"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 90, "action": {"type": "invoke", "field": "no_dce.f32.load", "args": [{"type": "i32", "value": "65536"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 91, "action": {"type": "invoke", "field": "no_dce.f64.load", "args": [{"type": "i32", "value": "65536"}]}, "text": "out of bounds memory access", "expected": []}]},
  "code": [
    "(module \n  (func (export \"no_dce.i32.div_s\") (param $x i32) (param $y i32) (drop (i32.div_s (local.get $x) (local.get $y))))\n  (func (export \"no_dce.i32.div_u\") (param $x i32) (param $y i32) (drop (i32.div_u (local.get $x) (local.get $y))))\n  (func (export \"no_dce.i64.div_s\") (param $x i64) (param $y i64) (drop (i64.div_s (local.get $x) (local.get $y))))\n  (func (export \"no_dce.i64.div_u\") (param $x i64) (param $y i64) (drop (i64.div_u (local.get $x) (local.get $y)))))",
    "(assert_trap (invoke \"no_dce.i32.div_s\" (i32.const 1) (i32.const 0)) \"integer divide by zero\")",
    "(assert_trap (invoke \"no_dce.i32.div_u\" (i32.const 1) (i32.const 0)) \"integer divide by zero\")",
    "(assert_trap (invoke \"no_dce.i64.div_s\" (i64.const 1) (i64.const 0)) \"integer divide by zero\")",
    "(assert_trap (invoke \"no_dce.i64.div_u\" (i64.const 1) (i64.const 0)) \"integer divide by zero\")",
    "(assert_trap (invoke \"no_dce.i32.div_s\" (i32.const 0x80000000) (i32.const -1)) \"integer overflow\")",
    "(assert_trap (invoke \"no_dce.i64.div_s\" (i64.const 0x8000000000000000) (i64.const -1)) \"integer overflow\")",
    "(module \n  (func (export \"no_dce.i32.rem_s\") (param $x i32) (param $y i32) (drop (i32.rem_s (local.get $x) (local.get $y))))\n  (func (export \"no_dce.i32.rem_u\") (param $x i32) (param $y i32) (drop (i32.rem_u (local.get $x) (local.get $y))))\n  (func (export \"no_dce.i64.rem_s\") (param $x i64) (param $y i64) (drop (i64.rem_s (local.get $x) (local.get $y))))\n  (func (export \"no_dce.i64.rem_u\") (param $x i64) (param $y i64) (drop (i64.rem_u (local.get $x) (local.get $y)))))",
    "(assert_trap (invoke \"no_dce.i32.rem_s\" (i32.const 1) (i32.const 0)) \"integer divide by zero\")",
    "(assert_trap (invoke \"no_dce.i32.rem_u\" (i32.const 1) (i32.const 0)) \"integer divide by zero\")",
    "(assert_trap (invoke \"no_dce.i64.rem_s\" (i64.const 1) (i64.const 0)) \"integer divide by zero\")",
    "(assert_trap (invoke \"no_dce.i64.rem_u\" (i64.const 1) (i64.const 0)) \"integer divide by zero\")",
    "(module \n  (func (export \"no_dce.i32.trunc_f32_s\") (param $x f32) (drop (i32.trunc_f32_s (local.get $x))))\n  (func (export \"no_dce.i32.trunc_f32_u\") (param $x f32) (drop (i32.trunc_f32_u (local.get $x))))\n  (func (export \"no_dce.i32.trunc_f64_s\") (param $x f64) (drop (i32.trunc_f64_s (local.get $x))))\n  (func (export \"no_dce.i32.trunc_f64_u\") (param $x f64) (drop (i32.trunc_f64_u (local.get $x))))\n  (func (export \"no_dce.i64.trunc_f32_s\") (param $x f32) (drop (i64.trunc_f32_s (local.get $x))))\n  (func (export \"no_dce.i64.trunc_f32_u\") (param $x f32) (drop (i64.trunc_f32_u (local.get $x))))\n  (func (export \"no_dce.i64.trunc_f64_s\") (param $x f64) (drop (i64.trunc_f64_s (local.get $x))))\n  (func (export \"no_dce.i64.trunc_f64_u\") (param $x f64) (drop (i64.trunc_f64_u (local.get $x)))))",
    "(assert_trap (invoke \"no_dce.i32.trunc_f32_s\" (f32.const nan)) \"invalid conversion to integer\")",
    "(assert_trap (invoke \"no_dce.i32.trunc_f32_u\" (f32.const nan)) \"invalid conversion to integer\")",
    "(assert_trap (invoke \"no_dce.i32.trunc_f64_s\" (f64.const nan)) \"invalid conversion to integer\")",
    "(assert_trap (invoke \"no_dce.i32.trunc_f64_u\" (f64.const nan)) \"invalid conversion to integer\")",
    "(assert_trap (invoke \"no_dce.i64.trunc_f32_s\" (f32.const nan)) \"invalid conversion to integer\")",
    "(assert_trap (invoke \"no_dce.i64.trunc_f32_u\" (f32.const nan)) \"invalid conversion to integer\")",
    "(assert_trap (invoke \"no_dce.i64.trunc_f64_s\" (f64.const nan)) \"invalid conversion to integer\")",
    "(assert_trap (invoke \"no_dce.i64.trunc_f64_u\" (f64.const nan)) \"invalid conversion to integer\")",
    "(module (memory 1)\n  (func (export \"no_dce.i32.load\") (param $i i32) (drop (i32.load (local.get $i))))\n  (func (export \"no_dce.i32.load16_s\") (param $i i32) (drop (i32.load16_s (local.get $i))))\n  (func (export \"no_dce.i32.load16_u\") (param $i i32) (drop (i32.load16_u (local.get $i))))\n  (func (export \"no_dce.i32.load8_s\") (param $i i32) (drop (i32.load8_s (local.get $i))))\n  (func (export \"no_dce.i32.load8_u\") (param $i i32) (drop (i32.load8_u (local.get $i))))\n  (func (export \"no_dce.i64.load\") (param $i i32) (drop (i64.load (local.get $i))))\n  (func (export \"no_dce.i64.load32_s\") (param $i i32) (drop (i64.load32_s (local.get $i))))\n  (func (export \"no_dce.i64.load32_u\") (param $i i32) (drop (i64.load32_u (local.get $i))))\n  (func (export \"no_dce.i64.load16_s\") (param $i i32) (drop (i64.load16_s (local.get $i))))\n  (func (export \"no_dce.i64.load16_u\") (param $i i32) (drop (i64.load16_u (local.get $i))))\n  (func (export \"no_dce.i64.load8_s\") (param $i i32) (drop (i64.load8_s (local.get $i))))\n  (func (export \"no_dce.i64.load8_u\") (param $i i32) (drop (i64.load8_u (local.get $i))))\n  (func (export \"no_dce.f32.load\") (param $i i32) (drop (f32.load (local.get $i))))\n  (func (export \"no_dce.f64.load\") (param $i i32) (drop (f64.load (local.get $i)))))",
    "(assert_trap (invoke \"no_dce.i32.load\" (i32.const 65536)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"no_dce.i32.load16_s\" (i32.const 65536)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"no_dce.i32.load16_u\" (i32.const 65536)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"no_dce.i32.load8_s\" (i32.const 65536)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"no_dce.i32.load8_u\" (i32.const 65536)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"no_dce.i64.load\" (i32.const 65536)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"no_dce.i64.load32_s\" (i32.const 65536)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"no_dce.i64.load32_u\" (i32.const 65536)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"no_dce.i64.load16_s\" (i32.const 65536)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"no_dce.i64.load16_u\" (i32.const 65536)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"no_dce.i64.load8_s\" (i32.const 65536)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"no_dce.i64.load8_u\" (i32.const 65536)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"no_dce.f32.load\" (i32.const 65536)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"no_dce.f64.load\" (i32.const 65536)) \"out of bounds memory access\")"
  ],
  "dump": {
    "traps.0.wasm": {
      "header": "\ntraps.0.wasm:\tfile format wasm 0x1\n\nSections:\n\n     Type start=0x0000000a end=0x00000015 (size=0x0000000b) count: 2\n Function start=0x00000017 end=0x0000001c (size=0x00000005) count: 4\n   Export start=0x0000001e end=0x0000006b (size=0x0000004d) count: 4\n     Code start=0x0000006d end=0x00000092 (size=0x00000025) count: 4\n",
      "details": "\ntraps.0.wasm:\tfile format wasm 0x1\n\nSection Details:\n\nType[2]:\n - type[0] (i32, i32) -> nil\n - type[1] (i64, i64) -> nil\nFunction[4]:\n - func[0] sig=0 <no_dce.i32.div_s>\n - func[1] sig=0 <no_dce.i32.div_u>\n - func[2] sig=1 <no_dce.i64.div_s>\n - func[3] sig=1 <no_dce.i64.div_u>\nExport[4]:\n - func[0] <no_dce.i32.div_s> -> \"no_dce.i32.div_s\"\n - func[1] <no_dce.i32.div_u> -> \"no_dce.i32.div_u\"\n - func[2] <no_dce.i64.div_s> -> \"no_dce.i64.div_s\"\n - func[3] <no_dce.i64.div_u> -> \"no_dce.i64.div_u\"\nCode[4]:\n - func[0] size=8 <no_dce.i32.div_s>\n - func[1] size=8 <no_dce.i32.div_u>\n - func[2] size=8 <no_dce.i64.div_s>\n - func[3] size=8 <no_dce.i64.div_u>\n",
      "disassemble": "\ntraps.0.wasm:\tfile format wasm 0x1\n\nCode Disassembly:\n\n00006f func[0] <no_dce.i32.div_s>:\n 000070: 20 00                      | local.get 0\n 000072: 20 01                      | local.get 1\n 000074: 6d                         | i32.div_s\n 000075: 1a                         | drop\n 000076: 0b                         | end\n000078 func[1] <no_dce.i32.div_u>:\n 000079: 20 00                      | local.get 0\n 00007b: 20 01                      | local.get 1\n 00007d: 6e                         | i32.div_u\n 00007e: 1a                         | drop\n 00007f: 0b                         | end\n000081 func[2] <no_dce.i64.div_s>:\n 000082: 20 00                      | local.get 0\n 000084: 20 01                      | local.get 1\n 000086: 7f                         | i64.div_s\n 000087: 1a                         | drop\n 000088: 0b                         | end\n00008a func[3] <no_dce.i64.div_u>:\n 00008b: 20 00                      | local.get 0\n 00008d: 20 01                      | local.get 1\n 00008f: 80                         | i64.div_u\n 000090: 1a                         | drop\n 000091: 0b                         | end\n"
    },
    "traps.1.wasm": {
      "header": "\ntraps.1.wasm:\tfile format wasm 0x1\n\nSections:\n\n     Type start=0x0000000a end=0x00000015 (size=0x0000000b) count: 2\n Function start=0x00000017 end=0x0000001c (size=0x00000005) count: 4\n   Export start=0x0000001e end=0x0000006b (size=0x0000004d) count: 4\n     Code start=0x0000006d end=0x00000092 (size=0x00000025) count: 4\n",
      "details": "\ntraps.1.wasm:\tfile format wasm 0x1\n\nSection Details:\n\nType[2]:\n - type[0] (i32, i32) -> nil\n - type[1] (i64, i64) -> nil\nFunction[4]:\n - func[0] sig=0 <no_dce.i32.rem_s>\n - func[1] sig=0 <no_dce.i32.rem_u>\n - func[2] sig=1 <no_dce.i64.rem_s>\n - func[3] sig=1 <no_dce.i64.rem_u>\nExport[4]:\n - func[0] <no_dce.i32.rem_s> -> \"no_dce.i32.rem_s\"\n - func[1] <no_dce.i32.rem_u> -> \"no_dce.i32.rem_u\"\n - func[2] <no_dce.i64.rem_s> -> \"no_dce.i64.rem_s\"\n - func[3] <no_dce.i64.rem_u> -> \"no_dce.i64.rem_u\"\nCode[4]:\n - func[0] size=8 <no_dce.i32.rem_s>\n - func[1] size=8 <no_dce.i32.rem_u>\n - func[2] size=8 <no_dce.i64.rem_s>\n - func[3] size=8 <no_dce.i64.rem_u>\n",
      "disassemble": "\ntraps.1.wasm:\tfile format wasm 0x1\n\nCode Disassembly:\n\n00006f func[0] <no_dce.i32.rem_s>:\n 000070: 20 00                      | local.get 0\n 000072: 20 01                      | local.get 1\n 000074: 6f                         | i32.rem_s\n 000075: 1a                         | drop\n 000076: 0b                         | end\n000078 func[1] <no_dce.i32.rem_u>:\n 000079: 20 00                      | local.get 0\n 00007b: 20 01                      | local.get 1\n 00007d: 70                         | i32.rem_u\n 00007e: 1a                         | drop\n 00007f: 0b                         | end\n000081 func[2] <no_dce.i64.rem_s>:\n 000082: 20 00                      | local.get 0\n 000084: 20 01                      | local.get 1\n 000086: 81                         | i64.rem_s\n 000087: 1a                         | drop\n 000088: 0b                         | end\n00008a func[3] <no_dce.i64.rem_u>:\n 00008b: 20 00                      | local.get 0\n 00008d: 20 01                      | local.get 1\n 00008f: 82                         | i64.rem_u\n 000090: 1a                         | drop\n 000091: 0b                         | end\n"
    },
    "traps.2.wasm": {
      "header": "\ntraps.2.wasm:\tfile format wasm 0x1\n\nSections:\n\n     Type start=0x0000000a end=0x00000013 (size=0x00000009) count: 2\n Function start=0x00000015 end=0x0000001e (size=0x00000009) count: 8\n   Export start=0x00000021 end=0x000000ea (size=0x000000c9) count: 8\n     Code start=0x000000ec end=0x00000125 (size=0x00000039) count: 8\n",
      "details": "\ntraps.2.wasm:\tfile format wasm 0x1\n\nSection Details:\n\nType[2]:\n - type[0] (f32) -> nil\n - type[1] (f64) -> nil\nFunction[8]:\n - func[0] sig=0 <no_dce.i32.trunc_f32_s>\n - func[1] sig=0 <no_dce.i32.trunc_f32_u>\n - func[2] sig=1 <no_dce.i32.trunc_f64_s>\n - func[3] sig=1 <no_dce.i32.trunc_f64_u>\n - func[4] sig=0 <no_dce.i64.trunc_f32_s>\n - func[5] sig=0 <no_dce.i64.trunc_f32_u>\n - func[6] sig=1 <no_dce.i64.trunc_f64_s>\n - func[7] sig=1 <no_dce.i64.trunc_f64_u>\nExport[8]:\n - func[0] <no_dce.i32.trunc_f32_s> -> \"no_dce.i32.trunc_f32_s\"\n - func[1] <no_dce.i32.trunc_f32_u> -> \"no_dce.i32.trunc_f32_u\"\n - func[2] <no_dce.i32.trunc_f64_s> -> \"no_dce.i32.trunc_f64_s\"\n - func[3] <no_dce.i32.trunc_f64_u> -> \"no_dce.i32.trunc_f64_u\"\n - func[4] <no_dce.i64.trunc_f32_s> -> \"no_dce.i64.trunc_f32_s\"\n - func[5] <no_dce.i64.trunc_f32_u> -> \"no_dce.i64.trunc_f32_u\"\n - func[6] <no_dce.i64.trunc_f64_s> -> \"no_dce.i64.trunc_f64_s\"\n - func[7] <no_dce.i64.trunc_f64_u> -> \"no_dce.i64.trunc_f64_u\"\nCode[8]:\n - func[0] size=6 <no_dce.i32.trunc_f32_s>\n - func[1] size=6 <no_dce.i32.trunc_f32_u>\n - func[2] size=6 <no_dce.i32.trunc_f64_s>\n - func[3] size=6 <no_dce.i32.trunc_f64_u>\n - func[4] size=6 <no_dce.i64.trunc_f32_s>\n - func[5] size=6 <no_dce.i64.trunc_f32_u>\n - func[6] size=6 <no_dce.i64.trunc_f64_s>\n - func[7] size=6 <no_dce.i64.trunc_f64_u>\n",
      "disassemble": "\ntraps.2.wasm:\tfile format wasm 0x1\n\nCode Disassembly:\n\n0000ee func[0] <no_dce.i32.trunc_f32_s>:\n 0000ef: 20 00                      | local.get 0\n 0000f1: a8                         | i32.trunc_f32_s\n 0000f2: 1a                         | drop\n 0000f3: 0b                         | end\n0000f5 func[1] <no_dce.i32.trunc_f32_u>:\n 0000f6: 20 00                      | local.get 0\n 0000f8: a9                         | i32.trunc_f32_u\n 0000f9: 1a                         | drop\n 0000fa: 0b                         | end\n0000fc func[2] <no_dce.i32.trunc_f64_s>:\n 0000fd: 20 00                      | local.get 0\n 0000ff: aa                         | i32.trunc_f64_s\n 000100: 1a                         | drop\n 000101: 0b                         | end\n000103 func[3] <no_dce.i32.trunc_f64_u>:\n 000104: 20 00                      | local.get 0\n 000106: ab                         | i32.trunc_f64_u\n 000107: 1a                         | drop\n 000108: 0b                         | end\n00010a func[4] <no_dce.i64.trunc_f32_s>:\n 00010b: 20 00                      | local.get 0\n 00010d: ae                         | i64.trunc_f32_s\n 00010e: 1a                         | drop\n 00010f: 0b                         | end\n000111 func[5] <no_dce.i64.trunc_f32_u>:\n 000112: 20 00                      | local.get 0\n 000114: af                         | i64.trunc_f32_u\n 000115: 1a                         | drop\n 000116: 0b                         | end\n000118 func[6] <no_dce.i64.trunc_f64_s>:\n 000119: 20 00                      | local.get 0\n 00011b: b0                         | i64.trunc_f64_s\n 00011c: 1a                         | drop\n 00011d: 0b                         | end\n00011f func[7] <no_dce.i64.trunc_f64_u>:\n 000120: 20 00                      | local.get 0\n 000122: b1                         | i64.trunc_f64_u\n 000123: 1a                         | drop\n 000124: 0b                         | end\n"
    },
    "traps.3.wasm": {
      "header": "\ntraps.3.wasm:\tfile format wasm 0x1\n\nSections:\n\n     Type start=0x0000000a end=0x0000000f (size=0x00000005) count: 1\n Function start=0x00000011 end=0x00000020 (size=0x0000000f) count: 14\n   Memory start=0x00000022 end=0x00000025 (size=0x00000003) count: 1\n   Export start=0x00000028 end=0x00000149 (size=0x00000121) count: 14\n     Code start=0x0000014b end=0x000001ca (size=0x0000007f) count: 14\n",
      "details": "\ntraps.3.wasm:\tfile format wasm 0x1\n\nSection Details:\n\nType[1]:\n - type[0] (i32) -> nil\nFunction[14]:\n - func[0] sig=0 <no_dce.i32.load>\n - func[1] sig=0 <no_dce.i32.load16_s>\n - func[2] sig=0 <no_dce.i32.load16_u>\n - func[3] sig=0 <no_dce.i32.load8_s>\n - func[4] sig=0 <no_dce.i32.load8_u>\n - func[5] sig=0 <no_dce.i64.load>\n - func[6] sig=0 <no_dce.i64.load32_s>\n - func[7] sig=0 <no_dce.i64.load32_u>\n - func[8] sig=0 <no_dce.i64.load16_s>\n - func[9] sig=0 <no_dce.i64.load16_u>\n - func[10] sig=0 <no_dce.i64.load8_s>\n - func[11] sig=0 <no_dce.i64.load8_u>\n - func[12] sig=0 <no_dce.f32.load>\n - func[13] sig=0 <no_dce.f64.load>\nMemory[1]:\n - memory[0] pages: initial=1\nExport[14]:\n - func[0] <no_dce.i32.load> -> \"no_dce.i32.load\"\n - func[1] <no_dce.i32.load16_s> -> \"no_dce.i32.load16_s\"\n - func[2] <no_dce.i32.load16_u> -> \"no_dce.i32.load16_u\"\n - func[3] <no_dce.i32.load8_s> -> \"no_dce.i32.load8_s\"\n - func[4] <no_dce.i32.load8_u> -> \"no_dce.i32.load8_u\"\n - func[5] <no_dce.i64.load> -> \"no_dce.i64.load\"\n - func[6] <no_dce.i64.load32_s> -> \"no_dce.i64.load32_s\"\n - func[7] <no_dce.i64.load32_u> -> \"no_dce.i64.load32_u\"\n - func[8] <no_dce.i64.load16_s> -> \"no_dce.i64.load16_s\"\n - func[9] <no_dce.i64.load16_u> -> \"no_dce.i64.load16_u\"\n - func[10] <no_dce.i64.load8_s> -> \"no_dce.i64.load8_s\"\n - func[11] <no_dce.i64.load8_u> -> \"no_dce.i64.load8_u\"\n - func[12] <no_dce.f32.load> -> \"no_dce.f32.load\"\n - func[13] <no_dce.f64.load> -> \"no_dce.f64.load\"\nCode[14]:\n - func[0] size=8 <no_dce.i32.load>\n - func[1] size=8 <no_dce.i32.load16_s>\n - func[2] size=8 <no_dce.i32.load16_u>\n - func[3] size=8 <no_dce.i32.load8_s>\n - func[4] size=8 <no_dce.i32.load8_u>\n - func[5] size=8 <no_dce.i64.load>\n - func[6] size=8 <no_dce.i64.load32_s>\n - func[7] size=8 <no_dce.i64.load32_u>\n - func[8] size=8 <no_dce.i64.load16_s>\n - func[9] size=8 <no_dce.i64.load16_u>\n - func[10] size=8 <no_dce.i64.load8_s>\n - func[11] size=8 <no_dce.i64.load8_u>\n - func[12] size=8 <no_dce.f32.load>\n - func[13] size=8 <no_dce.f64.load>\n",
      "disassemble": "\ntraps.3.wasm:\tfile format wasm 0x1\n\nCode Disassembly:\n\n00014d func[0] <no_dce.i32.load>:\n 00014e: 20 00                      | local.get 0\n 000150: 28 02 00                   | i32.load 2 0\n 000153: 1a                         | drop\n 000154: 0b                         | end\n000156 func[1] <no_dce.i32.load16_s>:\n 000157: 20 00                      | local.get 0\n 000159: 2e 01 00                   | i32.load16_s 1 0\n 00015c: 1a                         | drop\n 00015d: 0b                         | end\n00015f func[2] <no_dce.i32.load16_u>:\n 000160: 20 00                      | local.get 0\n 000162: 2f 01 00                   | i32.load16_u 1 0\n 000165: 1a                         | drop\n 000166: 0b                         | end\n000168 func[3] <no_dce.i32.load8_s>:\n 000169: 20 00                      | local.get 0\n 00016b: 2c 00 00                   | i32.load8_s 0 0\n 00016e: 1a                         | drop\n 00016f: 0b                         | end\n000171 func[4] <no_dce.i32.load8_u>:\n 000172: 20 00                      | local.get 0\n 000174: 2d 00 00                   | i32.load8_u 0 0\n 000177: 1a                         | drop\n 000178: 0b                         | end\n00017a func[5] <no_dce.i64.load>:\n 00017b: 20 00                      | local.get 0\n 00017d: 29 03 00                   | i64.load 3 0\n 000180: 1a                         | drop\n 000181: 0b                         | end\n000183 func[6] <no_dce.i64.load32_s>:\n 000184: 20 00                      | local.get 0\n 000186: 34 02 00                   | i64.load32_s 2 0\n 000189: 1a                         | drop\n 00018a: 0b                         | end\n00018c func[7] <no_dce.i64.load32_u>:\n 00018d: 20 00                      | local.get 0\n 00018f: 35 02 00                   | i64.load32_u 2 0\n 000192: 1a                         | drop\n 000193: 0b                         | end\n000195 func[8] <no_dce.i64.load16_s>:\n 000196: 20 00                      | local.get 0\n 000198: 32 01 00                   | i64.load16_s 1 0\n 00019b: 1a                         | drop\n 00019c: 0b                         | end\n00019e func[9] <no_dce.i64.load16_u>:\n 00019f: 20 00                      | local.get 0\n 0001a1: 33 01 00                   | i64.load16_u 1 0\n 0001a4: 1a                         | drop\n 0001a5: 0b                         | end\n0001a7 func[10] <no_dce.i64.load8_s>:\n 0001a8: 20 00                      | local.get 0\n 0001aa: 30 00 00                   | i64.load8_s 0 0\n 0001ad: 1a                         | drop\n 0001ae: 0b                         | end\n0001b0 func[11] <no_dce.i64.load8_u>:\n 0001b1: 20 00                      | local.get 0\n 0001b3: 31 00 00                   | i64.load8_u 0 0\n 0001b6: 1a                         | drop\n 0001b7: 0b                         | end\n0001b9 func[12] <no_dce.f32.load>:\n 0001ba: 20 00                      | local.get 0\n 0001bc: 2a 02 00                   | f32.load 2 0\n 0001bf: 1a                         | drop\n 0001c0: 0b                         | end\n0001c2 func[13] <no_dce.f64.load>:\n 0001c3: 20 00                      | local.get 0\n 0001c5: 2b 03 00                   | f64.load 3 0\n 0001c8: 1a                         | drop\n 0001c9: 0b                         | end\n"
    }
  }
}
