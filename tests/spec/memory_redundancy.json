{
  "bin": {
    "memory_redundancy.0.wasm": "AGFzbQEAAAABEQRgAABgAAF/YAABfWABfwF/AwcGAAEBAgMBBQQBAQEBB2sGD3plcm9fZXZlcnl0aGluZwAAEnRlc3Rfc3RvcmVfdG9fbG9hZAABE3Rlc3RfcmVkdW5kYW50X2xvYWQAAg90ZXN0X2RlYWRfc3RvcmUAAwZtYWxsb2MABA9tYWxsb2NfYWxpYXNpbmcABQqlAQYeAEEAQQA2AgBBBEEANgIAQQhBADYCAEEMQQA2AgALGABBCEEANgIAQQVDAAAAgDgCAEEIKAIACyIBAn9BCCgCACEAQQVBgICAgHg2AgBBCCgCACEBIAAgAWoLHwEBfUEIQaPGjJkCNgIAQQsqAgAhAEEIQQA2AgAgAAsEAEEQCyMBAn9BBBAEIQBBBBAEIQEgAEEqNgIAIAFBKzYCACAAKAIACw=="
  },
  "spec": {"source_filename": "/workspace/wasm-spec/test/core/memory_redundancy.wast",
 "commands": [
  {"type": "module", "line": 5, "filename": "memory_redundancy.0.wasm"}, 
  {"type": "assert_return", "line": 59, "action": {"type": "invoke", "field": "test_store_to_load", "args": []}, "expected": [{"type": "i32", "value": "128"}]}, 
  {"type": "action", "line": 60, "action": {"type": "invoke", "field": "zero_everything", "args": []}, "expected": []}, 
  {"type": "assert_return", "line": 61, "action": {"type": "invoke", "field": "test_redundant_load", "args": []}, "expected": [{"type": "i32", "value": "128"}]}, 
  {"type": "action", "line": 62, "action": {"type": "invoke", "field": "zero_everything", "args": []}, "expected": []}, 
  {"type": "assert_return", "line": 63, "action": {"type": "invoke", "field": "test_dead_store", "args": []}, "expected": [{"type": "f32", "value": "35"}]}, 
  {"type": "action", "line": 64, "action": {"type": "invoke", "field": "zero_everything", "args": []}, "expected": []}, 
  {"type": "assert_return", "line": 65, "action": {"type": "invoke", "field": "malloc_aliasing", "args": []}, "expected": [{"type": "i32", "value": "43"}]}]},
  "code": [
    "(module (memory 1 1)\n  (func (export \"zero_everything\") (i32.store (i32.const 0) (i32.const 0)) (i32.store (i32.const 4) (i32.const 0)) (i32.store (i32.const 8) (i32.const 0)) (i32.store (i32.const 12) (i32.const 0)) )\n  (func (export \"test_store_to_load\") (result i32) (i32.store (i32.const 8) (i32.const 0)) (f32.store (i32.const 5) (f32.const -0.0)) (i32.load (i32.const 8)) )\n  (func (export \"test_redundant_load\") (result i32) (local $t i32) (local $s i32) (local.set $t (i32.load (i32.const 8))) (i32.store (i32.const 5) (i32.const 0x80000000)) (local.set $s (i32.load (i32.const 8))) (i32.add (local.get $t) (local.get $s)) )\n  (func (export \"test_dead_store\") (result f32) (local $t f32) (i32.store (i32.const 8) (i32.const 0x23232323)) (local.set $t (f32.load (i32.const 11))) (i32.store (i32.const 8) (i32.const 0)) (local.get $t) )\n  (func $malloc (export \"malloc\") (param $size i32) (result i32) (i32.const 16) )\n  (func (export \"malloc_aliasing\") (result i32) (local $x i32) (local $y i32) (local.set $x (call $malloc (i32.const 4))) (local.set $y (call $malloc (i32.const 4))) (i32.store (local.get $x) (i32.const 42)) (i32.store (local.get $y) (i32.const 43)) (i32.load (local.get $x)) ))",
    "(assert_return (invoke \"test_store_to_load\") (i32.const 0x00000080))",
    "(invoke \"zero_everything\")",
    "(assert_return (invoke \"test_redundant_load\") (i32.const 0x00000080))",
    "(invoke \"zero_everything\")",
    "(assert_return (invoke \"test_dead_store\") (f32.const 0x1.18p-144))",
    "(invoke \"zero_everything\")",
    "(assert_return (invoke \"malloc_aliasing\") (i32.const 43))"
  ],
  "dump": {
    "memory_redundancy.0.wasm": {
      "header": "\nmemory_redundancy.0.wasm:\tfile format wasm 0x1\n\nSections:\n\n     Type start=0x0000000a end=0x0000001b (size=0x00000011) count: 4\n Function start=0x0000001d end=0x00000024 (size=0x00000007) count: 6\n   Memory start=0x00000026 end=0x0000002a (size=0x00000004) count: 1\n   Export start=0x0000002c end=0x00000097 (size=0x0000006b) count: 6\n     Code start=0x0000009a end=0x0000013f (size=0x000000a5) count: 6\n",
      "details": "\nmemory_redundancy.0.wasm:\tfile format wasm 0x1\n\nSection Details:\n\nType[4]:\n - type[0] () -> nil\n - type[1] () -> i32\n - type[2] () -> f32\n - type[3] (i32) -> i32\nFunction[6]:\n - func[0] sig=0 <zero_everything>\n - func[1] sig=1 <test_store_to_load>\n - func[2] sig=1 <test_redundant_load>\n - func[3] sig=2 <test_dead_store>\n - func[4] sig=3 <malloc>\n - func[5] sig=1 <malloc_aliasing>\nMemory[1]:\n - memory[0] pages: initial=1 max=1\nExport[6]:\n - func[0] <zero_everything> -> \"zero_everything\"\n - func[1] <test_store_to_load> -> \"test_store_to_load\"\n - func[2] <test_redundant_load> -> \"test_redundant_load\"\n - func[3] <test_dead_store> -> \"test_dead_store\"\n - func[4] <malloc> -> \"malloc\"\n - func[5] <malloc_aliasing> -> \"malloc_aliasing\"\nCode[6]:\n - func[0] size=30 <zero_everything>\n - func[1] size=24 <test_store_to_load>\n - func[2] size=34 <test_redundant_load>\n - func[3] size=31 <test_dead_store>\n - func[4] size=4 <malloc>\n - func[5] size=35 <malloc_aliasing>\n",
      "disassemble": "\nmemory_redundancy.0.wasm:\tfile format wasm 0x1\n\nCode Disassembly:\n\n00009c func[0] <zero_everything>:\n 00009d: 41 00                      | i32.const 0\n 00009f: 41 00                      | i32.const 0\n 0000a1: 36 02 00                   | i32.store 2 0\n 0000a4: 41 04                      | i32.const 4\n 0000a6: 41 00                      | i32.const 0\n 0000a8: 36 02 00                   | i32.store 2 0\n 0000ab: 41 08                      | i32.const 8\n 0000ad: 41 00                      | i32.const 0\n 0000af: 36 02 00                   | i32.store 2 0\n 0000b2: 41 0c                      | i32.const 12\n 0000b4: 41 00                      | i32.const 0\n 0000b6: 36 02 00                   | i32.store 2 0\n 0000b9: 0b                         | end\n0000bb func[1] <test_store_to_load>:\n 0000bc: 41 08                      | i32.const 8\n 0000be: 41 00                      | i32.const 0\n 0000c0: 36 02 00                   | i32.store 2 0\n 0000c3: 41 05                      | i32.const 5\n 0000c5: 43 00 00 00 80             | f32.const -0x0p+0\n 0000ca: 38 02 00                   | f32.store 2 0\n 0000cd: 41 08                      | i32.const 8\n 0000cf: 28 02 00                   | i32.load 2 0\n 0000d2: 0b                         | end\n0000d4 func[2] <test_redundant_load>:\n 0000d5: 02 7f                      | local[0..1] type=i32\n 0000d7: 41 08                      | i32.const 8\n 0000d9: 28 02 00                   | i32.load 2 0\n 0000dc: 21 00                      | local.set 0\n 0000de: 41 05                      | i32.const 5\n 0000e0: 41 80 80 80 80 78          | i32.const 2147483648\n 0000e6: 36 02 00                   | i32.store 2 0\n 0000e9: 41 08                      | i32.const 8\n 0000eb: 28 02 00                   | i32.load 2 0\n 0000ee: 21 01                      | local.set 1\n 0000f0: 20 00                      | local.get 0\n 0000f2: 20 01                      | local.get 1\n 0000f4: 6a                         | i32.add\n 0000f5: 0b                         | end\n0000f7 func[3] <test_dead_store>:\n 0000f8: 01 7d                      | local[0] type=f32\n 0000fa: 41 08                      | i32.const 8\n 0000fc: 41 a3 c6 8c 99 02          | i32.const 589505315\n 000102: 36 02 00                   | i32.store 2 0\n 000105: 41 0b                      | i32.const 11\n 000107: 2a 02 00                   | f32.load 2 0\n 00010a: 21 00                      | local.set 0\n 00010c: 41 08                      | i32.const 8\n 00010e: 41 00                      | i32.const 0\n 000110: 36 02 00                   | i32.store 2 0\n 000113: 20 00                      | local.get 0\n 000115: 0b                         | end\n000117 func[4] <malloc>:\n 000118: 41 10                      | i32.const 16\n 00011a: 0b                         | end\n00011c func[5] <malloc_aliasing>:\n 00011d: 02 7f                      | local[0..1] type=i32\n 00011f: 41 04                      | i32.const 4\n 000121: 10 04                      | call 4 <malloc>\n 000123: 21 00                      | local.set 0\n 000125: 41 04                      | i32.const 4\n 000127: 10 04                      | call 4 <malloc>\n 000129: 21 01                      | local.set 1\n 00012b: 20 00                      | local.get 0\n 00012d: 41 2a                      | i32.const 42\n 00012f: 36 02 00                   | i32.store 2 0\n 000132: 20 01                      | local.get 1\n 000134: 41 2b                      | i32.const 43\n 000136: 36 02 00                   | i32.store 2 0\n 000139: 20 00                      | local.get 0\n 00013b: 28 02 00                   | i32.load 2 0\n 00013e: 0b                         | end\n"
    }
  }
}
