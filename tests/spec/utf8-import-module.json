{
  "bin": {
    "utf8-import-module.0.wasm": "AGFzbQEAAAACCwEEdGVzdAGAA38A",
    "utf8-import-module.1.wasm": "AGFzbQEAAAACCwEEdGVzdAGPA38A",
    "utf8-import-module.10.wasm": "AGFzbQEAAAACDAEEdGVzdALAvwN/AA==",
    "utf8-import-module.100.wasm": "AGFzbQEAAAACDgEEdGVzdATx/YCAA38A",
    "utf8-import-module.101.wasm": "AGFzbQEAAAACDgEEdGVzdATzAICAA38A",
    "utf8-import-module.102.wasm": "AGFzbQEAAAACDgEEdGVzdATzf4CAA38A",
    "utf8-import-module.103.wasm": "AGFzbQEAAAACDgEEdGVzdATzwICAA38A",
    "utf8-import-module.104.wasm": "AGFzbQEAAAACDgEEdGVzdATz/YCAA38A",
    "utf8-import-module.105.wasm": "AGFzbQEAAAACDgEEdGVzdAT0AICAA38A",
    "utf8-import-module.106.wasm": "AGFzbQEAAAACDgEEdGVzdAT0f4CAA38A",
    "utf8-import-module.107.wasm": "AGFzbQEAAAACDgEEdGVzdAT0kICAA38A",
    "utf8-import-module.108.wasm": "AGFzbQEAAAACDgEEdGVzdAT0v4CAA38A",
    "utf8-import-module.109.wasm": "AGFzbQEAAAACDgEEdGVzdAT0wICAA38A",
    "utf8-import-module.11.wasm": "AGFzbQEAAAACDAEEdGVzdALBgAN/AA==",
    "utf8-import-module.110.wasm": "AGFzbQEAAAACDgEEdGVzdAT0/YCAA38A",
    "utf8-import-module.111.wasm": "AGFzbQEAAAACDgEEdGVzdAT1gICAA38A",
    "utf8-import-module.112.wasm": "AGFzbQEAAAACDgEEdGVzdAT3gICAA38A",
    "utf8-import-module.113.wasm": "AGFzbQEAAAACDgEEdGVzdAT3v7+/A38A",
    "utf8-import-module.114.wasm": "AGFzbQEAAAACDgEEdGVzdATwkACQA38A",
    "utf8-import-module.115.wasm": "AGFzbQEAAAACDgEEdGVzdATwkH+QA38A",
    "utf8-import-module.116.wasm": "AGFzbQEAAAACDgEEdGVzdATwkMCQA38A",
    "utf8-import-module.117.wasm": "AGFzbQEAAAACDgEEdGVzdATwkP2QA38A",
    "utf8-import-module.118.wasm": "AGFzbQEAAAACDgEEdGVzdATxgACAA38A",
    "utf8-import-module.119.wasm": "AGFzbQEAAAACDgEEdGVzdATxgH+AA38A",
    "utf8-import-module.12.wasm": "AGFzbQEAAAACDAEEdGVzdALBvwN/AA==",
    "utf8-import-module.120.wasm": "AGFzbQEAAAACDgEEdGVzdATxgMCAA38A",
    "utf8-import-module.121.wasm": "AGFzbQEAAAACDgEEdGVzdATxgP2AA38A",
    "utf8-import-module.122.wasm": "AGFzbQEAAAACDgEEdGVzdATzgACAA38A",
    "utf8-import-module.123.wasm": "AGFzbQEAAAACDgEEdGVzdATzgH+AA38A",
    "utf8-import-module.124.wasm": "AGFzbQEAAAACDgEEdGVzdATzgMCAA38A",
    "utf8-import-module.125.wasm": "AGFzbQEAAAACDgEEdGVzdATzgP2AA38A",
    "utf8-import-module.126.wasm": "AGFzbQEAAAACDgEEdGVzdAT0gACAA38A",
    "utf8-import-module.127.wasm": "AGFzbQEAAAACDgEEdGVzdAT0gH+AA38A",
    "utf8-import-module.128.wasm": "AGFzbQEAAAACDgEEdGVzdAT0gMCAA38A",
    "utf8-import-module.129.wasm": "AGFzbQEAAAACDgEEdGVzdAT0gP2AA38A",
    "utf8-import-module.13.wasm": "AGFzbQEAAAACDAEEdGVzdALCAAN/AA==",
    "utf8-import-module.130.wasm": "AGFzbQEAAAACDgEEdGVzdATwkJAAA38A",
    "utf8-import-module.131.wasm": "AGFzbQEAAAACDgEEdGVzdATwkJB/A38A",
    "utf8-import-module.132.wasm": "AGFzbQEAAAACDgEEdGVzdATwkJDAA38A",
    "utf8-import-module.133.wasm": "AGFzbQEAAAACDgEEdGVzdATwkJD9A38A",
    "utf8-import-module.134.wasm": "AGFzbQEAAAACDgEEdGVzdATxgIAAA38A",
    "utf8-import-module.135.wasm": "AGFzbQEAAAACDgEEdGVzdATxgIB/A38A",
    "utf8-import-module.136.wasm": "AGFzbQEAAAACDgEEdGVzdATxgIDAA38A",
    "utf8-import-module.137.wasm": "AGFzbQEAAAACDgEEdGVzdATxgID9A38A",
    "utf8-import-module.138.wasm": "AGFzbQEAAAACDgEEdGVzdATzgIAAA38A",
    "utf8-import-module.139.wasm": "AGFzbQEAAAACDgEEdGVzdATzgIB/A38A",
    "utf8-import-module.14.wasm": "AGFzbQEAAAACDAEEdGVzdALCfwN/AA==",
    "utf8-import-module.140.wasm": "AGFzbQEAAAACDgEEdGVzdATzgIDAA38A",
    "utf8-import-module.141.wasm": "AGFzbQEAAAACDgEEdGVzdATzgID9A38A",
    "utf8-import-module.142.wasm": "AGFzbQEAAAACDgEEdGVzdAT0gIAAA38A",
    "utf8-import-module.143.wasm": "AGFzbQEAAAACDgEEdGVzdAT0gIB/A38A",
    "utf8-import-module.144.wasm": "AGFzbQEAAAACDgEEdGVzdAT0gIDAA38A",
    "utf8-import-module.145.wasm": "AGFzbQEAAAACDgEEdGVzdAT0gID9A38A",
    "utf8-import-module.146.wasm": "AGFzbQEAAAACEAEEdGVzdAb4gICAgIADfwA=",
    "utf8-import-module.147.wasm": "AGFzbQEAAAACDgEEdGVzdAT4gICAA38A",
    "utf8-import-module.148.wasm": "AGFzbQEAAAACDwEEdGVzdAX4gICAIwN/AA==",
    "utf8-import-module.149.wasm": "AGFzbQEAAAACDQEEdGVzdAP4gIADfwA=",
    "utf8-import-module.15.wasm": "AGFzbQEAAAACDAEEdGVzdALCwAN/AA==",
    "utf8-import-module.150.wasm": "AGFzbQEAAAACDgEEdGVzdAT4gIAjA38A",
    "utf8-import-module.151.wasm": "AGFzbQEAAAACDAEEdGVzdAL4gAN/AA==",
    "utf8-import-module.152.wasm": "AGFzbQEAAAACDQEEdGVzdAP4gCMDfwA=",
    "utf8-import-module.153.wasm": "AGFzbQEAAAACCwEEdGVzdAH4A38A",
    "utf8-import-module.154.wasm": "AGFzbQEAAAACDAEEdGVzdAL4IwN/AA==",
    "utf8-import-module.155.wasm": "AGFzbQEAAAACDwEEdGVzdAX4gICAgAN/AA==",
    "utf8-import-module.156.wasm": "AGFzbQEAAAACDwEEdGVzdAX7v7+/vwN/AA==",
    "utf8-import-module.157.wasm": "AGFzbQEAAAACEQEEdGVzdAf8gICAgICAA38A",
    "utf8-import-module.158.wasm": "AGFzbQEAAAACDwEEdGVzdAX8gICAgAN/AA==",
    "utf8-import-module.159.wasm": "AGFzbQEAAAACEAEEdGVzdAb8gICAgCMDfwA=",
    "utf8-import-module.16.wasm": "AGFzbQEAAAACDAEEdGVzdALC/QN/AA==",
    "utf8-import-module.160.wasm": "AGFzbQEAAAACDgEEdGVzdAT8gICAA38A",
    "utf8-import-module.161.wasm": "AGFzbQEAAAACDwEEdGVzdAX8gICAIwN/AA==",
    "utf8-import-module.162.wasm": "AGFzbQEAAAACDQEEdGVzdAP8gIADfwA=",
    "utf8-import-module.163.wasm": "AGFzbQEAAAACDgEEdGVzdAT8gIAjA38A",
    "utf8-import-module.164.wasm": "AGFzbQEAAAACDAEEdGVzdAL8gAN/AA==",
    "utf8-import-module.165.wasm": "AGFzbQEAAAACDQEEdGVzdAP8gCMDfwA=",
    "utf8-import-module.166.wasm": "AGFzbQEAAAACCwEEdGVzdAH8A38A",
    "utf8-import-module.167.wasm": "AGFzbQEAAAACDAEEdGVzdAL8IwN/AA==",
    "utf8-import-module.168.wasm": "AGFzbQEAAAACEAEEdGVzdAb8gICAgIADfwA=",
    "utf8-import-module.169.wasm": "AGFzbQEAAAACEAEEdGVzdAb9v7+/v78DfwA=",
    "utf8-import-module.17.wasm": "AGFzbQEAAAACDAEEdGVzdALfAAN/AA==",
    "utf8-import-module.170.wasm": "AGFzbQEAAAACCwEEdGVzdAH+A38A",
    "utf8-import-module.171.wasm": "AGFzbQEAAAACCwEEdGVzdAH/A38A",
    "utf8-import-module.172.wasm": "AGFzbQEAAAACDAEEdGVzdAL+/wN/AA==",
    "utf8-import-module.173.wasm": "AGFzbQEAAAACDgEEdGVzdAQAAP7/A38A",
    "utf8-import-module.174.wasm": "AGFzbQEAAAACDAEEdGVzdAL//gN/AA==",
    "utf8-import-module.175.wasm": "AGFzbQEAAAACDgEEdGVzdAT//gAAA38A",
    "utf8-import-module.18.wasm": "AGFzbQEAAAACDAEEdGVzdALffwN/AA==",
    "utf8-import-module.19.wasm": "AGFzbQEAAAACDAEEdGVzdALfwAN/AA==",
    "utf8-import-module.2.wasm": "AGFzbQEAAAACCwEEdGVzdAGQA38A",
    "utf8-import-module.20.wasm": "AGFzbQEAAAACDAEEdGVzdALf/QN/AA==",
    "utf8-import-module.21.wasm": "AGFzbQEAAAACDgEEdGVzdAThgICAA38A",
    "utf8-import-module.22.wasm": "AGFzbQEAAAACDAEEdGVzdALhgAN/AA==",
    "utf8-import-module.23.wasm": "AGFzbQEAAAACDQEEdGVzdAPhgC4DfwA=",
    "utf8-import-module.24.wasm": "AGFzbQEAAAACCwEEdGVzdAHhA38A",
    "utf8-import-module.25.wasm": "AGFzbQEAAAACDAEEdGVzdALhLgN/AA==",
    "utf8-import-module.26.wasm": "AGFzbQEAAAACDQEEdGVzdAPgAKADfwA=",
    "utf8-import-module.27.wasm": "AGFzbQEAAAACDQEEdGVzdAPgf6ADfwA=",
    "utf8-import-module.28.wasm": "AGFzbQEAAAACDQEEdGVzdAPggIADfwA=",
    "utf8-import-module.29.wasm": "AGFzbQEAAAACDQEEdGVzdAPggKADfwA=",
    "utf8-import-module.3.wasm": "AGFzbQEAAAACCwEEdGVzdAGfA38A",
    "utf8-import-module.30.wasm": "AGFzbQEAAAACDQEEdGVzdAPgn6ADfwA=",
    "utf8-import-module.31.wasm": "AGFzbQEAAAACDQEEdGVzdAPgn78DfwA=",
    "utf8-import-module.32.wasm": "AGFzbQEAAAACDQEEdGVzdAPgwKADfwA=",
    "utf8-import-module.33.wasm": "AGFzbQEAAAACDQEEdGVzdAPg/aADfwA=",
    "utf8-import-module.34.wasm": "AGFzbQEAAAACDQEEdGVzdAPhAIADfwA=",
    "utf8-import-module.35.wasm": "AGFzbQEAAAACDQEEdGVzdAPhf4ADfwA=",
    "utf8-import-module.36.wasm": "AGFzbQEAAAACDQEEdGVzdAPhwIADfwA=",
    "utf8-import-module.37.wasm": "AGFzbQEAAAACDQEEdGVzdAPh/YADfwA=",
    "utf8-import-module.38.wasm": "AGFzbQEAAAACDQEEdGVzdAPsAIADfwA=",
    "utf8-import-module.39.wasm": "AGFzbQEAAAACDQEEdGVzdAPsf4ADfwA=",
    "utf8-import-module.4.wasm": "AGFzbQEAAAACCwEEdGVzdAGgA38A",
    "utf8-import-module.40.wasm": "AGFzbQEAAAACDQEEdGVzdAPswIADfwA=",
    "utf8-import-module.41.wasm": "AGFzbQEAAAACDQEEdGVzdAPs/YADfwA=",
    "utf8-import-module.42.wasm": "AGFzbQEAAAACDQEEdGVzdAPtAIADfwA=",
    "utf8-import-module.43.wasm": "AGFzbQEAAAACDQEEdGVzdAPtf4ADfwA=",
    "utf8-import-module.44.wasm": "AGFzbQEAAAACDQEEdGVzdAPtoIADfwA=",
    "utf8-import-module.45.wasm": "AGFzbQEAAAACDQEEdGVzdAPtoL8DfwA=",
    "utf8-import-module.46.wasm": "AGFzbQEAAAACDQEEdGVzdAPtv4ADfwA=",
    "utf8-import-module.47.wasm": "AGFzbQEAAAACDQEEdGVzdAPtv78DfwA=",
    "utf8-import-module.48.wasm": "AGFzbQEAAAACDQEEdGVzdAPtwIADfwA=",
    "utf8-import-module.49.wasm": "AGFzbQEAAAACDQEEdGVzdAPt/YADfwA=",
    "utf8-import-module.5.wasm": "AGFzbQEAAAACCwEEdGVzdAG/A38A",
    "utf8-import-module.50.wasm": "AGFzbQEAAAACDQEEdGVzdAPuAIADfwA=",
    "utf8-import-module.51.wasm": "AGFzbQEAAAACDQEEdGVzdAPuf4ADfwA=",
    "utf8-import-module.52.wasm": "AGFzbQEAAAACDQEEdGVzdAPuwIADfwA=",
    "utf8-import-module.53.wasm": "AGFzbQEAAAACDQEEdGVzdAPu/YADfwA=",
    "utf8-import-module.54.wasm": "AGFzbQEAAAACDQEEdGVzdAPvAIADfwA=",
    "utf8-import-module.55.wasm": "AGFzbQEAAAACDQEEdGVzdAPvf4ADfwA=",
    "utf8-import-module.56.wasm": "AGFzbQEAAAACDQEEdGVzdAPvwIADfwA=",
    "utf8-import-module.57.wasm": "AGFzbQEAAAACDQEEdGVzdAPv/YADfwA=",
    "utf8-import-module.58.wasm": "AGFzbQEAAAACDQEEdGVzdAPgoAADfwA=",
    "utf8-import-module.59.wasm": "AGFzbQEAAAACDQEEdGVzdAPgoH8DfwA=",
    "utf8-import-module.6.wasm": "AGFzbQEAAAACDQEEdGVzdAPCgIADfwA=",
    "utf8-import-module.60.wasm": "AGFzbQEAAAACDQEEdGVzdAPgoMADfwA=",
    "utf8-import-module.61.wasm": "AGFzbQEAAAACDQEEdGVzdAPgoP0DfwA=",
    "utf8-import-module.62.wasm": "AGFzbQEAAAACDQEEdGVzdAPhgAADfwA=",
    "utf8-import-module.63.wasm": "AGFzbQEAAAACDQEEdGVzdAPhgH8DfwA=",
    "utf8-import-module.64.wasm": "AGFzbQEAAAACDQEEdGVzdAPhgMADfwA=",
    "utf8-import-module.65.wasm": "AGFzbQEAAAACDQEEdGVzdAPhgP0DfwA=",
    "utf8-import-module.66.wasm": "AGFzbQEAAAACDQEEdGVzdAPsgAADfwA=",
    "utf8-import-module.67.wasm": "AGFzbQEAAAACDQEEdGVzdAPsgH8DfwA=",
    "utf8-import-module.68.wasm": "AGFzbQEAAAACDQEEdGVzdAPsgMADfwA=",
    "utf8-import-module.69.wasm": "AGFzbQEAAAACDQEEdGVzdAPsgP0DfwA=",
    "utf8-import-module.7.wasm": "AGFzbQEAAAACCwEEdGVzdAHCA38A",
    "utf8-import-module.70.wasm": "AGFzbQEAAAACDQEEdGVzdAPtgAADfwA=",
    "utf8-import-module.71.wasm": "AGFzbQEAAAACDQEEdGVzdAPtgH8DfwA=",
    "utf8-import-module.72.wasm": "AGFzbQEAAAACDQEEdGVzdAPtgMADfwA=",
    "utf8-import-module.73.wasm": "AGFzbQEAAAACDQEEdGVzdAPtgP0DfwA=",
    "utf8-import-module.74.wasm": "AGFzbQEAAAACDQEEdGVzdAPugAADfwA=",
    "utf8-import-module.75.wasm": "AGFzbQEAAAACDQEEdGVzdAPugH8DfwA=",
    "utf8-import-module.76.wasm": "AGFzbQEAAAACDQEEdGVzdAPugMADfwA=",
    "utf8-import-module.77.wasm": "AGFzbQEAAAACDQEEdGVzdAPugP0DfwA=",
    "utf8-import-module.78.wasm": "AGFzbQEAAAACDQEEdGVzdAPvgAADfwA=",
    "utf8-import-module.79.wasm": "AGFzbQEAAAACDQEEdGVzdAPvgH8DfwA=",
    "utf8-import-module.8.wasm": "AGFzbQEAAAACDAEEdGVzdALCLgN/AA==",
    "utf8-import-module.80.wasm": "AGFzbQEAAAACDQEEdGVzdAPvgMADfwA=",
    "utf8-import-module.81.wasm": "AGFzbQEAAAACDQEEdGVzdAPvgP0DfwA=",
    "utf8-import-module.82.wasm": "AGFzbQEAAAACDwEEdGVzdAXxgICAgAN/AA==",
    "utf8-import-module.83.wasm": "AGFzbQEAAAACDQEEdGVzdAPxgIADfwA=",
    "utf8-import-module.84.wasm": "AGFzbQEAAAACDgEEdGVzdATxgIAjA38A",
    "utf8-import-module.85.wasm": "AGFzbQEAAAACDAEEdGVzdALxgAN/AA==",
    "utf8-import-module.86.wasm": "AGFzbQEAAAACDQEEdGVzdAPxgCMDfwA=",
    "utf8-import-module.87.wasm": "AGFzbQEAAAACCwEEdGVzdAHxA38A",
    "utf8-import-module.88.wasm": "AGFzbQEAAAACDAEEdGVzdALxIwN/AA==",
    "utf8-import-module.89.wasm": "AGFzbQEAAAACDgEEdGVzdATwAJCQA38A",
    "utf8-import-module.9.wasm": "AGFzbQEAAAACDAEEdGVzdALAgAN/AA==",
    "utf8-import-module.90.wasm": "AGFzbQEAAAACDgEEdGVzdATwf5CQA38A",
    "utf8-import-module.91.wasm": "AGFzbQEAAAACDgEEdGVzdATwgICAA38A",
    "utf8-import-module.92.wasm": "AGFzbQEAAAACDgEEdGVzdATwgJCQA38A",
    "utf8-import-module.93.wasm": "AGFzbQEAAAACDgEEdGVzdATwj5CQA38A",
    "utf8-import-module.94.wasm": "AGFzbQEAAAACDgEEdGVzdATwj7+/A38A",
    "utf8-import-module.95.wasm": "AGFzbQEAAAACDgEEdGVzdATwwJCQA38A",
    "utf8-import-module.96.wasm": "AGFzbQEAAAACDgEEdGVzdATw/ZCQA38A",
    "utf8-import-module.97.wasm": "AGFzbQEAAAACDgEEdGVzdATxAICAA38A",
    "utf8-import-module.98.wasm": "AGFzbQEAAAACDgEEdGVzdATxf4CAA38A",
    "utf8-import-module.99.wasm": "AGFzbQEAAAACDgEEdGVzdATxwICAA38A"
  },
  "spec": {"source_filename": "/workspace/wasm-spec/test/core/utf8-import-module.wast",
 "commands": [
  {"type": "assert_malformed", "line": 7, "filename": "utf8-import-module.0.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 22, "filename": "utf8-import-module.1.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 37, "filename": "utf8-import-module.2.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 52, "filename": "utf8-import-module.3.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 67, "filename": "utf8-import-module.4.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 82, "filename": "utf8-import-module.5.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 99, "filename": "utf8-import-module.6.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 114, "filename": "utf8-import-module.7.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 129, "filename": "utf8-import-module.8.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 146, "filename": "utf8-import-module.9.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 161, "filename": "utf8-import-module.10.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 176, "filename": "utf8-import-module.11.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 191, "filename": "utf8-import-module.12.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 206, "filename": "utf8-import-module.13.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 221, "filename": "utf8-import-module.14.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 236, "filename": "utf8-import-module.15.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 251, "filename": "utf8-import-module.16.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 266, "filename": "utf8-import-module.17.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 281, "filename": "utf8-import-module.18.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 296, "filename": "utf8-import-module.19.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 311, "filename": "utf8-import-module.20.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 328, "filename": "utf8-import-module.21.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 343, "filename": "utf8-import-module.22.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 358, "filename": "utf8-import-module.23.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 373, "filename": "utf8-import-module.24.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 388, "filename": "utf8-import-module.25.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 405, "filename": "utf8-import-module.26.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 420, "filename": "utf8-import-module.27.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 435, "filename": "utf8-import-module.28.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 450, "filename": "utf8-import-module.29.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 465, "filename": "utf8-import-module.30.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 480, "filename": "utf8-import-module.31.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 495, "filename": "utf8-import-module.32.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 510, "filename": "utf8-import-module.33.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 525, "filename": "utf8-import-module.34.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 540, "filename": "utf8-import-module.35.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 555, "filename": "utf8-import-module.36.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 570, "filename": "utf8-import-module.37.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 585, "filename": "utf8-import-module.38.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 600, "filename": "utf8-import-module.39.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 615, "filename": "utf8-import-module.40.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 630, "filename": "utf8-import-module.41.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 645, "filename": "utf8-import-module.42.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 660, "filename": "utf8-import-module.43.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 675, "filename": "utf8-import-module.44.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 690, "filename": "utf8-import-module.45.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 705, "filename": "utf8-import-module.46.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 720, "filename": "utf8-import-module.47.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 735, "filename": "utf8-import-module.48.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 750, "filename": "utf8-import-module.49.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 765, "filename": "utf8-import-module.50.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 780, "filename": "utf8-import-module.51.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 795, "filename": "utf8-import-module.52.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 810, "filename": "utf8-import-module.53.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 825, "filename": "utf8-import-module.54.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 840, "filename": "utf8-import-module.55.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 855, "filename": "utf8-import-module.56.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 870, "filename": "utf8-import-module.57.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 887, "filename": "utf8-import-module.58.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 902, "filename": "utf8-import-module.59.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 917, "filename": "utf8-import-module.60.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 932, "filename": "utf8-import-module.61.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 947, "filename": "utf8-import-module.62.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 962, "filename": "utf8-import-module.63.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 977, "filename": "utf8-import-module.64.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 992, "filename": "utf8-import-module.65.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1007, "filename": "utf8-import-module.66.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1022, "filename": "utf8-import-module.67.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1037, "filename": "utf8-import-module.68.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1052, "filename": "utf8-import-module.69.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1067, "filename": "utf8-import-module.70.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1082, "filename": "utf8-import-module.71.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1097, "filename": "utf8-import-module.72.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1112, "filename": "utf8-import-module.73.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1127, "filename": "utf8-import-module.74.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1142, "filename": "utf8-import-module.75.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1157, "filename": "utf8-import-module.76.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1172, "filename": "utf8-import-module.77.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1187, "filename": "utf8-import-module.78.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1202, "filename": "utf8-import-module.79.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1217, "filename": "utf8-import-module.80.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1232, "filename": "utf8-import-module.81.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1249, "filename": "utf8-import-module.82.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1264, "filename": "utf8-import-module.83.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1279, "filename": "utf8-import-module.84.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1294, "filename": "utf8-import-module.85.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1309, "filename": "utf8-import-module.86.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1324, "filename": "utf8-import-module.87.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1339, "filename": "utf8-import-module.88.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1356, "filename": "utf8-import-module.89.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1371, "filename": "utf8-import-module.90.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1386, "filename": "utf8-import-module.91.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1401, "filename": "utf8-import-module.92.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1416, "filename": "utf8-import-module.93.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1431, "filename": "utf8-import-module.94.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1446, "filename": "utf8-import-module.95.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1461, "filename": "utf8-import-module.96.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1476, "filename": "utf8-import-module.97.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1491, "filename": "utf8-import-module.98.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1506, "filename": "utf8-import-module.99.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1521, "filename": "utf8-import-module.100.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1536, "filename": "utf8-import-module.101.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1551, "filename": "utf8-import-module.102.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1566, "filename": "utf8-import-module.103.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1581, "filename": "utf8-import-module.104.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1596, "filename": "utf8-import-module.105.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1611, "filename": "utf8-import-module.106.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1626, "filename": "utf8-import-module.107.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1641, "filename": "utf8-import-module.108.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1656, "filename": "utf8-import-module.109.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1671, "filename": "utf8-import-module.110.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1686, "filename": "utf8-import-module.111.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1701, "filename": "utf8-import-module.112.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1716, "filename": "utf8-import-module.113.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1733, "filename": "utf8-import-module.114.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1748, "filename": "utf8-import-module.115.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1763, "filename": "utf8-import-module.116.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1778, "filename": "utf8-import-module.117.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1793, "filename": "utf8-import-module.118.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1808, "filename": "utf8-import-module.119.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1823, "filename": "utf8-import-module.120.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1838, "filename": "utf8-import-module.121.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1853, "filename": "utf8-import-module.122.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1868, "filename": "utf8-import-module.123.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1883, "filename": "utf8-import-module.124.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1898, "filename": "utf8-import-module.125.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1913, "filename": "utf8-import-module.126.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1928, "filename": "utf8-import-module.127.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1943, "filename": "utf8-import-module.128.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1958, "filename": "utf8-import-module.129.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1975, "filename": "utf8-import-module.130.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1990, "filename": "utf8-import-module.131.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2005, "filename": "utf8-import-module.132.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2020, "filename": "utf8-import-module.133.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2035, "filename": "utf8-import-module.134.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2050, "filename": "utf8-import-module.135.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2065, "filename": "utf8-import-module.136.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2080, "filename": "utf8-import-module.137.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2095, "filename": "utf8-import-module.138.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2110, "filename": "utf8-import-module.139.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2125, "filename": "utf8-import-module.140.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2140, "filename": "utf8-import-module.141.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2155, "filename": "utf8-import-module.142.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2170, "filename": "utf8-import-module.143.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2185, "filename": "utf8-import-module.144.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2200, "filename": "utf8-import-module.145.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2217, "filename": "utf8-import-module.146.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2232, "filename": "utf8-import-module.147.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2247, "filename": "utf8-import-module.148.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2262, "filename": "utf8-import-module.149.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2277, "filename": "utf8-import-module.150.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2292, "filename": "utf8-import-module.151.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2307, "filename": "utf8-import-module.152.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2322, "filename": "utf8-import-module.153.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2337, "filename": "utf8-import-module.154.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2354, "filename": "utf8-import-module.155.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2369, "filename": "utf8-import-module.156.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2386, "filename": "utf8-import-module.157.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2401, "filename": "utf8-import-module.158.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2416, "filename": "utf8-import-module.159.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2431, "filename": "utf8-import-module.160.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2446, "filename": "utf8-import-module.161.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2461, "filename": "utf8-import-module.162.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2476, "filename": "utf8-import-module.163.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2491, "filename": "utf8-import-module.164.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2506, "filename": "utf8-import-module.165.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2521, "filename": "utf8-import-module.166.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2536, "filename": "utf8-import-module.167.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2553, "filename": "utf8-import-module.168.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2568, "filename": "utf8-import-module.169.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2585, "filename": "utf8-import-module.170.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2600, "filename": "utf8-import-module.171.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2615, "filename": "utf8-import-module.172.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2630, "filename": "utf8-import-module.173.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2645, "filename": "utf8-import-module.174.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2660, "filename": "utf8-import-module.175.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}]},
  "code": [
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0b\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\01\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0b\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\01\\8f\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0b\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\01\\90\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0b\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\01\\9f\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0b\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\01\\a0\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0b\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\01\\bf\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\c2\\80\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0b\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\01\\c2\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0c\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\02\\c2\\2e\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0c\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\02\\c0\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0c\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\02\\c0\\bf\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0c\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\02\\c1\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0c\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\02\\c1\\bf\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0c\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\02\\c2\\00\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0c\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\02\\c2\\7f\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0c\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\02\\c2\\c0\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0c\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\02\\c2\\fd\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0c\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\02\\df\\00\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0c\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\02\\df\\7f\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0c\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\02\\df\\c0\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0c\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\02\\df\\fd\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\e1\\80\\80\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0c\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\02\\e1\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\e1\\80\\2e\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0b\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\01\\e1\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0c\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\02\\e1\\2e\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\e0\\00\\a0\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\e0\\7f\\a0\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\e0\\80\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\e0\\80\\a0\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\e0\\9f\\a0\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\e0\\9f\\bf\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\e0\\c0\\a0\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\e0\\fd\\a0\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\e1\\00\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\e1\\7f\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\e1\\c0\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\e1\\fd\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\ec\\00\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\ec\\7f\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\ec\\c0\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\ec\\fd\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\ed\\00\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\ed\\7f\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\ed\\a0\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\ed\\a0\\bf\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\ed\\bf\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\ed\\bf\\bf\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\ed\\c0\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\ed\\fd\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\ee\\00\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\ee\\7f\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\ee\\c0\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\ee\\fd\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\ef\\00\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\ef\\7f\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\ef\\c0\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\ef\\fd\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\e0\\a0\\00\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\e0\\a0\\7f\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\e0\\a0\\c0\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\e0\\a0\\fd\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\e1\\80\\00\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\e1\\80\\7f\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\e1\\80\\c0\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\e1\\80\\fd\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\ec\\80\\00\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\ec\\80\\7f\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\ec\\80\\c0\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\ec\\80\\fd\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\ed\\80\\00\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\ed\\80\\7f\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\ed\\80\\c0\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\ed\\80\\fd\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\ee\\80\\00\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\ee\\80\\7f\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\ee\\80\\c0\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\ee\\80\\fd\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\ef\\80\\00\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\ef\\80\\7f\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\ef\\80\\c0\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\ef\\80\\fd\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0f\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\05\\f1\\80\\80\\80\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\f1\\80\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f1\\80\\80\\23\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0c\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\02\\f1\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\f1\\80\\23\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0b\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\01\\f1\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0c\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\02\\f1\\23\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f0\\00\\90\\90\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f0\\7f\\90\\90\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f0\\80\\80\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f0\\80\\90\\90\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f0\\8f\\90\\90\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f0\\8f\\bf\\bf\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f0\\c0\\90\\90\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f0\\fd\\90\\90\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f1\\00\\80\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f1\\7f\\80\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f1\\c0\\80\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f1\\fd\\80\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f3\\00\\80\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f3\\7f\\80\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f3\\c0\\80\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f3\\fd\\80\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f4\\00\\80\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f4\\7f\\80\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f4\\90\\80\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f4\\bf\\80\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f4\\c0\\80\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f4\\fd\\80\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f5\\80\\80\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f7\\80\\80\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f7\\bf\\bf\\bf\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f0\\90\\00\\90\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f0\\90\\7f\\90\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f0\\90\\c0\\90\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f0\\90\\fd\\90\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f1\\80\\00\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f1\\80\\7f\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f1\\80\\c0\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f1\\80\\fd\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f3\\80\\00\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f3\\80\\7f\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f3\\80\\c0\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f3\\80\\fd\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f4\\80\\00\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f4\\80\\7f\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f4\\80\\c0\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f4\\80\\fd\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f0\\90\\90\\00\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f0\\90\\90\\7f\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f0\\90\\90\\c0\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f0\\90\\90\\fd\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f1\\80\\80\\00\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f1\\80\\80\\7f\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f1\\80\\80\\c0\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f1\\80\\80\\fd\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f3\\80\\80\\00\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f3\\80\\80\\7f\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f3\\80\\80\\c0\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f3\\80\\80\\fd\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f4\\80\\80\\00\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f4\\80\\80\\7f\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f4\\80\\80\\c0\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f4\\80\\80\\fd\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\10\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\06\\f8\\80\\80\\80\\80\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f8\\80\\80\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0f\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\05\\f8\\80\\80\\80\\23\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\f8\\80\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\f8\\80\\80\\23\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0c\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\02\\f8\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\f8\\80\\23\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0b\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\01\\f8\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0c\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\02\\f8\\23\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0f\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\05\\f8\\80\\80\\80\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0f\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\05\\fb\\bf\\bf\\bf\\bf\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\11\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\07\\fc\\80\\80\\80\\80\\80\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0f\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\05\\fc\\80\\80\\80\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\10\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\06\\fc\\80\\80\\80\\80\\23\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\fc\\80\\80\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0f\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\05\\fc\\80\\80\\80\\23\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\fc\\80\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\fc\\80\\80\\23\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0c\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\02\\fc\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\03\\fc\\80\\23\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0b\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\01\\fc\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0c\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\02\\fc\\23\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\10\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\06\\fc\\80\\80\\80\\80\\80\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\10\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\06\\fd\\bf\\bf\\bf\\bf\\bf\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0b\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\01\\fe\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0b\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\01\\ff\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0c\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\02\\fe\\ff\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\00\\00\\fe\\ff\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0c\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\02\\ff\\fe\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\74\\65\\73\\74\" \"\\04\\ff\\fe\\00\\00\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")"
  ]
}
