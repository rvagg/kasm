{
  "bin": {
    "memory_trap.0.wasm": "AGFzbQEAAAABDwNgAAF/YAJ/fwBgAX8BfwMFBAABAgIFAwEAAQceAwVzdG9yZQABBGxvYWQAAgttZW1vcnkuZ3JvdwADCioECQA/AEGAgARsCwwAEAAgAGogATYCAAsKABAAIABqKAIACwYAIABAAAs=",
    "memory_trap.1.wasm": "AGFzbQEAAAABKQhgAX8Bf2ABfwF+YAF/AX1gAX8BfGACf38AYAJ/fgBgAn99AGACf3wAAxgXAAECAwAAAAABAQEBAQEEBQYHBAQFBQUFAwEAAQezAhcIaTMyLmxvYWQAAAhpNjQubG9hZAABCGYzMi5sb2FkAAIIZjY0LmxvYWQAAwtpMzIubG9hZDhfcwAEC2kzMi5sb2FkOF91AAUMaTMyLmxvYWQxNl9zAAYMaTMyLmxvYWQxNl91AAcLaTY0LmxvYWQ4X3MACAtpNjQubG9hZDhfdQAJDGk2NC5sb2FkMTZfcwAKDGk2NC5sb2FkMTZfdQALDGk2NC5sb2FkMzJfcwAMDGk2NC5sb2FkMzJfdQANCWkzMi5zdG9yZQAOCWk2NC5zdG9yZQAPCWYzMi5zdG9yZQAQCWY2NC5zdG9yZQARCmkzMi5zdG9yZTgAEgtpMzIuc3RvcmUxNgATCmk2NC5zdG9yZTgAFAtpNjQuc3RvcmUxNgAVC2k2NC5zdG9yZTMyABYKywEXBwAgACgCAAsHACAAKQMACwcAIAAqAgALBwAgACsDAAsHACAALAAACwcAIAAtAAALBwAgAC4BAAsHACAALwEACwcAIAAwAAALBwAgADEAAAsHACAAMgEACwcAIAAzAQALBwAgADQCAAsHACAANQIACwkAIAAgATYCAAsJACAAIAE3AwALCQAgACABOAIACwkAIAAgATkDAAsJACAAIAE6AAALCQAgACABOwEACwkAIAAgATwAAAsJACAAIAE9AQALCQAgACABPgIACwsdAgBBAAsIYWJjZGVmZ2gAQfj/AwsIYWJjZGVmZ2g="
  },
  "spec": {"source_filename": "/workspace/wasm-spec/test/core/memory_trap.wast",
 "commands": [
  {"type": "module", "line": 1, "filename": "memory_trap.0.wasm"}, 
  {"type": "assert_return", "line": 21, "action": {"type": "invoke", "field": "store", "args": [{"type": "i32", "value": "4294967292"}, {"type": "i32", "value": "42"}]}, "expected": []}, 
  {"type": "assert_return", "line": 22, "action": {"type": "invoke", "field": "load", "args": [{"type": "i32", "value": "4294967292"}]}, "expected": [{"type": "i32", "value": "42"}]}, 
  {"type": "assert_trap", "line": 23, "action": {"type": "invoke", "field": "store", "args": [{"type": "i32", "value": "4294967293"}, {"type": "i32", "value": "305419896"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 24, "action": {"type": "invoke", "field": "load", "args": [{"type": "i32", "value": "4294967293"}]}, "text": "out of bounds memory access", "expected": [{"type": "i32"}]}, 
  {"type": "assert_trap", "line": 25, "action": {"type": "invoke", "field": "store", "args": [{"type": "i32", "value": "4294967294"}, {"type": "i32", "value": "13"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 26, "action": {"type": "invoke", "field": "load", "args": [{"type": "i32", "value": "4294967294"}]}, "text": "out of bounds memory access", "expected": [{"type": "i32"}]}, 
  {"type": "assert_trap", "line": 27, "action": {"type": "invoke", "field": "store", "args": [{"type": "i32", "value": "4294967295"}, {"type": "i32", "value": "13"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 28, "action": {"type": "invoke", "field": "load", "args": [{"type": "i32", "value": "4294967295"}]}, "text": "out of bounds memory access", "expected": [{"type": "i32"}]}, 
  {"type": "assert_trap", "line": 29, "action": {"type": "invoke", "field": "store", "args": [{"type": "i32", "value": "0"}, {"type": "i32", "value": "13"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 30, "action": {"type": "invoke", "field": "load", "args": [{"type": "i32", "value": "0"}]}, "text": "out of bounds memory access", "expected": [{"type": "i32"}]}, 
  {"type": "assert_trap", "line": 31, "action": {"type": "invoke", "field": "store", "args": [{"type": "i32", "value": "2147483648"}, {"type": "i32", "value": "13"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 32, "action": {"type": "invoke", "field": "load", "args": [{"type": "i32", "value": "2147483648"}]}, "text": "out of bounds memory access", "expected": [{"type": "i32"}]}, 
  {"type": "assert_return", "line": 33, "action": {"type": "invoke", "field": "memory.grow", "args": [{"type": "i32", "value": "65537"}]}, "expected": [{"type": "i32", "value": "4294967295"}]}, 
  {"type": "module", "line": 35, "filename": "memory_trap.1.wasm"}, 
  {"type": "assert_trap", "line": 111, "action": {"type": "invoke", "field": "i32.store", "args": [{"type": "i32", "value": "65536"}, {"type": "i32", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 112, "action": {"type": "invoke", "field": "i32.store", "args": [{"type": "i32", "value": "65535"}, {"type": "i32", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 113, "action": {"type": "invoke", "field": "i32.store", "args": [{"type": "i32", "value": "65534"}, {"type": "i32", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 114, "action": {"type": "invoke", "field": "i32.store", "args": [{"type": "i32", "value": "65533"}, {"type": "i32", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 115, "action": {"type": "invoke", "field": "i32.store", "args": [{"type": "i32", "value": "4294967295"}, {"type": "i32", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 116, "action": {"type": "invoke", "field": "i32.store", "args": [{"type": "i32", "value": "4294967294"}, {"type": "i32", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 117, "action": {"type": "invoke", "field": "i32.store", "args": [{"type": "i32", "value": "4294967293"}, {"type": "i32", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 118, "action": {"type": "invoke", "field": "i32.store", "args": [{"type": "i32", "value": "4294967292"}, {"type": "i32", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 119, "action": {"type": "invoke", "field": "i64.store", "args": [{"type": "i32", "value": "65536"}, {"type": "i64", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 120, "action": {"type": "invoke", "field": "i64.store", "args": [{"type": "i32", "value": "65535"}, {"type": "i64", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 121, "action": {"type": "invoke", "field": "i64.store", "args": [{"type": "i32", "value": "65534"}, {"type": "i64", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 122, "action": {"type": "invoke", "field": "i64.store", "args": [{"type": "i32", "value": "65533"}, {"type": "i64", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 123, "action": {"type": "invoke", "field": "i64.store", "args": [{"type": "i32", "value": "65532"}, {"type": "i64", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 124, "action": {"type": "invoke", "field": "i64.store", "args": [{"type": "i32", "value": "65531"}, {"type": "i64", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 125, "action": {"type": "invoke", "field": "i64.store", "args": [{"type": "i32", "value": "65530"}, {"type": "i64", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 126, "action": {"type": "invoke", "field": "i64.store", "args": [{"type": "i32", "value": "65529"}, {"type": "i64", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 127, "action": {"type": "invoke", "field": "i64.store", "args": [{"type": "i32", "value": "4294967295"}, {"type": "i64", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 128, "action": {"type": "invoke", "field": "i64.store", "args": [{"type": "i32", "value": "4294967294"}, {"type": "i64", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 129, "action": {"type": "invoke", "field": "i64.store", "args": [{"type": "i32", "value": "4294967293"}, {"type": "i64", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 130, "action": {"type": "invoke", "field": "i64.store", "args": [{"type": "i32", "value": "4294967292"}, {"type": "i64", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 131, "action": {"type": "invoke", "field": "i64.store", "args": [{"type": "i32", "value": "4294967291"}, {"type": "i64", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 132, "action": {"type": "invoke", "field": "i64.store", "args": [{"type": "i32", "value": "4294967290"}, {"type": "i64", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 133, "action": {"type": "invoke", "field": "i64.store", "args": [{"type": "i32", "value": "4294967289"}, {"type": "i64", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 134, "action": {"type": "invoke", "field": "i64.store", "args": [{"type": "i32", "value": "4294967288"}, {"type": "i64", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 135, "action": {"type": "invoke", "field": "f32.store", "args": [{"type": "i32", "value": "65536"}, {"type": "f32", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 136, "action": {"type": "invoke", "field": "f32.store", "args": [{"type": "i32", "value": "65535"}, {"type": "f32", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 137, "action": {"type": "invoke", "field": "f32.store", "args": [{"type": "i32", "value": "65534"}, {"type": "f32", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 138, "action": {"type": "invoke", "field": "f32.store", "args": [{"type": "i32", "value": "65533"}, {"type": "f32", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 139, "action": {"type": "invoke", "field": "f32.store", "args": [{"type": "i32", "value": "4294967295"}, {"type": "f32", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 140, "action": {"type": "invoke", "field": "f32.store", "args": [{"type": "i32", "value": "4294967294"}, {"type": "f32", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 141, "action": {"type": "invoke", "field": "f32.store", "args": [{"type": "i32", "value": "4294967293"}, {"type": "f32", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 142, "action": {"type": "invoke", "field": "f32.store", "args": [{"type": "i32", "value": "4294967292"}, {"type": "f32", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 143, "action": {"type": "invoke", "field": "f64.store", "args": [{"type": "i32", "value": "65536"}, {"type": "f64", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 144, "action": {"type": "invoke", "field": "f64.store", "args": [{"type": "i32", "value": "65535"}, {"type": "f64", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 145, "action": {"type": "invoke", "field": "f64.store", "args": [{"type": "i32", "value": "65534"}, {"type": "f64", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 146, "action": {"type": "invoke", "field": "f64.store", "args": [{"type": "i32", "value": "65533"}, {"type": "f64", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 147, "action": {"type": "invoke", "field": "f64.store", "args": [{"type": "i32", "value": "65532"}, {"type": "f64", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 148, "action": {"type": "invoke", "field": "f64.store", "args": [{"type": "i32", "value": "65531"}, {"type": "f64", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 149, "action": {"type": "invoke", "field": "f64.store", "args": [{"type": "i32", "value": "65530"}, {"type": "f64", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 150, "action": {"type": "invoke", "field": "f64.store", "args": [{"type": "i32", "value": "65529"}, {"type": "f64", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 151, "action": {"type": "invoke", "field": "f64.store", "args": [{"type": "i32", "value": "4294967295"}, {"type": "f64", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 152, "action": {"type": "invoke", "field": "f64.store", "args": [{"type": "i32", "value": "4294967294"}, {"type": "f64", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 153, "action": {"type": "invoke", "field": "f64.store", "args": [{"type": "i32", "value": "4294967293"}, {"type": "f64", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 154, "action": {"type": "invoke", "field": "f64.store", "args": [{"type": "i32", "value": "4294967292"}, {"type": "f64", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 155, "action": {"type": "invoke", "field": "f64.store", "args": [{"type": "i32", "value": "4294967291"}, {"type": "f64", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 156, "action": {"type": "invoke", "field": "f64.store", "args": [{"type": "i32", "value": "4294967290"}, {"type": "f64", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 157, "action": {"type": "invoke", "field": "f64.store", "args": [{"type": "i32", "value": "4294967289"}, {"type": "f64", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 158, "action": {"type": "invoke", "field": "f64.store", "args": [{"type": "i32", "value": "4294967288"}, {"type": "f64", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 159, "action": {"type": "invoke", "field": "i32.store8", "args": [{"type": "i32", "value": "65536"}, {"type": "i32", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 160, "action": {"type": "invoke", "field": "i32.store8", "args": [{"type": "i32", "value": "4294967295"}, {"type": "i32", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 161, "action": {"type": "invoke", "field": "i32.store16", "args": [{"type": "i32", "value": "65536"}, {"type": "i32", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 162, "action": {"type": "invoke", "field": "i32.store16", "args": [{"type": "i32", "value": "65535"}, {"type": "i32", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 163, "action": {"type": "invoke", "field": "i32.store16", "args": [{"type": "i32", "value": "4294967295"}, {"type": "i32", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 164, "action": {"type": "invoke", "field": "i32.store16", "args": [{"type": "i32", "value": "4294967294"}, {"type": "i32", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 165, "action": {"type": "invoke", "field": "i64.store8", "args": [{"type": "i32", "value": "65536"}, {"type": "i64", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 166, "action": {"type": "invoke", "field": "i64.store8", "args": [{"type": "i32", "value": "4294967295"}, {"type": "i64", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 167, "action": {"type": "invoke", "field": "i64.store16", "args": [{"type": "i32", "value": "65536"}, {"type": "i64", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 168, "action": {"type": "invoke", "field": "i64.store16", "args": [{"type": "i32", "value": "65535"}, {"type": "i64", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 169, "action": {"type": "invoke", "field": "i64.store16", "args": [{"type": "i32", "value": "4294967295"}, {"type": "i64", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 170, "action": {"type": "invoke", "field": "i64.store16", "args": [{"type": "i32", "value": "4294967294"}, {"type": "i64", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 171, "action": {"type": "invoke", "field": "i64.store32", "args": [{"type": "i32", "value": "65536"}, {"type": "i64", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 172, "action": {"type": "invoke", "field": "i64.store32", "args": [{"type": "i32", "value": "65535"}, {"type": "i64", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 173, "action": {"type": "invoke", "field": "i64.store32", "args": [{"type": "i32", "value": "65534"}, {"type": "i64", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 174, "action": {"type": "invoke", "field": "i64.store32", "args": [{"type": "i32", "value": "65533"}, {"type": "i64", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 175, "action": {"type": "invoke", "field": "i64.store32", "args": [{"type": "i32", "value": "4294967295"}, {"type": "i64", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 176, "action": {"type": "invoke", "field": "i64.store32", "args": [{"type": "i32", "value": "4294967294"}, {"type": "i64", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 177, "action": {"type": "invoke", "field": "i64.store32", "args": [{"type": "i32", "value": "4294967293"}, {"type": "i64", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 178, "action": {"type": "invoke", "field": "i64.store32", "args": [{"type": "i32", "value": "4294967292"}, {"type": "i64", "value": "0"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_trap", "line": 179, "action": {"type": "invoke", "field": "i32.load", "args": [{"type": "i32", "value": "65536"}]}, "text": "out of bounds memory access", "expected": [{"type": "i32"}]}, 
  {"type": "assert_trap", "line": 180, "action": {"type": "invoke", "field": "i32.load", "args": [{"type": "i32", "value": "65535"}]}, "text": "out of bounds memory access", "expected": [{"type": "i32"}]}, 
  {"type": "assert_trap", "line": 181, "action": {"type": "invoke", "field": "i32.load", "args": [{"type": "i32", "value": "65534"}]}, "text": "out of bounds memory access", "expected": [{"type": "i32"}]}, 
  {"type": "assert_trap", "line": 182, "action": {"type": "invoke", "field": "i32.load", "args": [{"type": "i32", "value": "65533"}]}, "text": "out of bounds memory access", "expected": [{"type": "i32"}]}, 
  {"type": "assert_trap", "line": 183, "action": {"type": "invoke", "field": "i32.load", "args": [{"type": "i32", "value": "4294967295"}]}, "text": "out of bounds memory access", "expected": [{"type": "i32"}]}, 
  {"type": "assert_trap", "line": 184, "action": {"type": "invoke", "field": "i32.load", "args": [{"type": "i32", "value": "4294967294"}]}, "text": "out of bounds memory access", "expected": [{"type": "i32"}]}, 
  {"type": "assert_trap", "line": 185, "action": {"type": "invoke", "field": "i32.load", "args": [{"type": "i32", "value": "4294967293"}]}, "text": "out of bounds memory access", "expected": [{"type": "i32"}]}, 
  {"type": "assert_trap", "line": 186, "action": {"type": "invoke", "field": "i32.load", "args": [{"type": "i32", "value": "4294967292"}]}, "text": "out of bounds memory access", "expected": [{"type": "i32"}]}, 
  {"type": "assert_trap", "line": 187, "action": {"type": "invoke", "field": "i64.load", "args": [{"type": "i32", "value": "65536"}]}, "text": "out of bounds memory access", "expected": [{"type": "i64"}]}, 
  {"type": "assert_trap", "line": 188, "action": {"type": "invoke", "field": "i64.load", "args": [{"type": "i32", "value": "65535"}]}, "text": "out of bounds memory access", "expected": [{"type": "i64"}]}, 
  {"type": "assert_trap", "line": 189, "action": {"type": "invoke", "field": "i64.load", "args": [{"type": "i32", "value": "65534"}]}, "text": "out of bounds memory access", "expected": [{"type": "i64"}]}, 
  {"type": "assert_trap", "line": 190, "action": {"type": "invoke", "field": "i64.load", "args": [{"type": "i32", "value": "65533"}]}, "text": "out of bounds memory access", "expected": [{"type": "i64"}]}, 
  {"type": "assert_trap", "line": 191, "action": {"type": "invoke", "field": "i64.load", "args": [{"type": "i32", "value": "65532"}]}, "text": "out of bounds memory access", "expected": [{"type": "i64"}]}, 
  {"type": "assert_trap", "line": 192, "action": {"type": "invoke", "field": "i64.load", "args": [{"type": "i32", "value": "65531"}]}, "text": "out of bounds memory access", "expected": [{"type": "i64"}]}, 
  {"type": "assert_trap", "line": 193, "action": {"type": "invoke", "field": "i64.load", "args": [{"type": "i32", "value": "65530"}]}, "text": "out of bounds memory access", "expected": [{"type": "i64"}]}, 
  {"type": "assert_trap", "line": 194, "action": {"type": "invoke", "field": "i64.load", "args": [{"type": "i32", "value": "65529"}]}, "text": "out of bounds memory access", "expected": [{"type": "i64"}]}, 
  {"type": "assert_trap", "line": 195, "action": {"type": "invoke", "field": "i64.load", "args": [{"type": "i32", "value": "4294967295"}]}, "text": "out of bounds memory access", "expected": [{"type": "i64"}]}, 
  {"type": "assert_trap", "line": 196, "action": {"type": "invoke", "field": "i64.load", "args": [{"type": "i32", "value": "4294967294"}]}, "text": "out of bounds memory access", "expected": [{"type": "i64"}]}, 
  {"type": "assert_trap", "line": 197, "action": {"type": "invoke", "field": "i64.load", "args": [{"type": "i32", "value": "4294967293"}]}, "text": "out of bounds memory access", "expected": [{"type": "i64"}]}, 
  {"type": "assert_trap", "line": 198, "action": {"type": "invoke", "field": "i64.load", "args": [{"type": "i32", "value": "4294967292"}]}, "text": "out of bounds memory access", "expected": [{"type": "i64"}]}, 
  {"type": "assert_trap", "line": 199, "action": {"type": "invoke", "field": "i64.load", "args": [{"type": "i32", "value": "4294967291"}]}, "text": "out of bounds memory access", "expected": [{"type": "i64"}]}, 
  {"type": "assert_trap", "line": 200, "action": {"type": "invoke", "field": "i64.load", "args": [{"type": "i32", "value": "4294967290"}]}, "text": "out of bounds memory access", "expected": [{"type": "i64"}]}, 
  {"type": "assert_trap", "line": 201, "action": {"type": "invoke", "field": "i64.load", "args": [{"type": "i32", "value": "4294967289"}]}, "text": "out of bounds memory access", "expected": [{"type": "i64"}]}, 
  {"type": "assert_trap", "line": 202, "action": {"type": "invoke", "field": "i64.load", "args": [{"type": "i32", "value": "4294967288"}]}, "text": "out of bounds memory access", "expected": [{"type": "i64"}]}, 
  {"type": "assert_trap", "line": 203, "action": {"type": "invoke", "field": "f32.load", "args": [{"type": "i32", "value": "65536"}]}, "text": "out of bounds memory access", "expected": [{"type": "f32"}]}, 
  {"type": "assert_trap", "line": 204, "action": {"type": "invoke", "field": "f32.load", "args": [{"type": "i32", "value": "65535"}]}, "text": "out of bounds memory access", "expected": [{"type": "f32"}]}, 
  {"type": "assert_trap", "line": 205, "action": {"type": "invoke", "field": "f32.load", "args": [{"type": "i32", "value": "65534"}]}, "text": "out of bounds memory access", "expected": [{"type": "f32"}]}, 
  {"type": "assert_trap", "line": 206, "action": {"type": "invoke", "field": "f32.load", "args": [{"type": "i32", "value": "65533"}]}, "text": "out of bounds memory access", "expected": [{"type": "f32"}]}, 
  {"type": "assert_trap", "line": 207, "action": {"type": "invoke", "field": "f32.load", "args": [{"type": "i32", "value": "4294967295"}]}, "text": "out of bounds memory access", "expected": [{"type": "f32"}]}, 
  {"type": "assert_trap", "line": 208, "action": {"type": "invoke", "field": "f32.load", "args": [{"type": "i32", "value": "4294967294"}]}, "text": "out of bounds memory access", "expected": [{"type": "f32"}]}, 
  {"type": "assert_trap", "line": 209, "action": {"type": "invoke", "field": "f32.load", "args": [{"type": "i32", "value": "4294967293"}]}, "text": "out of bounds memory access", "expected": [{"type": "f32"}]}, 
  {"type": "assert_trap", "line": 210, "action": {"type": "invoke", "field": "f32.load", "args": [{"type": "i32", "value": "4294967292"}]}, "text": "out of bounds memory access", "expected": [{"type": "f32"}]}, 
  {"type": "assert_trap", "line": 211, "action": {"type": "invoke", "field": "f64.load", "args": [{"type": "i32", "value": "65536"}]}, "text": "out of bounds memory access", "expected": [{"type": "f64"}]}, 
  {"type": "assert_trap", "line": 212, "action": {"type": "invoke", "field": "f64.load", "args": [{"type": "i32", "value": "65535"}]}, "text": "out of bounds memory access", "expected": [{"type": "f64"}]}, 
  {"type": "assert_trap", "line": 213, "action": {"type": "invoke", "field": "f64.load", "args": [{"type": "i32", "value": "65534"}]}, "text": "out of bounds memory access", "expected": [{"type": "f64"}]}, 
  {"type": "assert_trap", "line": 214, "action": {"type": "invoke", "field": "f64.load", "args": [{"type": "i32", "value": "65533"}]}, "text": "out of bounds memory access", "expected": [{"type": "f64"}]}, 
  {"type": "assert_trap", "line": 215, "action": {"type": "invoke", "field": "f64.load", "args": [{"type": "i32", "value": "65532"}]}, "text": "out of bounds memory access", "expected": [{"type": "f64"}]}, 
  {"type": "assert_trap", "line": 216, "action": {"type": "invoke", "field": "f64.load", "args": [{"type": "i32", "value": "65531"}]}, "text": "out of bounds memory access", "expected": [{"type": "f64"}]}, 
  {"type": "assert_trap", "line": 217, "action": {"type": "invoke", "field": "f64.load", "args": [{"type": "i32", "value": "65530"}]}, "text": "out of bounds memory access", "expected": [{"type": "f64"}]}, 
  {"type": "assert_trap", "line": 218, "action": {"type": "invoke", "field": "f64.load", "args": [{"type": "i32", "value": "65529"}]}, "text": "out of bounds memory access", "expected": [{"type": "f64"}]}, 
  {"type": "assert_trap", "line": 219, "action": {"type": "invoke", "field": "f64.load", "args": [{"type": "i32", "value": "4294967295"}]}, "text": "out of bounds memory access", "expected": [{"type": "f64"}]}, 
  {"type": "assert_trap", "line": 220, "action": {"type": "invoke", "field": "f64.load", "args": [{"type": "i32", "value": "4294967294"}]}, "text": "out of bounds memory access", "expected": [{"type": "f64"}]}, 
  {"type": "assert_trap", "line": 221, "action": {"type": "invoke", "field": "f64.load", "args": [{"type": "i32", "value": "4294967293"}]}, "text": "out of bounds memory access", "expected": [{"type": "f64"}]}, 
  {"type": "assert_trap", "line": 222, "action": {"type": "invoke", "field": "f64.load", "args": [{"type": "i32", "value": "4294967292"}]}, "text": "out of bounds memory access", "expected": [{"type": "f64"}]}, 
  {"type": "assert_trap", "line": 223, "action": {"type": "invoke", "field": "f64.load", "args": [{"type": "i32", "value": "4294967291"}]}, "text": "out of bounds memory access", "expected": [{"type": "f64"}]}, 
  {"type": "assert_trap", "line": 224, "action": {"type": "invoke", "field": "f64.load", "args": [{"type": "i32", "value": "4294967290"}]}, "text": "out of bounds memory access", "expected": [{"type": "f64"}]}, 
  {"type": "assert_trap", "line": 225, "action": {"type": "invoke", "field": "f64.load", "args": [{"type": "i32", "value": "4294967289"}]}, "text": "out of bounds memory access", "expected": [{"type": "f64"}]}, 
  {"type": "assert_trap", "line": 226, "action": {"type": "invoke", "field": "f64.load", "args": [{"type": "i32", "value": "4294967288"}]}, "text": "out of bounds memory access", "expected": [{"type": "f64"}]}, 
  {"type": "assert_trap", "line": 227, "action": {"type": "invoke", "field": "i32.load8_s", "args": [{"type": "i32", "value": "65536"}]}, "text": "out of bounds memory access", "expected": [{"type": "i32"}]}, 
  {"type": "assert_trap", "line": 228, "action": {"type": "invoke", "field": "i32.load8_s", "args": [{"type": "i32", "value": "4294967295"}]}, "text": "out of bounds memory access", "expected": [{"type": "i32"}]}, 
  {"type": "assert_trap", "line": 229, "action": {"type": "invoke", "field": "i32.load8_u", "args": [{"type": "i32", "value": "65536"}]}, "text": "out of bounds memory access", "expected": [{"type": "i32"}]}, 
  {"type": "assert_trap", "line": 230, "action": {"type": "invoke", "field": "i32.load8_u", "args": [{"type": "i32", "value": "4294967295"}]}, "text": "out of bounds memory access", "expected": [{"type": "i32"}]}, 
  {"type": "assert_trap", "line": 231, "action": {"type": "invoke", "field": "i32.load16_s", "args": [{"type": "i32", "value": "65536"}]}, "text": "out of bounds memory access", "expected": [{"type": "i32"}]}, 
  {"type": "assert_trap", "line": 232, "action": {"type": "invoke", "field": "i32.load16_s", "args": [{"type": "i32", "value": "65535"}]}, "text": "out of bounds memory access", "expected": [{"type": "i32"}]}, 
  {"type": "assert_trap", "line": 233, "action": {"type": "invoke", "field": "i32.load16_s", "args": [{"type": "i32", "value": "4294967295"}]}, "text": "out of bounds memory access", "expected": [{"type": "i32"}]}, 
  {"type": "assert_trap", "line": 234, "action": {"type": "invoke", "field": "i32.load16_s", "args": [{"type": "i32", "value": "4294967294"}]}, "text": "out of bounds memory access", "expected": [{"type": "i32"}]}, 
  {"type": "assert_trap", "line": 235, "action": {"type": "invoke", "field": "i32.load16_u", "args": [{"type": "i32", "value": "65536"}]}, "text": "out of bounds memory access", "expected": [{"type": "i32"}]}, 
  {"type": "assert_trap", "line": 236, "action": {"type": "invoke", "field": "i32.load16_u", "args": [{"type": "i32", "value": "65535"}]}, "text": "out of bounds memory access", "expected": [{"type": "i32"}]}, 
  {"type": "assert_trap", "line": 237, "action": {"type": "invoke", "field": "i32.load16_u", "args": [{"type": "i32", "value": "4294967295"}]}, "text": "out of bounds memory access", "expected": [{"type": "i32"}]}, 
  {"type": "assert_trap", "line": 238, "action": {"type": "invoke", "field": "i32.load16_u", "args": [{"type": "i32", "value": "4294967294"}]}, "text": "out of bounds memory access", "expected": [{"type": "i32"}]}, 
  {"type": "assert_trap", "line": 239, "action": {"type": "invoke", "field": "i64.load8_s", "args": [{"type": "i32", "value": "65536"}]}, "text": "out of bounds memory access", "expected": [{"type": "i64"}]}, 
  {"type": "assert_trap", "line": 240, "action": {"type": "invoke", "field": "i64.load8_s", "args": [{"type": "i32", "value": "4294967295"}]}, "text": "out of bounds memory access", "expected": [{"type": "i64"}]}, 
  {"type": "assert_trap", "line": 241, "action": {"type": "invoke", "field": "i64.load8_u", "args": [{"type": "i32", "value": "65536"}]}, "text": "out of bounds memory access", "expected": [{"type": "i64"}]}, 
  {"type": "assert_trap", "line": 242, "action": {"type": "invoke", "field": "i64.load8_u", "args": [{"type": "i32", "value": "4294967295"}]}, "text": "out of bounds memory access", "expected": [{"type": "i64"}]}, 
  {"type": "assert_trap", "line": 243, "action": {"type": "invoke", "field": "i64.load16_s", "args": [{"type": "i32", "value": "65536"}]}, "text": "out of bounds memory access", "expected": [{"type": "i64"}]}, 
  {"type": "assert_trap", "line": 244, "action": {"type": "invoke", "field": "i64.load16_s", "args": [{"type": "i32", "value": "65535"}]}, "text": "out of bounds memory access", "expected": [{"type": "i64"}]}, 
  {"type": "assert_trap", "line": 245, "action": {"type": "invoke", "field": "i64.load16_s", "args": [{"type": "i32", "value": "4294967295"}]}, "text": "out of bounds memory access", "expected": [{"type": "i64"}]}, 
  {"type": "assert_trap", "line": 246, "action": {"type": "invoke", "field": "i64.load16_s", "args": [{"type": "i32", "value": "4294967294"}]}, "text": "out of bounds memory access", "expected": [{"type": "i64"}]}, 
  {"type": "assert_trap", "line": 247, "action": {"type": "invoke", "field": "i64.load16_u", "args": [{"type": "i32", "value": "65536"}]}, "text": "out of bounds memory access", "expected": [{"type": "i64"}]}, 
  {"type": "assert_trap", "line": 248, "action": {"type": "invoke", "field": "i64.load16_u", "args": [{"type": "i32", "value": "65535"}]}, "text": "out of bounds memory access", "expected": [{"type": "i64"}]}, 
  {"type": "assert_trap", "line": 249, "action": {"type": "invoke", "field": "i64.load16_u", "args": [{"type": "i32", "value": "4294967295"}]}, "text": "out of bounds memory access", "expected": [{"type": "i64"}]}, 
  {"type": "assert_trap", "line": 250, "action": {"type": "invoke", "field": "i64.load16_u", "args": [{"type": "i32", "value": "4294967294"}]}, "text": "out of bounds memory access", "expected": [{"type": "i64"}]}, 
  {"type": "assert_trap", "line": 251, "action": {"type": "invoke", "field": "i64.load32_s", "args": [{"type": "i32", "value": "65536"}]}, "text": "out of bounds memory access", "expected": [{"type": "i64"}]}, 
  {"type": "assert_trap", "line": 252, "action": {"type": "invoke", "field": "i64.load32_s", "args": [{"type": "i32", "value": "65535"}]}, "text": "out of bounds memory access", "expected": [{"type": "i64"}]}, 
  {"type": "assert_trap", "line": 253, "action": {"type": "invoke", "field": "i64.load32_s", "args": [{"type": "i32", "value": "65534"}]}, "text": "out of bounds memory access", "expected": [{"type": "i64"}]}, 
  {"type": "assert_trap", "line": 254, "action": {"type": "invoke", "field": "i64.load32_s", "args": [{"type": "i32", "value": "65533"}]}, "text": "out of bounds memory access", "expected": [{"type": "i64"}]}, 
  {"type": "assert_trap", "line": 255, "action": {"type": "invoke", "field": "i64.load32_s", "args": [{"type": "i32", "value": "4294967295"}]}, "text": "out of bounds memory access", "expected": [{"type": "i64"}]}, 
  {"type": "assert_trap", "line": 256, "action": {"type": "invoke", "field": "i64.load32_s", "args": [{"type": "i32", "value": "4294967294"}]}, "text": "out of bounds memory access", "expected": [{"type": "i64"}]}, 
  {"type": "assert_trap", "line": 257, "action": {"type": "invoke", "field": "i64.load32_s", "args": [{"type": "i32", "value": "4294967293"}]}, "text": "out of bounds memory access", "expected": [{"type": "i64"}]}, 
  {"type": "assert_trap", "line": 258, "action": {"type": "invoke", "field": "i64.load32_s", "args": [{"type": "i32", "value": "4294967292"}]}, "text": "out of bounds memory access", "expected": [{"type": "i64"}]}, 
  {"type": "assert_trap", "line": 259, "action": {"type": "invoke", "field": "i64.load32_u", "args": [{"type": "i32", "value": "65536"}]}, "text": "out of bounds memory access", "expected": [{"type": "i64"}]}, 
  {"type": "assert_trap", "line": 260, "action": {"type": "invoke", "field": "i64.load32_u", "args": [{"type": "i32", "value": "65535"}]}, "text": "out of bounds memory access", "expected": [{"type": "i64"}]}, 
  {"type": "assert_trap", "line": 261, "action": {"type": "invoke", "field": "i64.load32_u", "args": [{"type": "i32", "value": "65534"}]}, "text": "out of bounds memory access", "expected": [{"type": "i64"}]}, 
  {"type": "assert_trap", "line": 262, "action": {"type": "invoke", "field": "i64.load32_u", "args": [{"type": "i32", "value": "65533"}]}, "text": "out of bounds memory access", "expected": [{"type": "i64"}]}, 
  {"type": "assert_trap", "line": 263, "action": {"type": "invoke", "field": "i64.load32_u", "args": [{"type": "i32", "value": "4294967295"}]}, "text": "out of bounds memory access", "expected": [{"type": "i64"}]}, 
  {"type": "assert_trap", "line": 264, "action": {"type": "invoke", "field": "i64.load32_u", "args": [{"type": "i32", "value": "4294967294"}]}, "text": "out of bounds memory access", "expected": [{"type": "i64"}]}, 
  {"type": "assert_trap", "line": 265, "action": {"type": "invoke", "field": "i64.load32_u", "args": [{"type": "i32", "value": "4294967293"}]}, "text": "out of bounds memory access", "expected": [{"type": "i64"}]}, 
  {"type": "assert_trap", "line": 266, "action": {"type": "invoke", "field": "i64.load32_u", "args": [{"type": "i32", "value": "4294967292"}]}, "text": "out of bounds memory access", "expected": [{"type": "i64"}]}, 
  {"type": "assert_return", "line": 269, "action": {"type": "invoke", "field": "i64.load", "args": [{"type": "i32", "value": "65528"}]}, "expected": [{"type": "i64", "value": "7523094288207667809"}]}, 
  {"type": "assert_return", "line": 270, "action": {"type": "invoke", "field": "i64.load", "args": [{"type": "i32", "value": "0"}]}, "expected": [{"type": "i64", "value": "7523094288207667809"}]}, 
  {"type": "assert_return", "line": 274, "action": {"type": "invoke", "field": "i64.store", "args": [{"type": "i32", "value": "65528"}, {"type": "i64", "value": "0"}]}, "expected": []}, 
  {"type": "assert_trap", "line": 275, "action": {"type": "invoke", "field": "i32.store", "args": [{"type": "i32", "value": "65533"}, {"type": "i32", "value": "305419896"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_return", "line": 276, "action": {"type": "invoke", "field": "i32.load", "args": [{"type": "i32", "value": "65532"}]}, "expected": [{"type": "i32", "value": "0"}]}, 
  {"type": "assert_trap", "line": 277, "action": {"type": "invoke", "field": "i64.store", "args": [{"type": "i32", "value": "65529"}, {"type": "i64", "value": "1311768467294899695"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_return", "line": 278, "action": {"type": "invoke", "field": "i64.load", "args": [{"type": "i32", "value": "65528"}]}, "expected": [{"type": "i64", "value": "0"}]}, 
  {"type": "assert_trap", "line": 279, "action": {"type": "invoke", "field": "f32.store", "args": [{"type": "i32", "value": "65533"}, {"type": "f32", "value": "1301390004"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_return", "line": 280, "action": {"type": "invoke", "field": "f32.load", "args": [{"type": "i32", "value": "65532"}]}, "expected": [{"type": "f32", "value": "0"}]}, 
  {"type": "assert_trap", "line": 281, "action": {"type": "invoke", "field": "f64.store", "args": [{"type": "i32", "value": "65529"}, {"type": "f64", "value": "4878018892390247374"}]}, "text": "out of bounds memory access", "expected": []}, 
  {"type": "assert_return", "line": 282, "action": {"type": "invoke", "field": "f64.load", "args": [{"type": "i32", "value": "65528"}]}, "expected": [{"type": "f64", "value": "0"}]}]},
  "code": [
    "(module (memory 1)\n  (func $addr_limit (result i32) (i32.mul (memory.size) (i32.const 0x10000)) )\n  (func (export \"store\") (param $i i32) (param $v i32) (i32.store (i32.add (call $addr_limit) (local.get $i)) (local.get $v)) )\n  (func (export \"load\") (param $i i32) (result i32) (i32.load (i32.add (call $addr_limit) (local.get $i))) )\n  (func (export \"memory.grow\") (param i32) (result i32) (memory.grow (local.get 0)) ))",
    "(assert_return (invoke \"store\" (i32.const -4) (i32.const 42)))",
    "(assert_return (invoke \"load\" (i32.const -4)) (i32.const 42))",
    "(assert_trap (invoke \"store\" (i32.const -3) (i32.const 0x12345678)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"load\" (i32.const -3)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"store\" (i32.const -2) (i32.const 13)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"load\" (i32.const -2)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"store\" (i32.const -1) (i32.const 13)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"load\" (i32.const -1)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"store\" (i32.const 0) (i32.const 13)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"load\" (i32.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"store\" (i32.const 0x80000000) (i32.const 13)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"load\" (i32.const 0x80000000)) \"out of bounds memory access\")",
    "(assert_return (invoke \"memory.grow\" (i32.const 0x10001)) (i32.const -1))",
    "(module (memory 1) (data (i32.const 0) \"abcdefgh\") (data (i32.const 0xfff8) \"abcdefgh\")\n  (func (export \"i32.load\") (param $a i32) (result i32) (i32.load (local.get $a)) )\n  (func (export \"i64.load\") (param $a i32) (result i64) (i64.load (local.get $a)) )\n  (func (export \"f32.load\") (param $a i32) (result f32) (f32.load (local.get $a)) )\n  (func (export \"f64.load\") (param $a i32) (result f64) (f64.load (local.get $a)) )\n  (func (export \"i32.load8_s\") (param $a i32) (result i32) (i32.load8_s (local.get $a)) )\n  (func (export \"i32.load8_u\") (param $a i32) (result i32) (i32.load8_u (local.get $a)) )\n  (func (export \"i32.load16_s\") (param $a i32) (result i32) (i32.load16_s (local.get $a)) )\n  (func (export \"i32.load16_u\") (param $a i32) (result i32) (i32.load16_u (local.get $a)) )\n  (func (export \"i64.load8_s\") (param $a i32) (result i64) (i64.load8_s (local.get $a)) )\n  (func (export \"i64.load8_u\") (param $a i32) (result i64) (i64.load8_u (local.get $a)) )\n  (func (export \"i64.load16_s\") (param $a i32) (result i64) (i64.load16_s (local.get $a)) )\n  (func (export \"i64.load16_u\") (param $a i32) (result i64) (i64.load16_u (local.get $a)) )\n  (func (export \"i64.load32_s\") (param $a i32) (result i64) (i64.load32_s (local.get $a)) )\n  (func (export \"i64.load32_u\") (param $a i32) (result i64) (i64.load32_u (local.get $a)) )\n  (func (export \"i32.store\") (param $a i32) (param $v i32) (i32.store (local.get $a) (local.get $v)) )\n  (func (export \"i64.store\") (param $a i32) (param $v i64) (i64.store (local.get $a) (local.get $v)) )\n  (func (export \"f32.store\") (param $a i32) (param $v f32) (f32.store (local.get $a) (local.get $v)) )\n  (func (export \"f64.store\") (param $a i32) (param $v f64) (f64.store (local.get $a) (local.get $v)) )\n  (func (export \"i32.store8\") (param $a i32) (param $v i32) (i32.store8 (local.get $a) (local.get $v)) )\n  (func (export \"i32.store16\") (param $a i32) (param $v i32) (i32.store16 (local.get $a) (local.get $v)) )\n  (func (export \"i64.store8\") (param $a i32) (param $v i64) (i64.store8 (local.get $a) (local.get $v)) )\n  (func (export \"i64.store16\") (param $a i32) (param $v i64) (i64.store16 (local.get $a) (local.get $v)) )\n  (func (export \"i64.store32\") (param $a i32) (param $v i64) (i64.store32 (local.get $a) (local.get $v)) ))",
    "(assert_trap (invoke \"i32.store\" (i32.const 0x10000) (i32.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i32.store\" (i32.const 0xffff) (i32.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i32.store\" (i32.const 0xfffe) (i32.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i32.store\" (i32.const 0xfffd) (i32.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i32.store\" (i32.const -1) (i32.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i32.store\" (i32.const -2) (i32.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i32.store\" (i32.const -3) (i32.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i32.store\" (i32.const -4) (i32.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.store\" (i32.const 0x10000) (i64.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.store\" (i32.const 0xffff) (i64.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.store\" (i32.const 0xfffe) (i64.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.store\" (i32.const 0xfffd) (i64.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.store\" (i32.const 0xfffc) (i64.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.store\" (i32.const 0xfffb) (i64.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.store\" (i32.const 0xfffa) (i64.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.store\" (i32.const 0xfff9) (i64.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.store\" (i32.const -1) (i64.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.store\" (i32.const -2) (i64.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.store\" (i32.const -3) (i64.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.store\" (i32.const -4) (i64.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.store\" (i32.const -5) (i64.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.store\" (i32.const -6) (i64.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.store\" (i32.const -7) (i64.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.store\" (i32.const -8) (i64.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"f32.store\" (i32.const 0x10000) (f32.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"f32.store\" (i32.const 0xffff) (f32.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"f32.store\" (i32.const 0xfffe) (f32.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"f32.store\" (i32.const 0xfffd) (f32.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"f32.store\" (i32.const -1) (f32.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"f32.store\" (i32.const -2) (f32.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"f32.store\" (i32.const -3) (f32.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"f32.store\" (i32.const -4) (f32.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"f64.store\" (i32.const 0x10000) (f64.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"f64.store\" (i32.const 0xffff) (f64.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"f64.store\" (i32.const 0xfffe) (f64.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"f64.store\" (i32.const 0xfffd) (f64.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"f64.store\" (i32.const 0xfffc) (f64.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"f64.store\" (i32.const 0xfffb) (f64.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"f64.store\" (i32.const 0xfffa) (f64.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"f64.store\" (i32.const 0xfff9) (f64.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"f64.store\" (i32.const -1) (f64.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"f64.store\" (i32.const -2) (f64.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"f64.store\" (i32.const -3) (f64.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"f64.store\" (i32.const -4) (f64.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"f64.store\" (i32.const -5) (f64.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"f64.store\" (i32.const -6) (f64.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"f64.store\" (i32.const -7) (f64.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"f64.store\" (i32.const -8) (f64.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i32.store8\" (i32.const 0x10000) (i32.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i32.store8\" (i32.const -1) (i32.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i32.store16\" (i32.const 0x10000) (i32.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i32.store16\" (i32.const 0xffff) (i32.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i32.store16\" (i32.const -1) (i32.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i32.store16\" (i32.const -2) (i32.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.store8\" (i32.const 0x10000) (i64.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.store8\" (i32.const -1) (i64.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.store16\" (i32.const 0x10000) (i64.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.store16\" (i32.const 0xffff) (i64.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.store16\" (i32.const -1) (i64.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.store16\" (i32.const -2) (i64.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.store32\" (i32.const 0x10000) (i64.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.store32\" (i32.const 0xffff) (i64.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.store32\" (i32.const 0xfffe) (i64.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.store32\" (i32.const 0xfffd) (i64.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.store32\" (i32.const -1) (i64.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.store32\" (i32.const -2) (i64.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.store32\" (i32.const -3) (i64.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.store32\" (i32.const -4) (i64.const 0)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i32.load\" (i32.const 0x10000)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i32.load\" (i32.const 0xffff)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i32.load\" (i32.const 0xfffe)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i32.load\" (i32.const 0xfffd)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i32.load\" (i32.const -1)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i32.load\" (i32.const -2)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i32.load\" (i32.const -3)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i32.load\" (i32.const -4)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.load\" (i32.const 0x10000)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.load\" (i32.const 0xffff)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.load\" (i32.const 0xfffe)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.load\" (i32.const 0xfffd)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.load\" (i32.const 0xfffc)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.load\" (i32.const 0xfffb)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.load\" (i32.const 0xfffa)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.load\" (i32.const 0xfff9)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.load\" (i32.const -1)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.load\" (i32.const -2)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.load\" (i32.const -3)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.load\" (i32.const -4)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.load\" (i32.const -5)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.load\" (i32.const -6)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.load\" (i32.const -7)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.load\" (i32.const -8)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"f32.load\" (i32.const 0x10000)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"f32.load\" (i32.const 0xffff)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"f32.load\" (i32.const 0xfffe)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"f32.load\" (i32.const 0xfffd)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"f32.load\" (i32.const -1)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"f32.load\" (i32.const -2)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"f32.load\" (i32.const -3)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"f32.load\" (i32.const -4)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"f64.load\" (i32.const 0x10000)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"f64.load\" (i32.const 0xffff)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"f64.load\" (i32.const 0xfffe)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"f64.load\" (i32.const 0xfffd)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"f64.load\" (i32.const 0xfffc)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"f64.load\" (i32.const 0xfffb)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"f64.load\" (i32.const 0xfffa)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"f64.load\" (i32.const 0xfff9)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"f64.load\" (i32.const -1)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"f64.load\" (i32.const -2)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"f64.load\" (i32.const -3)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"f64.load\" (i32.const -4)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"f64.load\" (i32.const -5)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"f64.load\" (i32.const -6)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"f64.load\" (i32.const -7)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"f64.load\" (i32.const -8)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i32.load8_s\" (i32.const 0x10000)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i32.load8_s\" (i32.const -1)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i32.load8_u\" (i32.const 0x10000)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i32.load8_u\" (i32.const -1)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i32.load16_s\" (i32.const 0x10000)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i32.load16_s\" (i32.const 0xffff)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i32.load16_s\" (i32.const -1)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i32.load16_s\" (i32.const -2)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i32.load16_u\" (i32.const 0x10000)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i32.load16_u\" (i32.const 0xffff)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i32.load16_u\" (i32.const -1)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i32.load16_u\" (i32.const -2)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.load8_s\" (i32.const 0x10000)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.load8_s\" (i32.const -1)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.load8_u\" (i32.const 0x10000)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.load8_u\" (i32.const -1)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.load16_s\" (i32.const 0x10000)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.load16_s\" (i32.const 0xffff)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.load16_s\" (i32.const -1)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.load16_s\" (i32.const -2)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.load16_u\" (i32.const 0x10000)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.load16_u\" (i32.const 0xffff)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.load16_u\" (i32.const -1)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.load16_u\" (i32.const -2)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.load32_s\" (i32.const 0x10000)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.load32_s\" (i32.const 0xffff)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.load32_s\" (i32.const 0xfffe)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.load32_s\" (i32.const 0xfffd)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.load32_s\" (i32.const -1)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.load32_s\" (i32.const -2)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.load32_s\" (i32.const -3)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.load32_s\" (i32.const -4)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.load32_u\" (i32.const 0x10000)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.load32_u\" (i32.const 0xffff)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.load32_u\" (i32.const 0xfffe)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.load32_u\" (i32.const 0xfffd)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.load32_u\" (i32.const -1)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.load32_u\" (i32.const -2)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.load32_u\" (i32.const -3)) \"out of bounds memory access\")",
    "(assert_trap (invoke \"i64.load32_u\" (i32.const -4)) \"out of bounds memory access\")",
    "(assert_return (invoke \"i64.load\" (i32.const 0xfff8)) (i64.const 0x6867666564636261))",
    "(assert_return (invoke \"i64.load\" (i32.const 0)) (i64.const 0x6867666564636261))",
    "(assert_return (invoke \"i64.store\" (i32.const 0xfff8) (i64.const 0)))",
    "(assert_trap (invoke \"i32.store\" (i32.const 0xfffd) (i32.const 0x12345678)) \"out of bounds memory access\")",
    "(assert_return (invoke \"i32.load\" (i32.const 0xfffc)) (i32.const 0))",
    "(assert_trap (invoke \"i64.store\" (i32.const 0xfff9) (i64.const 0x1234567890abcdef)) \"out of bounds memory access\")",
    "(assert_return (invoke \"i64.load\" (i32.const 0xfff8)) (i64.const 0))",
    "(assert_trap (invoke \"f32.store\" (i32.const 0xfffd) (f32.const 0x12345678)) \"out of bounds memory access\")",
    "(assert_return (invoke \"f32.load\" (i32.const 0xfffc)) (f32.const 0))",
    "(assert_trap (invoke \"f64.store\" (i32.const 0xfff9) (f64.const 0x1234567890abcdef)) \"out of bounds memory access\")",
    "(assert_return (invoke \"f64.load\" (i32.const 0xfff8)) (f64.const 0))"
  ],
  "dump": {
    "memory_trap.0.wasm": {
      "header": "\nmemory_trap.0.wasm:\tfile format wasm 0x1\n\nSections:\n\n     Type start=0x0000000a end=0x00000019 (size=0x0000000f) count: 3\n Function start=0x0000001b end=0x00000020 (size=0x00000005) count: 4\n   Memory start=0x00000022 end=0x00000025 (size=0x00000003) count: 1\n   Export start=0x00000027 end=0x00000045 (size=0x0000001e) count: 3\n     Code start=0x00000047 end=0x00000071 (size=0x0000002a) count: 4\n",
      "details": "\nmemory_trap.0.wasm:\tfile format wasm 0x1\n\nSection Details:\n\nType[3]:\n - type[0] () -> i32\n - type[1] (i32, i32) -> nil\n - type[2] (i32) -> i32\nFunction[4]:\n - func[0] sig=0\n - func[1] sig=1 <store>\n - func[2] sig=2 <load>\n - func[3] sig=2 <memory.grow>\nMemory[1]:\n - memory[0] pages: initial=1\nExport[3]:\n - func[1] <store> -> \"store\"\n - func[2] <load> -> \"load\"\n - func[3] <memory.grow> -> \"memory.grow\"\nCode[4]:\n - func[0] size=9\n - func[1] size=12 <store>\n - func[2] size=10 <load>\n - func[3] size=6 <memory.grow>\n",
      "disassemble": "\nmemory_trap.0.wasm:\tfile format wasm 0x1\n\nCode Disassembly:\n\n000049 func[0]:\n 00004a: 3f 00                      | memory.size 0\n 00004c: 41 80 80 04                | i32.const 65536\n 000050: 6c                         | i32.mul\n 000051: 0b                         | end\n000053 func[1] <store>:\n 000054: 10 00                      | call 0\n 000056: 20 00                      | local.get 0\n 000058: 6a                         | i32.add\n 000059: 20 01                      | local.get 1\n 00005b: 36 02 00                   | i32.store 2 0\n 00005e: 0b                         | end\n000060 func[2] <load>:\n 000061: 10 00                      | call 0\n 000063: 20 00                      | local.get 0\n 000065: 6a                         | i32.add\n 000066: 28 02 00                   | i32.load 2 0\n 000069: 0b                         | end\n00006b func[3] <memory.grow>:\n 00006c: 20 00                      | local.get 0\n 00006e: 40 00                      | memory.grow 0\n 000070: 0b                         | end\n"
    },
    "memory_trap.1.wasm": {
      "header": "\nmemory_trap.1.wasm:\tfile format wasm 0x1\n\nSections:\n\n     Type start=0x0000000a end=0x00000033 (size=0x00000029) count: 8\n Function start=0x00000035 end=0x0000004d (size=0x00000018) count: 23\n   Memory start=0x0000004f end=0x00000052 (size=0x00000003) count: 1\n   Export start=0x00000055 end=0x00000188 (size=0x00000133) count: 23\n     Code start=0x0000018b end=0x00000256 (size=0x000000cb) count: 23\n     Data start=0x00000258 end=0x00000275 (size=0x0000001d) count: 2\n",
      "details": "\nmemory_trap.1.wasm:\tfile format wasm 0x1\n\nSection Details:\n\nType[8]:\n - type[0] (i32) -> i32\n - type[1] (i32) -> i64\n - type[2] (i32) -> f32\n - type[3] (i32) -> f64\n - type[4] (i32, i32) -> nil\n - type[5] (i32, i64) -> nil\n - type[6] (i32, f32) -> nil\n - type[7] (i32, f64) -> nil\nFunction[23]:\n - func[0] sig=0 <i32.load>\n - func[1] sig=1 <i64.load>\n - func[2] sig=2 <f32.load>\n - func[3] sig=3 <f64.load>\n - func[4] sig=0 <i32.load8_s>\n - func[5] sig=0 <i32.load8_u>\n - func[6] sig=0 <i32.load16_s>\n - func[7] sig=0 <i32.load16_u>\n - func[8] sig=1 <i64.load8_s>\n - func[9] sig=1 <i64.load8_u>\n - func[10] sig=1 <i64.load16_s>\n - func[11] sig=1 <i64.load16_u>\n - func[12] sig=1 <i64.load32_s>\n - func[13] sig=1 <i64.load32_u>\n - func[14] sig=4 <i32.store>\n - func[15] sig=5 <i64.store>\n - func[16] sig=6 <f32.store>\n - func[17] sig=7 <f64.store>\n - func[18] sig=4 <i32.store8>\n - func[19] sig=4 <i32.store16>\n - func[20] sig=5 <i64.store8>\n - func[21] sig=5 <i64.store16>\n - func[22] sig=5 <i64.store32>\nMemory[1]:\n - memory[0] pages: initial=1\nExport[23]:\n - func[0] <i32.load> -> \"i32.load\"\n - func[1] <i64.load> -> \"i64.load\"\n - func[2] <f32.load> -> \"f32.load\"\n - func[3] <f64.load> -> \"f64.load\"\n - func[4] <i32.load8_s> -> \"i32.load8_s\"\n - func[5] <i32.load8_u> -> \"i32.load8_u\"\n - func[6] <i32.load16_s> -> \"i32.load16_s\"\n - func[7] <i32.load16_u> -> \"i32.load16_u\"\n - func[8] <i64.load8_s> -> \"i64.load8_s\"\n - func[9] <i64.load8_u> -> \"i64.load8_u\"\n - func[10] <i64.load16_s> -> \"i64.load16_s\"\n - func[11] <i64.load16_u> -> \"i64.load16_u\"\n - func[12] <i64.load32_s> -> \"i64.load32_s\"\n - func[13] <i64.load32_u> -> \"i64.load32_u\"\n - func[14] <i32.store> -> \"i32.store\"\n - func[15] <i64.store> -> \"i64.store\"\n - func[16] <f32.store> -> \"f32.store\"\n - func[17] <f64.store> -> \"f64.store\"\n - func[18] <i32.store8> -> \"i32.store8\"\n - func[19] <i32.store16> -> \"i32.store16\"\n - func[20] <i64.store8> -> \"i64.store8\"\n - func[21] <i64.store16> -> \"i64.store16\"\n - func[22] <i64.store32> -> \"i64.store32\"\nCode[23]:\n - func[0] size=7 <i32.load>\n - func[1] size=7 <i64.load>\n - func[2] size=7 <f32.load>\n - func[3] size=7 <f64.load>\n - func[4] size=7 <i32.load8_s>\n - func[5] size=7 <i32.load8_u>\n - func[6] size=7 <i32.load16_s>\n - func[7] size=7 <i32.load16_u>\n - func[8] size=7 <i64.load8_s>\n - func[9] size=7 <i64.load8_u>\n - func[10] size=7 <i64.load16_s>\n - func[11] size=7 <i64.load16_u>\n - func[12] size=7 <i64.load32_s>\n - func[13] size=7 <i64.load32_u>\n - func[14] size=9 <i32.store>\n - func[15] size=9 <i64.store>\n - func[16] size=9 <f32.store>\n - func[17] size=9 <f64.store>\n - func[18] size=9 <i32.store8>\n - func[19] size=9 <i32.store16>\n - func[20] size=9 <i64.store8>\n - func[21] size=9 <i64.store16>\n - func[22] size=9 <i64.store32>\nData[2]:\n - segment[0] memory=0 size=8 - init i32=0\n  - 0000000: 6162 6364 6566 6768                      abcdefgh\n - segment[1] memory=0 size=8 - init i32=65528\n  - 000fff8: 6162 6364 6566 6768                      abcdefgh\n",
      "disassemble": "\nmemory_trap.1.wasm:\tfile format wasm 0x1\n\nCode Disassembly:\n\n00018d func[0] <i32.load>:\n 00018e: 20 00                      | local.get 0\n 000190: 28 02 00                   | i32.load 2 0\n 000193: 0b                         | end\n000195 func[1] <i64.load>:\n 000196: 20 00                      | local.get 0\n 000198: 29 03 00                   | i64.load 3 0\n 00019b: 0b                         | end\n00019d func[2] <f32.load>:\n 00019e: 20 00                      | local.get 0\n 0001a0: 2a 02 00                   | f32.load 2 0\n 0001a3: 0b                         | end\n0001a5 func[3] <f64.load>:\n 0001a6: 20 00                      | local.get 0\n 0001a8: 2b 03 00                   | f64.load 3 0\n 0001ab: 0b                         | end\n0001ad func[4] <i32.load8_s>:\n 0001ae: 20 00                      | local.get 0\n 0001b0: 2c 00 00                   | i32.load8_s 0 0\n 0001b3: 0b                         | end\n0001b5 func[5] <i32.load8_u>:\n 0001b6: 20 00                      | local.get 0\n 0001b8: 2d 00 00                   | i32.load8_u 0 0\n 0001bb: 0b                         | end\n0001bd func[6] <i32.load16_s>:\n 0001be: 20 00                      | local.get 0\n 0001c0: 2e 01 00                   | i32.load16_s 1 0\n 0001c3: 0b                         | end\n0001c5 func[7] <i32.load16_u>:\n 0001c6: 20 00                      | local.get 0\n 0001c8: 2f 01 00                   | i32.load16_u 1 0\n 0001cb: 0b                         | end\n0001cd func[8] <i64.load8_s>:\n 0001ce: 20 00                      | local.get 0\n 0001d0: 30 00 00                   | i64.load8_s 0 0\n 0001d3: 0b                         | end\n0001d5 func[9] <i64.load8_u>:\n 0001d6: 20 00                      | local.get 0\n 0001d8: 31 00 00                   | i64.load8_u 0 0\n 0001db: 0b                         | end\n0001dd func[10] <i64.load16_s>:\n 0001de: 20 00                      | local.get 0\n 0001e0: 32 01 00                   | i64.load16_s 1 0\n 0001e3: 0b                         | end\n0001e5 func[11] <i64.load16_u>:\n 0001e6: 20 00                      | local.get 0\n 0001e8: 33 01 00                   | i64.load16_u 1 0\n 0001eb: 0b                         | end\n0001ed func[12] <i64.load32_s>:\n 0001ee: 20 00                      | local.get 0\n 0001f0: 34 02 00                   | i64.load32_s 2 0\n 0001f3: 0b                         | end\n0001f5 func[13] <i64.load32_u>:\n 0001f6: 20 00                      | local.get 0\n 0001f8: 35 02 00                   | i64.load32_u 2 0\n 0001fb: 0b                         | end\n0001fd func[14] <i32.store>:\n 0001fe: 20 00                      | local.get 0\n 000200: 20 01                      | local.get 1\n 000202: 36 02 00                   | i32.store 2 0\n 000205: 0b                         | end\n000207 func[15] <i64.store>:\n 000208: 20 00                      | local.get 0\n 00020a: 20 01                      | local.get 1\n 00020c: 37 03 00                   | i64.store 3 0\n 00020f: 0b                         | end\n000211 func[16] <f32.store>:\n 000212: 20 00                      | local.get 0\n 000214: 20 01                      | local.get 1\n 000216: 38 02 00                   | f32.store 2 0\n 000219: 0b                         | end\n00021b func[17] <f64.store>:\n 00021c: 20 00                      | local.get 0\n 00021e: 20 01                      | local.get 1\n 000220: 39 03 00                   | f64.store 3 0\n 000223: 0b                         | end\n000225 func[18] <i32.store8>:\n 000226: 20 00                      | local.get 0\n 000228: 20 01                      | local.get 1\n 00022a: 3a 00 00                   | i32.store8 0 0\n 00022d: 0b                         | end\n00022f func[19] <i32.store16>:\n 000230: 20 00                      | local.get 0\n 000232: 20 01                      | local.get 1\n 000234: 3b 01 00                   | i32.store16 1 0\n 000237: 0b                         | end\n000239 func[20] <i64.store8>:\n 00023a: 20 00                      | local.get 0\n 00023c: 20 01                      | local.get 1\n 00023e: 3c 00 00                   | i64.store8 0 0\n 000241: 0b                         | end\n000243 func[21] <i64.store16>:\n 000244: 20 00                      | local.get 0\n 000246: 20 01                      | local.get 1\n 000248: 3d 01 00                   | i64.store16 1 0\n 00024b: 0b                         | end\n00024d func[22] <i64.store32>:\n 00024e: 20 00                      | local.get 0\n 000250: 20 01                      | local.get 1\n 000252: 3e 02 00                   | i64.store32 2 0\n 000255: 0b                         | end\n"
    }
  }
}
