{
  "bin": {
    "utf8-import-field.0.wasm": "AGFzbQEAAAACCwEBgAR0ZXN0A38A",
    "utf8-import-field.1.wasm": "AGFzbQEAAAACCwEBjwR0ZXN0A38A",
    "utf8-import-field.10.wasm": "AGFzbQEAAAACDAECwL8EdGVzdAN/AA==",
    "utf8-import-field.100.wasm": "AGFzbQEAAAACDgEE8f2AgAR0ZXN0A38A",
    "utf8-import-field.101.wasm": "AGFzbQEAAAACDgEE8wCAgAR0ZXN0A38A",
    "utf8-import-field.102.wasm": "AGFzbQEAAAACDgEE83+AgAR0ZXN0A38A",
    "utf8-import-field.103.wasm": "AGFzbQEAAAACDgEE88CAgAR0ZXN0A38A",
    "utf8-import-field.104.wasm": "AGFzbQEAAAACDgEE8/2AgAR0ZXN0A38A",
    "utf8-import-field.105.wasm": "AGFzbQEAAAACDgEE9ACAgAR0ZXN0A38A",
    "utf8-import-field.106.wasm": "AGFzbQEAAAACDgEE9H+AgAR0ZXN0A38A",
    "utf8-import-field.107.wasm": "AGFzbQEAAAACDgEE9JCAgAR0ZXN0A38A",
    "utf8-import-field.108.wasm": "AGFzbQEAAAACDgEE9L+AgAR0ZXN0A38A",
    "utf8-import-field.109.wasm": "AGFzbQEAAAACDgEE9MCAgAR0ZXN0A38A",
    "utf8-import-field.11.wasm": "AGFzbQEAAAACDAECwYAEdGVzdAN/AA==",
    "utf8-import-field.110.wasm": "AGFzbQEAAAACDgEE9P2AgAR0ZXN0A38A",
    "utf8-import-field.111.wasm": "AGFzbQEAAAACDgEE9YCAgAR0ZXN0A38A",
    "utf8-import-field.112.wasm": "AGFzbQEAAAACDgEE94CAgAR0ZXN0A38A",
    "utf8-import-field.113.wasm": "AGFzbQEAAAACDgEE97+/vwR0ZXN0A38A",
    "utf8-import-field.114.wasm": "AGFzbQEAAAACDgEE8JAAkAR0ZXN0A38A",
    "utf8-import-field.115.wasm": "AGFzbQEAAAACDgEE8JB/kAR0ZXN0A38A",
    "utf8-import-field.116.wasm": "AGFzbQEAAAACDgEE8JDAkAR0ZXN0A38A",
    "utf8-import-field.117.wasm": "AGFzbQEAAAACDgEE8JD9kAR0ZXN0A38A",
    "utf8-import-field.118.wasm": "AGFzbQEAAAACDgEE8YAAgAR0ZXN0A38A",
    "utf8-import-field.119.wasm": "AGFzbQEAAAACDgEE8YB/gAR0ZXN0A38A",
    "utf8-import-field.12.wasm": "AGFzbQEAAAACDAECwb8EdGVzdAN/AA==",
    "utf8-import-field.120.wasm": "AGFzbQEAAAACDgEE8YDAgAR0ZXN0A38A",
    "utf8-import-field.121.wasm": "AGFzbQEAAAACDgEE8YD9gAR0ZXN0A38A",
    "utf8-import-field.122.wasm": "AGFzbQEAAAACDgEE84AAgAR0ZXN0A38A",
    "utf8-import-field.123.wasm": "AGFzbQEAAAACDgEE84B/gAR0ZXN0A38A",
    "utf8-import-field.124.wasm": "AGFzbQEAAAACDgEE84DAgAR0ZXN0A38A",
    "utf8-import-field.125.wasm": "AGFzbQEAAAACDgEE84D9gAR0ZXN0A38A",
    "utf8-import-field.126.wasm": "AGFzbQEAAAACDgEE9IAAgAR0ZXN0A38A",
    "utf8-import-field.127.wasm": "AGFzbQEAAAACDgEE9IB/gAR0ZXN0A38A",
    "utf8-import-field.128.wasm": "AGFzbQEAAAACDgEE9IDAgAR0ZXN0A38A",
    "utf8-import-field.129.wasm": "AGFzbQEAAAACDgEE9ID9gAR0ZXN0A38A",
    "utf8-import-field.13.wasm": "AGFzbQEAAAACDAECwgAEdGVzdAN/AA==",
    "utf8-import-field.130.wasm": "AGFzbQEAAAACDgEE8JCQAAR0ZXN0A38A",
    "utf8-import-field.131.wasm": "AGFzbQEAAAACDgEE8JCQfwR0ZXN0A38A",
    "utf8-import-field.132.wasm": "AGFzbQEAAAACDgEE8JCQwAR0ZXN0A38A",
    "utf8-import-field.133.wasm": "AGFzbQEAAAACDgEE8JCQ/QR0ZXN0A38A",
    "utf8-import-field.134.wasm": "AGFzbQEAAAACDgEE8YCAAAR0ZXN0A38A",
    "utf8-import-field.135.wasm": "AGFzbQEAAAACDgEE8YCAfwR0ZXN0A38A",
    "utf8-import-field.136.wasm": "AGFzbQEAAAACDgEE8YCAwAR0ZXN0A38A",
    "utf8-import-field.137.wasm": "AGFzbQEAAAACDgEE8YCA/QR0ZXN0A38A",
    "utf8-import-field.138.wasm": "AGFzbQEAAAACDgEE84CAAAR0ZXN0A38A",
    "utf8-import-field.139.wasm": "AGFzbQEAAAACDgEE84CAfwR0ZXN0A38A",
    "utf8-import-field.14.wasm": "AGFzbQEAAAACDAECwn8EdGVzdAN/AA==",
    "utf8-import-field.140.wasm": "AGFzbQEAAAACDgEE84CAwAR0ZXN0A38A",
    "utf8-import-field.141.wasm": "AGFzbQEAAAACDgEE84CA/QR0ZXN0A38A",
    "utf8-import-field.142.wasm": "AGFzbQEAAAACDgEE9ICAAAR0ZXN0A38A",
    "utf8-import-field.143.wasm": "AGFzbQEAAAACDgEE9ICAfwR0ZXN0A38A",
    "utf8-import-field.144.wasm": "AGFzbQEAAAACDgEE9ICAwAR0ZXN0A38A",
    "utf8-import-field.145.wasm": "AGFzbQEAAAACDgEE9ICA/QR0ZXN0A38A",
    "utf8-import-field.146.wasm": "AGFzbQEAAAACEAEG+ICAgICABHRlc3QDfwA=",
    "utf8-import-field.147.wasm": "AGFzbQEAAAACDgEE+ICAgAR0ZXN0A38A",
    "utf8-import-field.148.wasm": "AGFzbQEAAAACDwEF+ICAgCMEdGVzdAN/AA==",
    "utf8-import-field.149.wasm": "AGFzbQEAAAACDQED+ICABHRlc3QDfwA=",
    "utf8-import-field.15.wasm": "AGFzbQEAAAACDAECwsAEdGVzdAN/AA==",
    "utf8-import-field.150.wasm": "AGFzbQEAAAACDgEE+ICAIwR0ZXN0A38A",
    "utf8-import-field.151.wasm": "AGFzbQEAAAACDAEC+IAEdGVzdAN/AA==",
    "utf8-import-field.152.wasm": "AGFzbQEAAAACDQED+IAjBHRlc3QDfwA=",
    "utf8-import-field.153.wasm": "AGFzbQEAAAACCwEB+AR0ZXN0A38A",
    "utf8-import-field.154.wasm": "AGFzbQEAAAACDAEC+CMEdGVzdAN/AA==",
    "utf8-import-field.155.wasm": "AGFzbQEAAAACDwEF+ICAgIAEdGVzdAN/AA==",
    "utf8-import-field.156.wasm": "AGFzbQEAAAACDwEF+7+/v78EdGVzdAN/AA==",
    "utf8-import-field.157.wasm": "AGFzbQEAAAACEQEH/ICAgICAgAR0ZXN0A38A",
    "utf8-import-field.158.wasm": "AGFzbQEAAAACDwEF/ICAgIAEdGVzdAN/AA==",
    "utf8-import-field.159.wasm": "AGFzbQEAAAACEAEG/ICAgIAjBHRlc3QDfwA=",
    "utf8-import-field.16.wasm": "AGFzbQEAAAACDAECwv0EdGVzdAN/AA==",
    "utf8-import-field.160.wasm": "AGFzbQEAAAACDgEE/ICAgAR0ZXN0A38A",
    "utf8-import-field.161.wasm": "AGFzbQEAAAACDwEF/ICAgCMEdGVzdAN/AA==",
    "utf8-import-field.162.wasm": "AGFzbQEAAAACDQED/ICABHRlc3QDfwA=",
    "utf8-import-field.163.wasm": "AGFzbQEAAAACDgEE/ICAIwR0ZXN0A38A",
    "utf8-import-field.164.wasm": "AGFzbQEAAAACDAEC/IAEdGVzdAN/AA==",
    "utf8-import-field.165.wasm": "AGFzbQEAAAACDQED/IAjBHRlc3QDfwA=",
    "utf8-import-field.166.wasm": "AGFzbQEAAAACCwEB/AR0ZXN0A38A",
    "utf8-import-field.167.wasm": "AGFzbQEAAAACDAEC/CMEdGVzdAN/AA==",
    "utf8-import-field.168.wasm": "AGFzbQEAAAACEAEG/ICAgICABHRlc3QDfwA=",
    "utf8-import-field.169.wasm": "AGFzbQEAAAACEAEG/b+/v7+/BHRlc3QDfwA=",
    "utf8-import-field.17.wasm": "AGFzbQEAAAACDAEC3wAEdGVzdAN/AA==",
    "utf8-import-field.170.wasm": "AGFzbQEAAAACCwEB/gR0ZXN0A38A",
    "utf8-import-field.171.wasm": "AGFzbQEAAAACCwEB/wR0ZXN0A38A",
    "utf8-import-field.172.wasm": "AGFzbQEAAAACDAEC/v8EdGVzdAN/AA==",
    "utf8-import-field.173.wasm": "AGFzbQEAAAACDgEEAAD+/wR0ZXN0A38A",
    "utf8-import-field.174.wasm": "AGFzbQEAAAACDAEC//4EdGVzdAN/AA==",
    "utf8-import-field.175.wasm": "AGFzbQEAAAACDgEE//4AAAR0ZXN0A38A",
    "utf8-import-field.18.wasm": "AGFzbQEAAAACDAEC338EdGVzdAN/AA==",
    "utf8-import-field.19.wasm": "AGFzbQEAAAACDAEC38AEdGVzdAN/AA==",
    "utf8-import-field.2.wasm": "AGFzbQEAAAACCwEBkAR0ZXN0A38A",
    "utf8-import-field.20.wasm": "AGFzbQEAAAACDAEC3/0EdGVzdAN/AA==",
    "utf8-import-field.21.wasm": "AGFzbQEAAAACDgEE4YCAgAR0ZXN0A38A",
    "utf8-import-field.22.wasm": "AGFzbQEAAAACDAEC4YAEdGVzdAN/AA==",
    "utf8-import-field.23.wasm": "AGFzbQEAAAACDQED4YAuBHRlc3QDfwA=",
    "utf8-import-field.24.wasm": "AGFzbQEAAAACCwEB4QR0ZXN0A38A",
    "utf8-import-field.25.wasm": "AGFzbQEAAAACDAEC4S4EdGVzdAN/AA==",
    "utf8-import-field.26.wasm": "AGFzbQEAAAACDQED4ACgBHRlc3QDfwA=",
    "utf8-import-field.27.wasm": "AGFzbQEAAAACDQED4H+gBHRlc3QDfwA=",
    "utf8-import-field.28.wasm": "AGFzbQEAAAACDQED4ICABHRlc3QDfwA=",
    "utf8-import-field.29.wasm": "AGFzbQEAAAACDQED4ICgBHRlc3QDfwA=",
    "utf8-import-field.3.wasm": "AGFzbQEAAAACCwEBnwR0ZXN0A38A",
    "utf8-import-field.30.wasm": "AGFzbQEAAAACDQED4J+gBHRlc3QDfwA=",
    "utf8-import-field.31.wasm": "AGFzbQEAAAACDQED4J+/BHRlc3QDfwA=",
    "utf8-import-field.32.wasm": "AGFzbQEAAAACDQED4MCgBHRlc3QDfwA=",
    "utf8-import-field.33.wasm": "AGFzbQEAAAACDQED4P2gBHRlc3QDfwA=",
    "utf8-import-field.34.wasm": "AGFzbQEAAAACDQED4QCABHRlc3QDfwA=",
    "utf8-import-field.35.wasm": "AGFzbQEAAAACDQED4X+ABHRlc3QDfwA=",
    "utf8-import-field.36.wasm": "AGFzbQEAAAACDQED4cCABHRlc3QDfwA=",
    "utf8-import-field.37.wasm": "AGFzbQEAAAACDQED4f2ABHRlc3QDfwA=",
    "utf8-import-field.38.wasm": "AGFzbQEAAAACDQED7ACABHRlc3QDfwA=",
    "utf8-import-field.39.wasm": "AGFzbQEAAAACDQED7H+ABHRlc3QDfwA=",
    "utf8-import-field.4.wasm": "AGFzbQEAAAACCwEBoAR0ZXN0A38A",
    "utf8-import-field.40.wasm": "AGFzbQEAAAACDQED7MCABHRlc3QDfwA=",
    "utf8-import-field.41.wasm": "AGFzbQEAAAACDQED7P2ABHRlc3QDfwA=",
    "utf8-import-field.42.wasm": "AGFzbQEAAAACDQED7QCABHRlc3QDfwA=",
    "utf8-import-field.43.wasm": "AGFzbQEAAAACDQED7X+ABHRlc3QDfwA=",
    "utf8-import-field.44.wasm": "AGFzbQEAAAACDQED7aCABHRlc3QDfwA=",
    "utf8-import-field.45.wasm": "AGFzbQEAAAACDQED7aC/BHRlc3QDfwA=",
    "utf8-import-field.46.wasm": "AGFzbQEAAAACDQED7b+ABHRlc3QDfwA=",
    "utf8-import-field.47.wasm": "AGFzbQEAAAACDQED7b+/BHRlc3QDfwA=",
    "utf8-import-field.48.wasm": "AGFzbQEAAAACDQED7cCABHRlc3QDfwA=",
    "utf8-import-field.49.wasm": "AGFzbQEAAAACDQED7f2ABHRlc3QDfwA=",
    "utf8-import-field.5.wasm": "AGFzbQEAAAACCwEBvwR0ZXN0A38A",
    "utf8-import-field.50.wasm": "AGFzbQEAAAACDQED7gCABHRlc3QDfwA=",
    "utf8-import-field.51.wasm": "AGFzbQEAAAACDQED7n+ABHRlc3QDfwA=",
    "utf8-import-field.52.wasm": "AGFzbQEAAAACDQED7sCABHRlc3QDfwA=",
    "utf8-import-field.53.wasm": "AGFzbQEAAAACDQED7v2ABHRlc3QDfwA=",
    "utf8-import-field.54.wasm": "AGFzbQEAAAACDQED7wCABHRlc3QDfwA=",
    "utf8-import-field.55.wasm": "AGFzbQEAAAACDQED73+ABHRlc3QDfwA=",
    "utf8-import-field.56.wasm": "AGFzbQEAAAACDQED78CABHRlc3QDfwA=",
    "utf8-import-field.57.wasm": "AGFzbQEAAAACDQED7/2ABHRlc3QDfwA=",
    "utf8-import-field.58.wasm": "AGFzbQEAAAACDQED4KAABHRlc3QDfwA=",
    "utf8-import-field.59.wasm": "AGFzbQEAAAACDQED4KB/BHRlc3QDfwA=",
    "utf8-import-field.6.wasm": "AGFzbQEAAAACDQEDwoCABHRlc3QDfwA=",
    "utf8-import-field.60.wasm": "AGFzbQEAAAACDQED4KDABHRlc3QDfwA=",
    "utf8-import-field.61.wasm": "AGFzbQEAAAACDQED4KD9BHRlc3QDfwA=",
    "utf8-import-field.62.wasm": "AGFzbQEAAAACDQED4YAABHRlc3QDfwA=",
    "utf8-import-field.63.wasm": "AGFzbQEAAAACDQED4YB/BHRlc3QDfwA=",
    "utf8-import-field.64.wasm": "AGFzbQEAAAACDQED4YDABHRlc3QDfwA=",
    "utf8-import-field.65.wasm": "AGFzbQEAAAACDQED4YD9BHRlc3QDfwA=",
    "utf8-import-field.66.wasm": "AGFzbQEAAAACDQED7IAABHRlc3QDfwA=",
    "utf8-import-field.67.wasm": "AGFzbQEAAAACDQED7IB/BHRlc3QDfwA=",
    "utf8-import-field.68.wasm": "AGFzbQEAAAACDQED7IDABHRlc3QDfwA=",
    "utf8-import-field.69.wasm": "AGFzbQEAAAACDQED7ID9BHRlc3QDfwA=",
    "utf8-import-field.7.wasm": "AGFzbQEAAAACCwEBwgR0ZXN0A38A",
    "utf8-import-field.70.wasm": "AGFzbQEAAAACDQED7YAABHRlc3QDfwA=",
    "utf8-import-field.71.wasm": "AGFzbQEAAAACDQED7YB/BHRlc3QDfwA=",
    "utf8-import-field.72.wasm": "AGFzbQEAAAACDQED7YDABHRlc3QDfwA=",
    "utf8-import-field.73.wasm": "AGFzbQEAAAACDQED7YD9BHRlc3QDfwA=",
    "utf8-import-field.74.wasm": "AGFzbQEAAAACDQED7oAABHRlc3QDfwA=",
    "utf8-import-field.75.wasm": "AGFzbQEAAAACDQED7oB/BHRlc3QDfwA=",
    "utf8-import-field.76.wasm": "AGFzbQEAAAACDQED7oDABHRlc3QDfwA=",
    "utf8-import-field.77.wasm": "AGFzbQEAAAACDQED7oD9BHRlc3QDfwA=",
    "utf8-import-field.78.wasm": "AGFzbQEAAAACDQED74AABHRlc3QDfwA=",
    "utf8-import-field.79.wasm": "AGFzbQEAAAACDQED74B/BHRlc3QDfwA=",
    "utf8-import-field.8.wasm": "AGFzbQEAAAACDAECwi4EdGVzdAN/AA==",
    "utf8-import-field.80.wasm": "AGFzbQEAAAACDQED74DABHRlc3QDfwA=",
    "utf8-import-field.81.wasm": "AGFzbQEAAAACDQED74D9BHRlc3QDfwA=",
    "utf8-import-field.82.wasm": "AGFzbQEAAAACDwEF8YCAgIAEdGVzdAN/AA==",
    "utf8-import-field.83.wasm": "AGFzbQEAAAACDQED8YCABHRlc3QDfwA=",
    "utf8-import-field.84.wasm": "AGFzbQEAAAACDgEE8YCAIwR0ZXN0A38A",
    "utf8-import-field.85.wasm": "AGFzbQEAAAACDAEC8YAEdGVzdAN/AA==",
    "utf8-import-field.86.wasm": "AGFzbQEAAAACDQED8YAjBHRlc3QDfwA=",
    "utf8-import-field.87.wasm": "AGFzbQEAAAACCwEB8QR0ZXN0A38A",
    "utf8-import-field.88.wasm": "AGFzbQEAAAACDAEC8SMEdGVzdAN/AA==",
    "utf8-import-field.89.wasm": "AGFzbQEAAAACDgEE8ACQkAR0ZXN0A38A",
    "utf8-import-field.9.wasm": "AGFzbQEAAAACDAECwIAEdGVzdAN/AA==",
    "utf8-import-field.90.wasm": "AGFzbQEAAAACDgEE8H+QkAR0ZXN0A38A",
    "utf8-import-field.91.wasm": "AGFzbQEAAAACDgEE8ICAgAR0ZXN0A38A",
    "utf8-import-field.92.wasm": "AGFzbQEAAAACDgEE8ICQkAR0ZXN0A38A",
    "utf8-import-field.93.wasm": "AGFzbQEAAAACDgEE8I+QkAR0ZXN0A38A",
    "utf8-import-field.94.wasm": "AGFzbQEAAAACDgEE8I+/vwR0ZXN0A38A",
    "utf8-import-field.95.wasm": "AGFzbQEAAAACDgEE8MCQkAR0ZXN0A38A",
    "utf8-import-field.96.wasm": "AGFzbQEAAAACDgEE8P2QkAR0ZXN0A38A",
    "utf8-import-field.97.wasm": "AGFzbQEAAAACDgEE8QCAgAR0ZXN0A38A",
    "utf8-import-field.98.wasm": "AGFzbQEAAAACDgEE8X+AgAR0ZXN0A38A",
    "utf8-import-field.99.wasm": "AGFzbQEAAAACDgEE8cCAgAR0ZXN0A38A"
  },
  "spec": {"source_filename": "/workspace/wasm-spec/test/core/utf8-import-field.wast",
 "commands": [
  {"type": "assert_malformed", "line": 7, "filename": "utf8-import-field.0.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 22, "filename": "utf8-import-field.1.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 37, "filename": "utf8-import-field.2.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 52, "filename": "utf8-import-field.3.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 67, "filename": "utf8-import-field.4.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 82, "filename": "utf8-import-field.5.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 99, "filename": "utf8-import-field.6.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 114, "filename": "utf8-import-field.7.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 129, "filename": "utf8-import-field.8.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 146, "filename": "utf8-import-field.9.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 161, "filename": "utf8-import-field.10.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 176, "filename": "utf8-import-field.11.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 191, "filename": "utf8-import-field.12.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 206, "filename": "utf8-import-field.13.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 221, "filename": "utf8-import-field.14.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 236, "filename": "utf8-import-field.15.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 251, "filename": "utf8-import-field.16.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 266, "filename": "utf8-import-field.17.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 281, "filename": "utf8-import-field.18.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 296, "filename": "utf8-import-field.19.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 311, "filename": "utf8-import-field.20.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 328, "filename": "utf8-import-field.21.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 343, "filename": "utf8-import-field.22.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 358, "filename": "utf8-import-field.23.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 373, "filename": "utf8-import-field.24.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 388, "filename": "utf8-import-field.25.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 405, "filename": "utf8-import-field.26.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 420, "filename": "utf8-import-field.27.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 435, "filename": "utf8-import-field.28.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 450, "filename": "utf8-import-field.29.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 465, "filename": "utf8-import-field.30.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 480, "filename": "utf8-import-field.31.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 495, "filename": "utf8-import-field.32.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 510, "filename": "utf8-import-field.33.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 525, "filename": "utf8-import-field.34.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 540, "filename": "utf8-import-field.35.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 555, "filename": "utf8-import-field.36.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 570, "filename": "utf8-import-field.37.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 585, "filename": "utf8-import-field.38.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 600, "filename": "utf8-import-field.39.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 615, "filename": "utf8-import-field.40.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 630, "filename": "utf8-import-field.41.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 645, "filename": "utf8-import-field.42.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 660, "filename": "utf8-import-field.43.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 675, "filename": "utf8-import-field.44.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 690, "filename": "utf8-import-field.45.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 705, "filename": "utf8-import-field.46.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 720, "filename": "utf8-import-field.47.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 735, "filename": "utf8-import-field.48.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 750, "filename": "utf8-import-field.49.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 765, "filename": "utf8-import-field.50.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 780, "filename": "utf8-import-field.51.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 795, "filename": "utf8-import-field.52.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 810, "filename": "utf8-import-field.53.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 825, "filename": "utf8-import-field.54.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 840, "filename": "utf8-import-field.55.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 855, "filename": "utf8-import-field.56.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 870, "filename": "utf8-import-field.57.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 887, "filename": "utf8-import-field.58.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 902, "filename": "utf8-import-field.59.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 917, "filename": "utf8-import-field.60.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 932, "filename": "utf8-import-field.61.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 947, "filename": "utf8-import-field.62.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 962, "filename": "utf8-import-field.63.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 977, "filename": "utf8-import-field.64.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 992, "filename": "utf8-import-field.65.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1007, "filename": "utf8-import-field.66.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1022, "filename": "utf8-import-field.67.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1037, "filename": "utf8-import-field.68.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1052, "filename": "utf8-import-field.69.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1067, "filename": "utf8-import-field.70.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1082, "filename": "utf8-import-field.71.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1097, "filename": "utf8-import-field.72.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1112, "filename": "utf8-import-field.73.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1127, "filename": "utf8-import-field.74.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1142, "filename": "utf8-import-field.75.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1157, "filename": "utf8-import-field.76.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1172, "filename": "utf8-import-field.77.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1187, "filename": "utf8-import-field.78.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1202, "filename": "utf8-import-field.79.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1217, "filename": "utf8-import-field.80.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1232, "filename": "utf8-import-field.81.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1249, "filename": "utf8-import-field.82.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1264, "filename": "utf8-import-field.83.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1279, "filename": "utf8-import-field.84.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1294, "filename": "utf8-import-field.85.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1309, "filename": "utf8-import-field.86.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1324, "filename": "utf8-import-field.87.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1339, "filename": "utf8-import-field.88.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1356, "filename": "utf8-import-field.89.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1371, "filename": "utf8-import-field.90.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1386, "filename": "utf8-import-field.91.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1401, "filename": "utf8-import-field.92.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1416, "filename": "utf8-import-field.93.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1431, "filename": "utf8-import-field.94.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1446, "filename": "utf8-import-field.95.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1461, "filename": "utf8-import-field.96.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1476, "filename": "utf8-import-field.97.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1491, "filename": "utf8-import-field.98.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1506, "filename": "utf8-import-field.99.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1521, "filename": "utf8-import-field.100.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1536, "filename": "utf8-import-field.101.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1551, "filename": "utf8-import-field.102.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1566, "filename": "utf8-import-field.103.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1581, "filename": "utf8-import-field.104.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1596, "filename": "utf8-import-field.105.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1611, "filename": "utf8-import-field.106.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1626, "filename": "utf8-import-field.107.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1641, "filename": "utf8-import-field.108.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1656, "filename": "utf8-import-field.109.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1671, "filename": "utf8-import-field.110.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1686, "filename": "utf8-import-field.111.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1701, "filename": "utf8-import-field.112.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1716, "filename": "utf8-import-field.113.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1733, "filename": "utf8-import-field.114.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1748, "filename": "utf8-import-field.115.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1763, "filename": "utf8-import-field.116.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1778, "filename": "utf8-import-field.117.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1793, "filename": "utf8-import-field.118.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1808, "filename": "utf8-import-field.119.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1823, "filename": "utf8-import-field.120.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1838, "filename": "utf8-import-field.121.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1853, "filename": "utf8-import-field.122.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1868, "filename": "utf8-import-field.123.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1883, "filename": "utf8-import-field.124.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1898, "filename": "utf8-import-field.125.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1913, "filename": "utf8-import-field.126.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1928, "filename": "utf8-import-field.127.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1943, "filename": "utf8-import-field.128.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1958, "filename": "utf8-import-field.129.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1975, "filename": "utf8-import-field.130.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 1990, "filename": "utf8-import-field.131.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2005, "filename": "utf8-import-field.132.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2020, "filename": "utf8-import-field.133.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2035, "filename": "utf8-import-field.134.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2050, "filename": "utf8-import-field.135.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2065, "filename": "utf8-import-field.136.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2080, "filename": "utf8-import-field.137.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2095, "filename": "utf8-import-field.138.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2110, "filename": "utf8-import-field.139.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2125, "filename": "utf8-import-field.140.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2140, "filename": "utf8-import-field.141.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2155, "filename": "utf8-import-field.142.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2170, "filename": "utf8-import-field.143.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2185, "filename": "utf8-import-field.144.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2200, "filename": "utf8-import-field.145.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2217, "filename": "utf8-import-field.146.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2232, "filename": "utf8-import-field.147.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2247, "filename": "utf8-import-field.148.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2262, "filename": "utf8-import-field.149.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2277, "filename": "utf8-import-field.150.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2292, "filename": "utf8-import-field.151.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2307, "filename": "utf8-import-field.152.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2322, "filename": "utf8-import-field.153.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2337, "filename": "utf8-import-field.154.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2354, "filename": "utf8-import-field.155.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2369, "filename": "utf8-import-field.156.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2386, "filename": "utf8-import-field.157.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2401, "filename": "utf8-import-field.158.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2416, "filename": "utf8-import-field.159.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2431, "filename": "utf8-import-field.160.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2446, "filename": "utf8-import-field.161.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2461, "filename": "utf8-import-field.162.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2476, "filename": "utf8-import-field.163.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2491, "filename": "utf8-import-field.164.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2506, "filename": "utf8-import-field.165.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2521, "filename": "utf8-import-field.166.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2536, "filename": "utf8-import-field.167.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2553, "filename": "utf8-import-field.168.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2568, "filename": "utf8-import-field.169.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2585, "filename": "utf8-import-field.170.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2600, "filename": "utf8-import-field.171.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2615, "filename": "utf8-import-field.172.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2630, "filename": "utf8-import-field.173.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2645, "filename": "utf8-import-field.174.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}, 
  {"type": "assert_malformed", "line": 2660, "filename": "utf8-import-field.175.wasm", "text": "malformed UTF-8 encoding", "module_type": "binary"}]},
  "code": [
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0b\" \"\\01\" \"\\01\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0b\" \"\\01\" \"\\01\\8f\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0b\" \"\\01\" \"\\01\\90\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0b\" \"\\01\" \"\\01\\9f\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0b\" \"\\01\" \"\\01\\a0\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0b\" \"\\01\" \"\\01\\bf\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\c2\\80\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0b\" \"\\01\" \"\\01\\c2\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0c\" \"\\01\" \"\\02\\c2\\2e\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0c\" \"\\01\" \"\\02\\c0\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0c\" \"\\01\" \"\\02\\c0\\bf\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0c\" \"\\01\" \"\\02\\c1\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0c\" \"\\01\" \"\\02\\c1\\bf\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0c\" \"\\01\" \"\\02\\c2\\00\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0c\" \"\\01\" \"\\02\\c2\\7f\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0c\" \"\\01\" \"\\02\\c2\\c0\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0c\" \"\\01\" \"\\02\\c2\\fd\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0c\" \"\\01\" \"\\02\\df\\00\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0c\" \"\\01\" \"\\02\\df\\7f\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0c\" \"\\01\" \"\\02\\df\\c0\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0c\" \"\\01\" \"\\02\\df\\fd\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\e1\\80\\80\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0c\" \"\\01\" \"\\02\\e1\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\e1\\80\\2e\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0b\" \"\\01\" \"\\01\\e1\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0c\" \"\\01\" \"\\02\\e1\\2e\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\e0\\00\\a0\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\e0\\7f\\a0\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\e0\\80\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\e0\\80\\a0\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\e0\\9f\\a0\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\e0\\9f\\bf\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\e0\\c0\\a0\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\e0\\fd\\a0\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\e1\\00\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\e1\\7f\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\e1\\c0\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\e1\\fd\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\ec\\00\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\ec\\7f\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\ec\\c0\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\ec\\fd\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\ed\\00\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\ed\\7f\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\ed\\a0\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\ed\\a0\\bf\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\ed\\bf\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\ed\\bf\\bf\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\ed\\c0\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\ed\\fd\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\ee\\00\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\ee\\7f\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\ee\\c0\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\ee\\fd\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\ef\\00\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\ef\\7f\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\ef\\c0\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\ef\\fd\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\e0\\a0\\00\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\e0\\a0\\7f\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\e0\\a0\\c0\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\e0\\a0\\fd\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\e1\\80\\00\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\e1\\80\\7f\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\e1\\80\\c0\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\e1\\80\\fd\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\ec\\80\\00\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\ec\\80\\7f\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\ec\\80\\c0\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\ec\\80\\fd\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\ed\\80\\00\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\ed\\80\\7f\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\ed\\80\\c0\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\ed\\80\\fd\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\ee\\80\\00\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\ee\\80\\7f\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\ee\\80\\c0\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\ee\\80\\fd\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\ef\\80\\00\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\ef\\80\\7f\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\ef\\80\\c0\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\ef\\80\\fd\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0f\" \"\\01\" \"\\05\\f1\\80\\80\\80\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\f1\\80\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f1\\80\\80\\23\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0c\" \"\\01\" \"\\02\\f1\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\f1\\80\\23\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0b\" \"\\01\" \"\\01\\f1\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0c\" \"\\01\" \"\\02\\f1\\23\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f0\\00\\90\\90\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f0\\7f\\90\\90\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f0\\80\\80\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f0\\80\\90\\90\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f0\\8f\\90\\90\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f0\\8f\\bf\\bf\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f0\\c0\\90\\90\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f0\\fd\\90\\90\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f1\\00\\80\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f1\\7f\\80\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f1\\c0\\80\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f1\\fd\\80\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f3\\00\\80\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f3\\7f\\80\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f3\\c0\\80\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f3\\fd\\80\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f4\\00\\80\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f4\\7f\\80\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f4\\90\\80\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f4\\bf\\80\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f4\\c0\\80\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f4\\fd\\80\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f5\\80\\80\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f7\\80\\80\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f7\\bf\\bf\\bf\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f0\\90\\00\\90\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f0\\90\\7f\\90\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f0\\90\\c0\\90\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f0\\90\\fd\\90\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f1\\80\\00\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f1\\80\\7f\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f1\\80\\c0\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f1\\80\\fd\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f3\\80\\00\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f3\\80\\7f\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f3\\80\\c0\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f3\\80\\fd\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f4\\80\\00\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f4\\80\\7f\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f4\\80\\c0\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f4\\80\\fd\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f0\\90\\90\\00\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f0\\90\\90\\7f\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f0\\90\\90\\c0\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f0\\90\\90\\fd\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f1\\80\\80\\00\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f1\\80\\80\\7f\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f1\\80\\80\\c0\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f1\\80\\80\\fd\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f3\\80\\80\\00\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f3\\80\\80\\7f\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f3\\80\\80\\c0\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f3\\80\\80\\fd\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f4\\80\\80\\00\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f4\\80\\80\\7f\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f4\\80\\80\\c0\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f4\\80\\80\\fd\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\10\" \"\\01\" \"\\06\\f8\\80\\80\\80\\80\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f8\\80\\80\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0f\" \"\\01\" \"\\05\\f8\\80\\80\\80\\23\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\f8\\80\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\f8\\80\\80\\23\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0c\" \"\\01\" \"\\02\\f8\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\f8\\80\\23\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0b\" \"\\01\" \"\\01\\f8\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0c\" \"\\01\" \"\\02\\f8\\23\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0f\" \"\\01\" \"\\05\\f8\\80\\80\\80\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0f\" \"\\01\" \"\\05\\fb\\bf\\bf\\bf\\bf\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\11\" \"\\01\" \"\\07\\fc\\80\\80\\80\\80\\80\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0f\" \"\\01\" \"\\05\\fc\\80\\80\\80\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\10\" \"\\01\" \"\\06\\fc\\80\\80\\80\\80\\23\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\fc\\80\\80\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0f\" \"\\01\" \"\\05\\fc\\80\\80\\80\\23\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\fc\\80\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\fc\\80\\80\\23\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0c\" \"\\01\" \"\\02\\fc\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0d\" \"\\01\" \"\\03\\fc\\80\\23\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0b\" \"\\01\" \"\\01\\fc\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0c\" \"\\01\" \"\\02\\fc\\23\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\10\" \"\\01\" \"\\06\\fc\\80\\80\\80\\80\\80\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\10\" \"\\01\" \"\\06\\fd\\bf\\bf\\bf\\bf\\bf\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0b\" \"\\01\" \"\\01\\fe\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0b\" \"\\01\" \"\\01\\ff\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0c\" \"\\01\" \"\\02\\fe\\ff\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\00\\00\\fe\\ff\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0c\" \"\\01\" \"\\02\\ff\\fe\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")",
    "(assert_malformed (module binary \"\\00asm\" \"\\01\\00\\00\\00\" \"\\02\\0e\" \"\\01\" \"\\04\\ff\\fe\\00\\00\" \"\\04\\74\\65\\73\\74\" \"\\03\" \"\\7f\" \"\\00\" ) \"malformed UTF-8 encoding\")"
  ]
}
